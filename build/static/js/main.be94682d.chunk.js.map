{"version":3,"sources":["Interfaces.ts","components/PaperWrapper.tsx","views/auth/Login.tsx","context/UserContext.ts","components/OrderTable.tsx","components/SearchInput.tsx","components/StatusSelector.tsx","components/OrgSelector.tsx","components/OrderTypeSelector.tsx","components/Filters.tsx","components/EmpyState.tsx","components/OrdersTable.tsx","views/Dashboard.tsx","views/auth/CreateAccount.tsx","components/CreateStepper.tsx","components/FullScreenCreate.tsx","components/CreateWrapper.tsx","components/DisplayOrder.tsx","views/NewOrder/Step3.tsx","components/OrderCard.tsx","views/NewOrder/Step1.tsx","components/AssociationForm.tsx","components/InputGenerator.tsx","components/LandSurveryForm.tsx","components/OrderForms/AddressForm.tsx","components/OrderForms/DataForm.tsx","components/CreateOrderForm.tsx","views/NewOrder/NewOrder.tsx","utils/orders.ts","components/AuthWrapper.tsx","components/AppHeader.tsx","context/LoadingContext.ts","components/AppWrapper.tsx","components/OrderDetails/OrdetStatusController.tsx","components/OrderDetails/OrderAssigneeController.tsx","components/WarnModal.tsx","components/SnackMessage.tsx","components/OrderDetails/OrderDetails.tsx","components/UploadDocuments.tsx","views/OrderInfo.tsx","views/admin/SetAdmin.tsx","views/admin/CreateNewOrg.tsx","views/admin/AddUserToOrg.tsx","views/admin/ManageAdmin.tsx","Routes.tsx","initFirebase.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["OrderTypeEnum","OrderStatusEnum","AddressEnum","OrderDataEnum","LandSurveyDetailsEnum","PaperWrapper","children","classes","useStyles","Paper","className","padding","makeStyles","theme","spacing","Login","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","onSubmit","e","a","preventDefault","firebase","auth","signInWithEmailAndPassword","message","Grid","container","direction","alignItems","item","title","Typography","variant","TextField","type","error","fullWidth","value","onChange","target","label","Button","disabled","color","to","alignSelf","logo","height","UserContext","createContext","headers","OrderTable","orders","Table","TableHead","TableRow","map","entry","index","TableCell","key","TableBody","order","i","Row","history","useHistory","onClick","id","objectID","push","hover","pointer","orderNumber","address","address1","folio","status","Date","created_on","toLocaleString","width","cursor","SearchInput","setValue","xs","InputProps","disableUnderline","placeholder","StatusSelector","setStatus","withLabel","undefined","select","size","MenuItem","Object","keys","s","OrgSelector","orgId","setOrgId","orgOptions","setOrgOptions","user","useContext","db","firestore","useEffect","admin","collection","get","then","querySnapshot","arr","forEach","doc","data","catch","err","console","log","option","name","OrderTypeSelector","orderType","setOrderType","Filters","filters","organizations","sm","md","setter","forOwn","EmptyState","imageFile","description","button","justify","style","maxWidth","image","src","process","alt","align","data-test","text","fill","palette","primary","main","searchClient","algoliasearch","getFilter","Map","generateFilterQuery","initialValue","transform","acc","OrdersTable","setOrders","searchQuery","setSearchQuery","filterStatus","setFilterStatus","filterOrg","setFilterOrg","filterOrderType","setFilterOrderType","useMemo","filtersOptions","getOrders","useCallback","initIndex","filterArr","search","facetFilters","hits","length","Dashboard","isAdmin","wrap","CreateAccount","useForm","register","handleSubmit","pn","PhoneNumber","phoneNumber","getNumber","isValid","Error","createUser","functions","httpsCallable","inputRef","CreateStepper","activeStep","steps","Stepper","step","Step","StepLabel","FullScreenCreate","toolbarHeader","cancelPath","stepComponents","createStep","parseInt","onClose","Dialog","fullScreen","open","AppBar","appBar","Toolbar","IconButton","edge","aria-label","component","position","paper","buttons","marginBottom","CreateWrapper","content","isLast","isFirst","onNext","onCancel","goBack","margin","orderTypeText","orderInfoText","landSurveyDetailsText","orderDetails","landSurveyDetails","DisplayOrder","userData","org","setOrg","requestedBy","setRequestedBy","loading","setLoading","exists","finally","OwnerInfo","Divider","address2","unit","city","state","zipCode","elements","entries","el","getOrderTypes","landSurvey","detail","hardCopy","Step3","associations","uid","now","assignee","update","add","getIcon","OrderCard","selected","icon","borderColor","border","Step1","basePath","orderTypes","setOrderTypes","typeCards","lienSearch","estoppelLetter","permitResolution","c","curr","handleDataChange","cardSelected","AssociationForm","setAssociations","setIsAssociationsReady","updatedData","isReady","some","splice","removeAssociation","autoComplete","required","number","blankAssociation","startIcon","InputGenerator","isNotRequired","isNumber","isBoolean","FormControl","FormGroup","FormControlLabel","control","Checkbox","checked","n","val","current","LandSurveyForm","setLandSurvey","setIsLandSurveyReady","inputList","AddressForm","setAddress","setIsAddressReady","DataForm","orderData","setOrderData","setIsDataReady","utils","DateFnsUtils","format","inputVariant","neededDate","newDate","toLocaleDateString","KeyboardButtonProps","closingDate","CreateOrderForm","setData","isAddressReady","isDataReady","isAssociationsReady","isLandSurveyReady","blankAddress","bankLandSurvey","lenderCertification","buyerCertification","underwriterCertification","titleCompany","blankData","specialInstructions","legalDescription","seller","buyer","listingAgent","listingAgentPhone","blankOrderType","NewOrder","location","preData","preAssocations","useParams","pickBy","_","includes","destructureOrder","extend","CircularProgress","AuthWrapper","CssBaseline","Container","root","flexGrow","menuButton","marginRight","link","textDecoration","AppHeader","React","anchorEl","setAnchorEl","Boolean","currentUser","handleLogout","Firebase","signOut","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","ListItemAvatar","Avatar","charAt","ListItemText","LoadingContext","AppWrapper","LinearProgress","Provider","wordBreak","minWidth","OrderStatusController","currentStatus","setCurrentStatus","OrderAssigneeController","currentAssignee","setCurrentAssignee","userOptions","setUserOptions","WarnModal","setOpen","confirmAction","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","SlideTransition","props","Slide","timeout","MessageSnackbar","setMessage","messageType","timeoutRef","useRef","window","clearTimeout","setTimeout","Snackbar","autoHideDuration","ContentProps","success","TransitionComponent","action","backgroundColor","dark","display","OrderDetails","orderId","modalTitle","setModalTitle","newStatus","newstat","onApply","cardContainer","isEqual","UploadDocuments","listOfFiles","setListOfFiles","setMessageType","uploadLoading","setUploadLoading","docsPath","storage","catchError","createSuccess","listFiles","ref","child","listAll","res","items","file","noWrap","fileName","getDownloadURL","url","xhr","XMLHttpRequest","responseType","onload","blob","response","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","send","delete","input","multiple","files","uploadReference","prom","put","Promise","all","htmlFor","OrderInfo","setOrder","SetAdmin","onSetNewAdminClick","CreateNewOrg","orgName","setOrgName","onCreateOrgClick","setPhoneNumber","AddUserToOrg","userToOrg","setUserToOrg","selectedOrg","setSelectedOrg","orgs","onAddUserToOrgClick","ManageAdming","setOrgs","orgPhoneNumber","setOrgPhoneNumber","orgAddress","setOrgAddress","getOrgs","setNotificationMessage","users","FieldValue","serverTimestamp","addOrgToUser","setAdminUser","authWrap","appWrap","Routes","exact","path","render","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createBrowserHistory","createMuiTheme","secondary","typography","fontFamily","fontSize","subtitle1","fontWeight","h5","overrides","MuiButton","MuiDivider","MuiFormLabel","focused","MuiTextField","MuiOutlinedInput","App","setCurrentUser","onAuthStateChanged","getIdTokenResult","token","userDoc","claims","ThemeProvider","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","registration","scope","ready","unregister"],"mappings":"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","file":"static/js/main.be94682d.chunk.js","sourcesContent":["export interface UserData {\n    email: string;\n    name: string;\n    orgId: string;\n    phoneNumber: string;\n}\n\nexport interface User extends UserData {\n    uid: string;\n    admin: boolean;\n}\n\nexport interface OrdersStats {\n    count: number;\n}\nexport interface OrderType {\n    lienSearch: boolean;\n    estoppelLetter: boolean;\n    landSurvey: boolean;\n    permitResolution: boolean;\n}\n\nexport type Associations = Array<{ name: string; number: string }>;\n\nexport enum OrderTypeEnum {\n    lienSearch = \"Lien Search\",\n    estoppelLetter = \"Estoppel Letter\",\n    landSurvey = \"Land Survey\",\n    permitResolution = \"Permit Resolution\",\n}\n\nexport enum OrderStatusEnum {\n    newOrder = \"New Order\",\n    hold = \"Hold\",\n    informationRequested = \"Information Requested\",\n    informationReceived = \"Information Received\", // Esto deberia sobrar\n    pendingPayment = \"Pending Payment\",\n    cancelled = \"Cancelled\",\n    finalized = \"Finalized\",\n}\n\nexport enum AddressEnum {\n    address1 = 'Address 1',\n    address2 = 'Address 2',\n    unit = \"Unit\",\n    city = \"City\",\n    state = \"State\",\n    zipCode = \"Zip Code\"\n}\n\nexport enum OrderDataEnum {\n    orderNumber = \"Order # / File Name\",\n    folio = \"Folio\",\n    legalDescription = \"Legal Description\",\n    seller = \"Seller\",\n    buyer = \"Buyer\",\n    listingAgent = \"Listing Agent\",\n    listingAgentPhone = \"Listing Agent Phone\",\n    specialInstructions = \"Special Instructions\"\n}\n\nexport enum LandSurveyDetailsEnum {\n    lenderCertification = \"Lender Certification\",\n    buyerCertification = \"Buyer Certification\",\n    underwriterCertification = \"Underwriter Certification\",\n    titleCompany = \"Title Company\",\n    hardCopy = \"Request Hard Copy\"\n}\n\nexport type orderStatusEnumKeys = keyof typeof OrderStatusEnum;\n\nexport type orderTypeEnumKeys = keyof typeof OrderTypeEnum;\n\nexport interface Address {\n    address1: string;\n    address2: string;\n    unit: string;\n    city: string;\n    state: string;\n    zipCode: string;\n}\n\nexport interface LandSurveyDetails {\n    lenderCertification: string;\n    buyerCertification: string;\n    underwriterCertification: string;\n    titleCompany: string;\n    hardCopy: boolean;\n}\n\nexport interface OrderData {\n    orderNumber: string;\n    specialInstructions: string;\n    folio: number;\n    legalDescription: string;\n    requestedBy?: string;\n    closingDate: string;\n    neededDate: string;\n    seller: string;\n    buyer: string;\n    listingAgent?: string;\n    listingAgentPhone?: number;\n}\n\nexport interface CreateOrder extends OrderData {\n    orgId: string;\n    orderType: OrderType;\n    associations?: Associations;\n    landSurvey?: LandSurveyDetails;\n    created_on: number;\n    status: orderStatusEnumKeys;\n    assignee: string;\n    address: Address\n}\n\nexport interface Order extends CreateOrder {\n    id: string;\n    objectID: string; //for algolia\n    orderNumber: string;\n}\n\nexport interface OrgData {\n    name: string;\n    users: string[];\n}\n\nexport interface Org extends OrgData {\n    id: string;\n}\n","import React from 'react';\nimport { Paper, makeStyles } from '@material-ui/core';\n\ninterface Props {\n    children: JSX.Element\n}\n\nexport const PaperWrapper = ({children}: Props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.padding}>\n            {children}\n        </Paper>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    padding: {\n        padding: theme.spacing(5)\n    }\n}))","import React, { useState } from \"react\";\nimport {\n    TextField,\n    Button,\n    Grid,\n    Typography,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { PaperWrapper } from \"../../components/PaperWrapper\";\n\nexport const Login: React.FC = () => {\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const classes = useStyles();\n    const onSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    };\n\n    return (\n        <PaperWrapper>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    <Grid item className={classes.title}>\n                        <Typography variant=\"h5\">Login</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"email\"\n                            error={!!errorMessage}\n                            fullWidth\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            label=\"email\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"submit\"\n                            disabled={!email || !password}\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit\n                        </Button>\n                    </Grid>\n                    <Grid item container alignItems=\"center\" spacing={1}>\n                        <Grid item>\n                            <Typography>Dont have an account?</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/create-account\">Create account</Link>\n                        </Grid>\n                    </Grid>\n                    {errorMessage && (\n                        <Grid item>\n                            <Typography color=\"error\">\n                                {errorMessage}\n                            </Typography>\n                        </Grid>\n                    )}\n                </Grid>\n            </form>\n        </PaperWrapper>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        alignSelf: \"center\",\n    },\n    logo: {\n        height: 150,\n    },\n}));\n","import {createContext} from 'react';\nimport { User } from '../Interfaces';\n\nexport const UserContext =  createContext<User | null>(null);","import React from \"react\";\nimport {\n    Paper,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { Order, OrderStatusEnum } from \"../Interfaces\";\nimport { useHistory } from \"react-router-dom\";\n\nconst headers = [\n    \"Order # / File Name\",\n    \"Address\",\n    \"Folio\",\n    \"Status\",\n    \"Created\",\n];\n\ninterface Props {\n    orders: Order[];\n}\n\nexport const OrderTable = ({ orders }: Props) => {\n    return (\n        <Paper>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {headers.map((entry, index) => (\n                            <TableCell key={`header${index}`}>\n                                {entry}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders.map((order, i) => (\n                        <Row key={`order-${i}`} {...{ order }} />\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\ninterface RowProps {\n    order: Order;\n}\n\nconst Row = ({ order }: RowProps) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const onClick = (id: string) => {\n        history.push(`/order/${id}`);\n    };\n\n    return (\n        <TableRow\n            onClick={() => onClick(order.objectID)}\n            hover\n            className={classes.pointer}\n        >\n            <TableCell>{order.orderNumber || \"--\"}</TableCell>\n            <TableCell>{order.address.address1 || \"--\"}</TableCell>\n            <TableCell>{order.folio || \"--\"}</TableCell>\n            <TableCell>{OrderStatusEnum[order.status] || \"--\"}</TableCell>\n            <TableCell>\n                {new Date(order.created_on).toLocaleString() || \"--\"}\n            </TableCell>\n        </TableRow>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"80vw\",\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\ninterface Props {\n    value: string;\n    setValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const SearchInput = ({ value, setValue }: Props) => {\n\n    return (\n        <Grid item container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n                <SearchIcon color=\"disabled\" />\n            </Grid>\n            <Grid item xs={9}>\n                <TextField\n                    InputProps={{disableUnderline: true}}\n                    fullWidth\n                    {...{ value }}\n                    onChange={(e) => setValue(e.target.value)}\n                    placeholder=\"Search by address, zip code, status, or folio...\"\n                />\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { OrderStatusEnum, orderStatusEnumKeys } from \"../Interfaces\";\n\n\ninterface Props {\n    status: orderStatusEnumKeys | '';\n    setStatus: React.Dispatch<React.SetStateAction<orderStatusEnumKeys | ''>>\n    withLabel?: boolean\n}\n\nexport const StatusSelector = ({ status, setStatus, withLabel }: Props) => {\n    return (\n        <TextField\n            label={withLabel ? 'Status' : undefined}\n            select\n            value={status}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            onChange={(e) => setStatus(e.target.value as orderStatusEnumKeys)}\n        >\n            <MenuItem value=\"\">All</MenuItem>\n            {Object.keys(OrderStatusEnum).map((s, index) => (\n                <MenuItem key={`${index}-${s}`} value={s}>\n                    {OrderStatusEnum[s as orderStatusEnumKeys]}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport firebase from \"firebase/app\";\nimport { Org, OrgData } from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n    orgId: string;\n    setOrgId: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const OrgSelector = ({\n    orgId,\n    setOrgId,\n}: Props) => {\n    const [orgOptions, setOrgOptions] = useState<Org[]>([]);\n\n    const user = useContext(UserContext);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (user?.admin) {\n            db.collection(\"organizations\")\n                .get()\n                .then((querySnapshot) => {\n                    const arr: Org[] = [];\n                    querySnapshot.forEach((doc) => {\n                        arr.push({ id: doc.id, ...(doc.data() as OrgData)});\n                    });\n                    setOrgOptions(arr);\n                })\n                .catch((err) => console.log(err));\n        }\n    }, [user, db]);\n\n    return (\n        <Grid item>\n            <TextField\n                label=\"Organization\"\n                select\n                variant=\"outlined\"\n                fullWidth\n                value={orgId}\n                size=\"small\"\n                onChange={(e) => setOrgId(e.target.value)}\n            >\n                <MenuItem value=\"\">All</MenuItem>\n                {orgOptions.map((option, index) => (\n                    <MenuItem key={`status-${index}`} value={option.id}>\n                        {option.name}\n                    </MenuItem>\n                ))}\n            </TextField>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { OrderTypeEnum, orderTypeEnumKeys } from \"../Interfaces\";\n\ninterface Props {\n    orderType: orderTypeEnumKeys | '';\n    setOrderType: React.Dispatch<React.SetStateAction<orderTypeEnumKeys | ''>>\n}\n\nexport const OrderTypeSelector = ({ orderType, setOrderType }: Props) => {\n    return (\n        <TextField\n            label='Order Type'\n            select\n            value={orderType}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            onChange={(e) => setOrderType(e.target.value as orderTypeEnumKeys)}\n        >\n            <MenuItem value=\"\">All</MenuItem>\n            {Object.keys(OrderTypeEnum).map((s, index) => (\n                <MenuItem key={`${index}-${s}`} value={s}>\n                    {OrderTypeEnum[s as orderTypeEnumKeys]}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { StatusSelector } from \"./StatusSelector\";\nimport { OrgSelector } from \"./OrgSelector\";\nimport { orderStatusEnumKeys, orderTypeEnumKeys } from \"../Interfaces\";\nimport { OrderTypeSelector } from \"./OrderTypeSelector\";\nimport { forOwn } from \"lodash\";\n\nexport interface FilterOptions {\n    status: {\n        value: orderStatusEnumKeys | \"\";\n        setter: React.Dispatch<React.SetStateAction<orderStatusEnumKeys | \"\">>;\n    }\n    orderType: {\n        value: orderTypeEnumKeys | \"\";\n        setter: React.Dispatch<React.SetStateAction<orderTypeEnumKeys | \"\">>;\n    }\n    organizations?: {\n        value: string;\n        setter: React.Dispatch<React.SetStateAction<string>>;\n    }\n}\n\ninterface Props {\n    filters: FilterOptions;\n}\n\nexport const Filters = ({ filters }: Props) => {\n    const { status, organizations, orderType } = filters;\n\n    const clearFilters = () => {\n        forOwn(filters, value => value && value.setter(\"\"));\n    };\n\n    return (\n        <Grid item container spacing={3} alignItems=\"center\">\n            {status && (\n                <Grid item xs={12} sm={3} md={2}>\n                    <StatusSelector\n                        status={status.value}\n                        setStatus={status.setter}\n                        withLabel\n                    />\n                </Grid>\n            )}\n            {organizations && (\n                <Grid item xs={12} sm={3} md={2}>\n                    <OrgSelector\n                        orgId={organizations.value}\n                        setOrgId={organizations.setter}\n                    />\n                </Grid>\n            )}\n            {orderType && (\n                <Grid item xs={12} sm={3} md={2}>\n                    <OrderTypeSelector\n                        orderType={orderType.value}\n                        setOrderType={orderType.setter}\n                    />\n                </Grid>\n            )}\n            <Grid item xs={12} sm={3} md={2}>\n                <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={clearFilters}\n                >\n                    Clear Filters\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { Typography, Grid, Button, makeStyles } from \"@material-ui/core\";\n\ninterface Props {\n    imageFile: string;\n    title: string;\n    description?: string;\n    button?: { text: string; onClick: () => void; disabled?: boolean };\n    documentation?: { text: string; link: string };\n    width?: number;\n}\n\nexport const EmptyState = ({\n    imageFile,\n    title,\n    description,\n    button,\n    width,\n}: Props) => {\n    const classes = useStyles();\n\n    return (\n        <Grid\n            item\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n        >\n            <Grid item>\n                <img\n                    style={width ? { maxWidth: width } : undefined}\n                    className={classes.image}\n                    src={`${process.env.PUBLIC_URL}/Illustrations/${imageFile}`}\n                    alt=\"\"\n                ></img>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"h6\">{title}</Typography>\n            </Grid>\n            {description && (\n                <Grid item xs={8}>\n                    <Typography align=\"center\" variant=\"body2\">\n                        {description}\n                    </Typography>\n                </Grid>\n            )}\n\n            {button && (\n                <Grid item>\n                    <Button\n                        data-test=\"button_emptyCreate\"\n                        disabled={button.disabled}\n                        color=\"primary\"\n                        size=\"large\"\n                        variant=\"contained\"\n                        onClick={button.onClick}\n                    >\n                        {button.text}\n                    </Button>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        maxWidth: \"350px\",\n        fill: theme.palette.primary.main,\n    },\n}));\n","import React, {\n    useEffect,\n    useState,\n    useCallback,\n    useContext,\n    useMemo,\n} from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport algoliasearch from \"algoliasearch/lite\";\nimport { OrderTable } from \"./OrderTable\";\nimport { Order, orderStatusEnumKeys, orderTypeEnumKeys } from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\nimport { SearchInput } from \"./SearchInput\";\nimport { FilterOptions, Filters } from \"./Filters\";\nimport { transform } from \"lodash\";\nimport { EmptyState } from \"./EmpyState\";\n\nconst searchClient = algoliasearch(\n    \"1AVZX9L93I\",\n    \"68be777ac13a6002caf326d9bcfbf90a\"\n);\n\n//This two have to be always in order\n\nconst getFilter: Map<keyof FilterOptions, (value: string) => string> = new Map([\n    [\"organizations\", (value: string) => `orgId:${value}`],\n    [\"orderType\", (value: string) => `orderType.${value}:true`],\n    [\"status\", (value: string) => `status:${value}`],\n]);\n\nconst generateFilterQuery = (\n    filters: FilterOptions,\n    initialValue?: string[]\n) => {\n    return transform(\n        { ...filters },\n        (acc, value, key) => {\n            if (value?.value) {\n                return acc.push(\n                    getFilter.get(key as keyof FilterOptions)!(value.value)\n                );\n            }\n            return acc;\n        },\n        initialValue || []\n    );\n};\n\nexport const OrdersTable = () => {\n    const [orders, setOrders] = useState<Order[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [filterStatus, setFilterStatus] = useState<orderStatusEnumKeys | \"\">(\n        \"\"\n    );\n    const [filterOrg, setFilterOrg] = useState(\"\");\n    const [filterOrderType, setFilterOrderType] = useState<\n        orderTypeEnumKeys | \"\"\n    >(\"\");\n    const user = useContext(UserContext);\n\n    const filters = useMemo(() => {\n        let filtersOptions: FilterOptions = {\n            status: {\n                value: filterStatus,\n                setter: setFilterStatus,\n            },\n            orderType: {\n                value: filterOrderType,\n                setter: setFilterOrderType,\n            },\n        };\n\n        if (user?.admin)\n            filtersOptions.organizations = {\n                value: filterOrg,\n                setter: setFilterOrg,\n            };\n        return filtersOptions;\n    }, [user, filterStatus, filterOrderType, filterOrg]);\n\n    const getOrders = useCallback(async () => {\n        const index = await searchClient.initIndex(\"orders\");\n\n        let filterArr: string[] = [];\n\n        if (user && !user?.admin) {\n            filterArr = [`orgId:${user.orgId}`];\n        }\n\n        filterArr = generateFilterQuery(filters, filterArr);\n\n        index\n            .search(searchQuery, {\n                facetFilters: filterArr,\n            })\n            .then(({ hits }) => {\n                setOrders(hits as Order[]);\n            });\n    }, [user, searchQuery, filters]);\n\n    useEffect(() => {\n        getOrders();\n    }, [getOrders]);\n\n    return (\n        <Grid container direction=\"column\" spacing={4}>\n            <Grid item container direction=\"column\" spacing={2}>\n                <Grid item container>\n                    <Filters {...{ filters }} />\n                </Grid>\n                <Grid item>\n                    <SearchInput\n                        value={searchQuery}\n                        setValue={setSearchQuery}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item>\n                {orders.length === 0 ? (\n                    <EmptyState title=\"No Orders Found\" imageFile=\"orders.svg\" />\n                ) : (\n                    <OrderTable {...{ orders }} />\n                )}\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, Button, makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nimport { OrdersTable } from \"../components/OrdersTable\";\n\nexport const Dashboard: React.FC = () => {\n    const history = useHistory();\n\n    const user = useContext(UserContext);\n\n    const classes = useStyles();\n\n    const isAdmin = user?.admin;\n\n    return (\n        <Grid\n            item\n            container\n            direction=\"column\"\n            spacing={5}\n            className={classes.container}\n        >\n            <Grid\n                item\n                container\n                wrap=\"nowrap\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <Typography variant=\"h5\">Orders</Typography>\n                </Grid>\n                {!isAdmin && (\n                    <Grid item>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={() => history.push(\"/new-order/1\")}\n                        >\n                            New Order\n                        </Button>\n                    </Grid>\n                )}\n            </Grid>\n            <Grid item container spacing={3} direction=\"column\">\n                <Grid item>\n                    <OrdersTable />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"80vw\",\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n","import React, { useState, BaseSyntheticEvent } from \"react\";\nimport {\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { useForm } from \"react-hook-form\";\nimport PhoneNumber from \"awesome-phonenumber\";\nimport { User } from \"../../Interfaces\";\nimport { PaperWrapper } from \"../../components/PaperWrapper\";\n\ninterface UserCreation extends User {\n    confirmPassword: string;\n    password: string;\n}\n\nexport const CreateAccount: React.FC = () => {\n    const classes = useStyles();\n\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const { register, handleSubmit } = useForm<UserCreation>();\n\n    const history = useHistory();\n\n    const onSubmit = async (\n        data: UserCreation,\n        e: BaseSyntheticEvent<object, any, any> | undefined\n    ) => {\n        e && e.preventDefault();\n        setErrorMessage(\"\");\n        let pn = new PhoneNumber(data.phoneNumber, \"US\");\n        console.log(pn.getNumber());\n        try {\n            if (!pn.isValid())\n                throw new Error(\"Please input valid phone number\");\n            const createUser = firebase.functions().httpsCallable(\"createUser\");\n            await createUser({\n                email: data.email,\n                password: data.password,\n                name: data.name,\n                orgId: data.orgId,\n                phoneNumber: pn.getNumber(),\n            });\n            history.push(\"/\");\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    };\n\n    return (\n        <PaperWrapper>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n            >\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    <Grid item className={classes.title}>\n                        <Typography variant=\"h5\">Create Account</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"email\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            name=\"email\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"name\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Name\"\n                            variant=\"outlined\"\n                            name=\"name\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"phone\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Phone Number\"\n                            variant=\"outlined\"\n                            name=\"phoneNumber\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"id\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Organization Id\"\n                            variant=\"outlined\"\n                            name=\"orgId\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            name=\"password\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"Confirm Password\"\n                            variant=\"outlined\"\n                            name=\"confirmedPassword\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit\n                        </Button>\n                    </Grid>\n                    <Grid item container alignItems=\"center\" spacing={1}>\n                        <Grid item>\n                            <Typography>Already have an account?</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/\">Login</Link>\n                        </Grid>\n                    </Grid>\n                    {errorMessage && (\n                        <Grid item>\n                            <Typography color=\"error\">\n                                {errorMessage}\n                            </Typography>\n                        </Grid>\n                    )}\n                </Grid>\n            </form>\n        </PaperWrapper>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        alignSelf: \"center\",\n    },\n}));\n","import React from 'react';\nimport {Stepper, Step, StepLabel} from '@material-ui/core';\n\ninterface Props {\n    activeStep: number,\n    steps: Array<{\n        label: string\n    }>\n}\n\nexport const CreateStepper = ({activeStep, steps}: Props) => {\n\n    return (\n        <Stepper activeStep={activeStep}>\n            {steps.map(step => (\n                <Step key={step.label}>\n                    <StepLabel>{step.label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    )\n}","import React from 'react';\nimport { Dialog, Grid, AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useHistory } from 'react-router-dom';\nimport { CreateStepper } from './CreateStepper';\n\ninterface Props {\n    toolbarHeader: string,\n    cancelPath: string,\n    activeStep: string,\n    stepComponents: Array<{\n        label: string,\n        component: JSX.Element,\n    }>\n}\n\nexport const FullScreenCreate = ({activeStep, toolbarHeader, cancelPath, stepComponents}: Props) => {\n\n    const history = useHistory();\n    const classes = useStyles();\n    \n    const createStep = parseInt(activeStep) - 1;\n\n    const onClose = () => history.push(cancelPath);\n\n    return (\n        <Dialog fullScreen open={true} onClose={onClose}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {toolbarHeader}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction=\"column\">\n                <Grid container item justify=\"center\">\n                    <CreateStepper activeStep={createStep} steps={stepComponents} />\n                </Grid>\n                <Grid item container justify=\"center\">\n                    {stepComponents[createStep]?.component ?? 'Error'}\n                </Grid>\n            </Grid>\n        </Dialog>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative'\n    },\n    paper: {\n        padding: theme.spacing(4, 5, 2, 5)\n    },\n    buttons: {\n        marginBottom: theme.spacing(2)\n    }\n}))","import React from 'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\ninterface Props {\n    content: JSX.Element\n    isLast?: boolean\n    isFirst?: boolean\n    onNext: () => void\n    onCancel?: () => void\n    disabled?: boolean\n}\n\nexport const CreateWrapper = ({content, isLast, isFirst, onNext, onCancel, disabled = false}: Props) => {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const onBack = () => history.goBack();\n\n    return (\n        <Grid item container direction=\"column\" spacing={3} className={classes.container}>\n            {content}\n            <Grid item container spacing={2} justify=\"flex-end\" className={classes.buttons}>\n                <Grid item>\n                    <Button onClick={onCancel || onBack} variant=\"contained\" color=\"primary\">{isFirst ? 'Cancel' : 'Back'}</Button>\n                </Grid>\n                <Grid item>\n                    <Button onClick={onNext} disabled={disabled} variant=\"contained\" color=\"primary\">{isLast ? 'Finish' : 'Next'}</Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: theme.spacing(0, 5)\n    },\n    buttons: {\n        marginBottom: theme.spacing(2)\n    }\n}))","import React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, Typography, Divider, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {\n    Order,\n    OrderType,\n    OrderData,\n    Org,\n    CreateOrder,\n    LandSurveyDetails,\n} from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\nimport firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n    order: Order | CreateOrder;\n    type: \"create\" | \"info\";\n}\n\nconst orderTypeText = new Map<keyof OrderType, string>([\n    [\"lienSearch\", \"Lien Search\"],\n    [\"estoppelLetter\", \"Estoppel Letter\"],\n    [\"landSurvey\", \"Land Survey\"],\n    [\"permitResolution\", \"Permit Resolution\"],\n]);\n\nconst orderInfoText = new Map<keyof OrderData, string>([\n    [\"folio\", \"Folio\"],\n    [\"legalDescription\", \"legal Description\"],\n    [\"closingDate\", \"Closing Date\"],\n    [\"neededDate\", \"Needed Date\"],\n    [\"seller\", \"Seller\"],\n    [\"buyer\", \"Buyer\"],\n    [\"listingAgent\", \"Listing Agent\"],\n    [\"listingAgentPhone\", \"Listing Agent Phone\"],\n    [\"specialInstructions\", \"Special Instructions\"],\n]);\n\nconst landSurveyDetailsText = new Map<keyof LandSurveyDetails, string>([\n    [\"buyerCertification\", \"Buyer Certification\"],\n    [\"lenderCertification\", \"Lender Certification\"],\n    [\"titleCompany\", \"Title Company\"],\n    [\"underwriterCertification\", \"Underwriter Certficiation\"],\n]);\n\nconst orderDetails: Array<keyof OrderData> = [\n    \"folio\",\n    \"closingDate\",\n    \"neededDate\",\n    \"buyer\",\n    \"listingAgent\",\n    \"listingAgentPhone\",\n    \"legalDescription\",\n    \"specialInstructions\",\n];\n\nconst landSurveyDetails: Array<keyof LandSurveyDetails> = [\n    \"buyerCertification\",\n    \"lenderCertification\",\n    \"titleCompany\",\n    \"underwriterCertification\",\n];\n\nexport const DisplayOrder = ({ order, type }: Props) => {\n    const userData = useContext(UserContext);\n    const db = firebase.firestore();\n    const history = useHistory();\n\n    const [org, setOrg] = useState<Org | null>(null);\n    const [requestedBy, setRequestedBy] = useState<string | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (order.orgId) {\n            db.collection(\"organizations\")\n                .doc(order.orgId)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) setOrg(null);\n                    setOrg(doc.data() as Org);\n                })\n                .catch((err) => console.log(err))\n                .finally(() => setLoading(false));\n        } else {\n            setOrg(null);\n            setLoading(false);\n        }\n    }, [order, db]);\n\n    useEffect(() => {\n        if (type === \"info\" && order.requestedBy) {\n            db.collection(\"users\")\n                .doc(order.requestedBy)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) setRequestedBy(null);\n                    setRequestedBy(doc.data()?.email ?? (\"\" as string));\n                })\n                .catch((err) => console.log(\"here\", err))\n                .finally(() => setLoading(false));\n        } else {\n            setRequestedBy(userData?.email ?? \"\");\n        }\n    }, [order, type, db, userData]);\n\n    const getOrderTypes = () => {\n        const elements = [];\n        for (let [key, value] of Object.entries(order.orderType)) {\n            const el = (\n                <Grid\n                    item\n                    container\n                    alignItems=\"center\"\n                    justify=\"space-between\"\n                    key={key}\n                >\n                    <Grid item>\n                        <Typography variant=\"body1\">\n                            {orderTypeText.get(key as keyof OrderType)}\n                        </Typography>\n                    </Grid>\n                    <Grid item>{value ? <CheckIcon /> : <CloseIcon />}</Grid>\n                </Grid>\n            );\n            elements.push(el);\n        }\n        return elements;\n    };\n\n    const displayInfo = () => {\n        return orderDetails.map((detail) => {\n            return (\n                <Grid\n                    item\n                    container\n                    alignItems=\"center\"\n                    justify=\"space-between\"\n                    key={detail}\n                >\n                    <Grid item xs={4}>\n                        <Typography variant=\"body1\">\n                            {orderInfoText.get(detail)}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Typography variant=\"body2\">\n                            {order[detail] || \"--\"}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        });\n    };\n\n    const LandSurveyInfo = () => {\n        return (\n            <>\n                {landSurveyDetails.map((detail) => {\n                    return (\n                        <Grid\n                            item\n                            container\n                            alignItems=\"center\"\n                            justify=\"space-between\"\n                            key={detail}\n                        >\n                            <Grid item xs={4}>\n                                <Typography variant=\"body1\">\n                                    {landSurveyDetailsText.get(detail)}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <Typography variant=\"body2\">\n                                    {order.landSurvey![detail] || \"--\"}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    );\n                })}\n                <Grid\n                    item\n                    container\n                    alignItems=\"center\"\n                    justify=\"space-between\"\n                >\n                    <Grid item xs={4}>\n                        <Typography variant=\"body1\">\n                            Include Hard Copy\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={8}>\n                        {order.landSurvey!.hardCopy ? (\n                            <CheckIcon />\n                        ) : (\n                            <CloseIcon />\n                        )}\n                    </Grid>\n                </Grid>\n            </>\n        );\n    };\n\n    const OwnerInfo = (\n        <>\n            <Grid item container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <Typography variant=\"body1\">Requested By</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"body2\">\n                        {requestedBy ?? \"No User Found\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Grid item container alignItems=\"center\" justify=\"space-between\">\n                <Grid item>\n                    <Typography variant=\"body1\">Company</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"body2\">\n                        {org ? org.name : \"No Company Found\"}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    function isOrder(order: Order | CreateOrder): order is Order {\n        return true;\n    }\n\n    if (loading) return <></>;\n\n    console.log(order)\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\">Review Order</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={3}>\n                {type === \"info\" && (\n                    <Grid item container direction=\"column\" spacing={1} xs={4}>\n                        <Grid item>\n                            <Typography variant=\"h6\">Order Owner</Typography>\n                            <Divider />\n                        </Grid>\n                        {OwnerInfo}\n                    </Grid>\n                )}\n                <Grid\n                    item\n                    container\n                    xs={type === \"info\" ? 4 : 3}\n                    spacing={1}\n                    direction=\"column\"\n                >\n                    <Grid item>\n                        <Typography variant=\"h6\">Property Address</Typography>\n                        <Divider />\n                    </Grid>\n                    <Grid item container direction=\"column\" spacing={1}>\n                        <Grid item>\n                            <Typography>{order?.address.address1}</Typography>\n                        </Grid>\n                        {order?.address.address2 && (\n                            <Grid item>\n                                <Typography>\n                                    {order.address.address2}\n                                </Typography>\n                            </Grid>\n                        )}\n                        {order?.address.unit && (\n                            <Grid item>\n                                <Typography>{order.address.unit}</Typography>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Typography>{`${order?.address.city}, ${order?.address.state} ${order?.address.zipCode}`}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    xs={type === \"info\" ? 4 : 3}\n                    spacing={1}\n                >\n                    <Grid item>\n                        <Typography variant=\"h6\">Order Type</Typography>\n                        <Divider />\n                    </Grid>\n                    {getOrderTypes()}\n                </Grid>\n                {order.landSurvey && (\n                    <Grid\n                        item\n                        container\n                        xs={type === \"info\" ? 12 : 6}\n                        direction=\"column\"\n                        spacing={1}\n                    >\n                        <Grid item>\n                            <Typography variant=\"h6\">\n                                Land Survey Info\n                            </Typography>\n                            <Divider />\n                        </Grid>\n                        {LandSurveyInfo()}\n                    </Grid>\n                )}\n\n                <Grid\n                    item\n                    container\n                    xs={type === \"info\" ? 12 : 6}\n                    direction=\"column\"\n                    spacing={1}\n                >\n                    <Grid item>\n                        <Typography variant=\"h6\">Order Details</Typography>\n                        <Divider />\n                    </Grid>\n                    {displayInfo()}\n                </Grid>\n                {isOrder(order) &&\n                    type === \"info\" &&\n                    order.status !== \"cancelled\" &&\n                    order.status !== \"finalized\" && (\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() =>\n                                    history.push(`/update/${order.id}/1`)\n                                }\n                            >\n                                Update Order\n                            </Button>\n                        </Grid>\n                    )}\n            </Grid>\n        </>\n    );\n};\n","import React, { useState, useContext } from \"react\";\nimport { CreateWrapper } from \"../../components/CreateWrapper\";\nimport firebase from \"firebase/app\";\nimport {\n    OrderType,\n    OrderData,\n    CreateOrder,\n    Address,\n    LandSurveyDetails,\n} from \"../../Interfaces\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { DisplayOrder } from \"../../components/DisplayOrder\";\nimport { useHistory } from \"react-router-dom\";\nimport { Associations } from \"./NewOrder\";\n\ninterface Props {\n    data: OrderData;\n    address: Address;\n    landSurvey: LandSurveyDetails;\n    associations: Associations\n    orderType: OrderType;\n    id: string;\n}\n\nexport const Step3 = ({ data, associations, orderType, address, landSurvey, id }: Props) => {\n    const [loading, setLoading] = useState(false);\n\n    const userData = useContext(UserContext);\n    const history = useHistory();\n\n    const db = firebase.firestore();\n\n    const order: CreateOrder = {\n        ...data,\n        address,\n        landSurvey,\n        associations,\n        orderType,\n        requestedBy: userData?.uid || \"\",\n        orgId: userData?.orgId || \"\",\n        created_on: Date.now(),\n        status: \"newOrder\",\n        assignee: \"\",\n    };\n\n    console.log(order)\n\n    const onSubmit = async () => {\n        setLoading(true);\n        try {\n            if (id) {\n                await db.collection(\"orders\").doc(id).update(order);\n                history.push(`/order/${id}`);\n            } else {\n                await db.collection(\"orders\").add(order);\n                history.push(\"/\");\n            }\n        } catch (err) {\n            console.log(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const content = <DisplayOrder {...{ order }} type=\"create\" />;\n\n    return (\n        <CreateWrapper\n            {...{ content }}\n            isLast\n            onNext={onSubmit}\n            disabled={loading}\n        />\n    );\n};\n","import React from \"react\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport { orderTypeEnumKeys, OrderTypeEnum } from \"../Interfaces\";\nimport LandscapeIcon from \"@material-ui/icons/Landscape\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PolicyIcon from \"@material-ui/icons/Policy\";\n\ninterface Props {\n    type: orderTypeEnumKeys;\n    selected: Boolean;\n}\n\nconst getIcon: Map<orderTypeEnumKeys, JSX.Element> = new Map([\n    [\"landSurvey\", <LandscapeIcon />],\n    [\"estoppelLetter\", <EmailIcon />],\n    [\"lienSearch\", <SearchIcon />],\n    [\"permitResolution\", <PolicyIcon />],\n]);\n\nexport const OrderCard = ({ type, selected }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={`${classes.container} ${selected ? classes.selected : ''}`}>\n            <Grid container alignItems=\"center\" spacing={1}>\n                <Grid item>\n                    <div>{getIcon.get(type)}</div>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"h6\">\n                        {OrderTypeEnum[type]}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(3),\n    },\n    icon: {\n        margin: theme.spacing(0, 2),\n    },\n    selected: {\n        borderColor: theme.palette.primary.main,\n        border: 'solid'\n    }\n}));\n","import React from \"react\";\nimport { CreateWrapper } from \"../../components/CreateWrapper\";\nimport { Grid, Typography, makeStyles, Divider } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { OrderType } from \"../../Interfaces\";\nimport { OrderCard } from \"../../components/OrderCard\";\n\ninterface Props {\n    basePath: string;\n    orderTypes: OrderType;\n    setOrderTypes: React.Dispatch<React.SetStateAction<OrderType>>;\n}\nexport const Step1 = ({ basePath, orderTypes, setOrderTypes }: Props) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const onNext = () => {\n        history.push(`${basePath}/2`, {\n            orderType: orderTypes,\n        });\n    };\n\n    const typeCards: {\n        name: keyof OrderType;\n        label: string;\n        selected: boolean;\n        description: string;\n    }[] = [\n        {\n            name: \"lienSearch\",\n            label: \"Lien Search\",\n            selected: orderTypes.lienSearch,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"estoppelLetter\",\n            label: \"Estoppel Letter\",\n            selected: orderTypes.estoppelLetter,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"landSurvey\",\n            label: \"Land Survey\",\n            selected: orderTypes.landSurvey,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"permitResolution\",\n            label: \"Permit Resolution\",\n            selected: orderTypes.permitResolution,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n    ];\n\n    const handleDataChange = (type: keyof OrderType) => {\n        setOrderTypes((c) => {\n            let curr = { ...c };\n            curr[type] = !curr[type];\n            return curr;\n        });\n    };\n\n    const content = (\n        <>\n            <Grid item>\n                <Typography variant=\"h6\">Select Type of Order</Typography>\n                <Divider />\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body1\">\n                    You can select multiple order types for the same property\n                </Typography>\n            </Grid>\n            <Grid item container spacing={2}>\n                {typeCards.map((type, index) => (\n                    <Grid\n                        key={`type-${index}`}\n                        item\n                        xs={6}\n                        md={3}\n                        onClick={() => handleDataChange(type.name)}\n                    >\n                        <OrderCard\n                            type={type.name}\n                            selected={orderTypes[type.name]}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n\n    return <CreateWrapper {...{ content }} isFirst {...{ onNext }} />;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardSelected: {\n        border: \"solid\",\n        borderColor: theme.palette.primary.main,\n    },\n}));\n","import React, { useEffect } from 'react';\nimport { Grid, Typography, Divider, TextField, Button, IconButton } from '@material-ui/core';\nimport { Associations, blankAssociation } from '../views/NewOrder/NewOrder';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport {some} from 'lodash';\n\ninterface Props {\n    setAssociations: React.Dispatch<React.SetStateAction<Associations>>,\n    associations: Associations\n    setIsAssociationsReady: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface AssociationData {\n    name: string\n    number: string\n}\n\nexport const AssociationForm = ({setAssociations, associations, setIsAssociationsReady}: Props) => {\n    \n    const addAssociation = () => {\n        setAssociations(c => [...c, {...blankAssociation}])\n    }\n\n    const removeAssociation = (index: number) => {\n        setAssociations(c => {\n            let arr = [...c];\n            arr.splice(index, 1);\n            return arr;\n        })\n    }\n\n    const handleDataChange = (name: keyof AssociationData, e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\n        const updatedData = [...associations];\n        updatedData[index][name] = e.target.value;\n        setAssociations(updatedData);\n    };\n\n    useEffect(() => {\n        const isReady = !associations.some(item => some(item, (value) => !value) )\n        setIsAssociationsReady(isReady)\n    }, [associations, setIsAssociationsReady])\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\">Associations (Estoppel Letter)</Typography>\n                <Divider />\n            </Grid>\n            {associations.map((entry, index) => (\n                <Grid item container key={`association-form-${index}`} alignItems=\"center\" spacing={2}>\n                    <Grid item container alignItems=\"center\" spacing={1} xs={6} md={6}>\n                        {index !== 0 && (\n                            <Grid item xs={1}>\n                                <IconButton onClick={() => removeAssociation(index)} size=\"small\">\n                                    <CloseIcon />\n                                </IconButton>\n                            </Grid>\n                        )}\n                        <Grid item xs={index !== 0 ? 11 : 12}>\n                            <TextField fullWidth \n                                autoComplete='nope'\n                                required={true} \n                                label='Association Name'\n                                value={entry.name}\n                                variant=\"outlined\"\n                                onChange={e => handleDataChange('name', e, index) } />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                        <TextField fullWidth \n                            autoComplete='nope'\n                            required={true}\n                            label='Association Number'\n                            value={entry.number}\n                            variant=\"outlined\"\n                            onChange={e => handleDataChange('number', e, index) } />\n                    </Grid>\n                </Grid>\n            ))}\n            <Grid item xs={3}>\n                <Button variant='text' onClick={addAssociation}  startIcon={<AddIcon />}>\n                    Add Association\n                </Button> \n            </Grid>\n        </>\n    )\n}","import React from \"react\";\nimport {\n    TextField,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n} from \"@material-ui/core\";\n\ninterface Props<T extends object> {\n    isNotRequired?: boolean;\n    isNumber?: boolean;\n    label: string;\n    name: keyof T;\n    value: string | number | boolean;\n    setter: React.Dispatch<React.SetStateAction<T>>;\n    isBoolean?: boolean;\n}\n\nexport function InputGenerator<T extends object>({\n    isNotRequired,\n    name,\n    isNumber,\n    label,\n    value,\n    setter,\n    isBoolean,\n}: Props<T>) {\n    const handleChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n        const val = isNumber ? parseInt(e.target.value) : e.target.value;\n        setter((current) => {\n            let n = { ...current };\n            n[name] = (val as unknown) as T[keyof T];\n            return n;\n        });\n    };\n\n    return isBoolean ? (\n        <FormControl>\n            <FormGroup>\n                <FormControlLabel\n                    label={label}\n                    control={\n                        <Checkbox\n                            checked={value as boolean}\n                            onChange={() =>\n                                setter((c) => {\n                                    let n = { ...c };\n                                    n[name] = (!c[\n                                        name\n                                    ] as unknown) as T[keyof T];\n                                    return n;\n                                })\n                            }\n                        />\n                    }\n                />\n            </FormGroup>\n        </FormControl>\n    ) : (\n        <TextField\n            fullWidth\n            autoComplete=\"nope\"\n            required={!isNotRequired}\n            onChange={handleChange}\n            value={value}\n            label={label}\n            variant=\"outlined\"\n        />\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\nimport { LandSurveyDetailsEnum, LandSurveyDetails } from \"../Interfaces\";\nimport { InputGenerator } from \"./InputGenerator\";\ninterface Props {\n    landSurvey: LandSurveyDetails;\n    setLandSurvey: React.Dispatch<React.SetStateAction<LandSurveyDetails>>;\n    setIsLandSurveyReady: React.Dispatch<\n        React.SetStateAction<boolean>\n    >;\n}\n\ninterface InputList {\n    label: string;\n    key: keyof LandSurveyDetails;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isBoolean?: boolean;\n}\n\nexport const LandSurveyForm = ({\n    landSurvey,\n    setLandSurvey,\n    setIsLandSurveyReady,\n}: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: LandSurveyDetailsEnum[\"lenderCertification\"],\n            key: \"lenderCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"buyerCertification\"],\n            key: \"buyerCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"underwriterCertification\"],\n            key: \"underwriterCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"titleCompany\"],\n            key: \"titleCompany\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"hardCopy\"],\n            key: \"hardCopy\",\n            xs: 12,\n            md: 6,\n            isBoolean: true,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = !inputList.some(\n            (item) => item.key !== 'hardCopy' && !item.isNotRequired && !landSurvey[item.key]\n        );\n        setIsLandSurveyReady(isReady);\n    }, [inputList, landSurvey, setIsLandSurveyReady]);\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\">Land Survey</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={landSurvey[item.key] ?? \"\"}\n                            setter={setLandSurvey}\n                            label={item.label}\n                            isBoolean={item.isBoolean}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { Address, AddressEnum } from \"../../Interfaces\";\nimport { InputGenerator } from \"../InputGenerator\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\n\ninterface Props {\n    address: Address;\n    setAddress: React.Dispatch<React.SetStateAction<Address>>;\n    setIsAddressReady: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface InputList {\n    label: string;\n    key: keyof Address;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isNumber?: boolean;\n}\n\nexport const AddressForm = ({ address, setAddress, setIsAddressReady }: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: AddressEnum[\"address1\"],\n            key: \"address1\",\n            md: 6,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"address2\"],\n            key: \"address2\",\n            isNotRequired: true,\n            md: 6,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"unit\"],\n            key: \"unit\",\n            isNotRequired: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"city\"],\n            key: \"city\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"state\"],\n            key: \"state\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"zipCode\"],\n            key: \"zipCode\",\n            md: 3,\n            xs: 12,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = inputList.some(item => !item.isNotRequired && !address[item.key] )\n        setIsAddressReady(!isReady)\n    }, [inputList, address, setIsAddressReady])\n\n    return (\n        <Grid item container spacing={2} xs={12} md={12} direction=\"column\">\n            <Grid item>\n                <Typography variant=\"h5\">Property Address</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={address[item.key] ?? \"\"}\n                            setter={setAddress}\n                            label={item.label}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { OrderData, OrderDataEnum } from \"../../Interfaces\";\nimport { InputGenerator } from \"../InputGenerator\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\ninterface Props {\n    orderData: OrderData;\n    setOrderData: React.Dispatch<React.SetStateAction<OrderData>>;\n    setIsDataReady: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface InputList {\n    label: string;\n    key: keyof typeof OrderDataEnum;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isNumber?: boolean;\n}\n\nexport const DataForm = ({\n    orderData,\n    setOrderData,\n    setIsDataReady,\n}: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: OrderDataEnum[\"orderNumber\"],\n            key: \"orderNumber\",\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"folio\"],\n            key: \"folio\",\n            isNumber: true,\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"legalDescription\"],\n            key: \"legalDescription\",\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"seller\"],\n            key: \"seller\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"buyer\"],\n            key: \"buyer\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"listingAgent\"],\n            key: \"listingAgent\",\n            isNotRequired: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"listingAgentPhone\"],\n            key: \"listingAgentPhone\",\n            isNotRequired: true,\n            isNumber: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"specialInstructions\"],\n            key: \"specialInstructions\",\n            isNotRequired: true,\n            md: 12,\n            xs: 12,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = inputList.some(item => !item.isNotRequired && !orderData[item.key]  )\n        setIsDataReady(!isReady);\n    }, [inputList, orderData, setIsDataReady]);\n\n    return (\n        <Grid item container spacing={2} xs={12} direction=\"column\">\n            <Grid item>\n                <Typography variant=\"h5\">Order Information</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={orderData[item.key] ?? \"\"}\n                            setter={setOrderData}\n                            label={item.label}\n                        />\n                    </Grid>\n                ))}\n                <Grid item xs={12} md={6}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            fullWidth\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            inputVariant=\"outlined\"\n                            label={\"Needed Date\"}\n                            value={orderData.neededDate}\n                            onChange={(e) => {\n                                const newDate = e?.toLocaleDateString();\n                                console.log(newDate);\n                                setOrderData((c) => {\n                                    let n = { ...c };\n                                    n.neededDate = newDate ?? \"\";\n                                    return n;\n                                });\n                            }}\n                            KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            fullWidth\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            inputVariant=\"outlined\"\n                            label={\"Closing Date\"}\n                            value={orderData.closingDate}\n                            onChange={(e) => {\n                                const newDate = e?.toLocaleDateString();\n                                console.log(newDate);\n                                setOrderData((c) => {\n                                    let n = { ...c };\n                                    n.closingDate = newDate ?? \"\";\n                                    return n;\n                                });\n                            }}\n                            KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CreateWrapper } from \"./CreateWrapper\";\nimport { AssociationForm } from \"./AssociationForm\";\nimport { LandSurveyForm } from \"./LandSurveryForm\";\nimport { AddressForm } from \"./OrderForms/AddressForm\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Associations,\n    OrderData,\n    OrderType,\n    LandSurveyDetails,\n    Address,\n} from \"../Interfaces\";\n\nimport { DataForm } from \"./OrderForms/DataForm\";\n\ninterface Props {\n    setData: React.Dispatch<React.SetStateAction<OrderData>>;\n    setAssociations: React.Dispatch<React.SetStateAction<Associations>>;\n    setLandSurvey: React.Dispatch<React.SetStateAction<LandSurveyDetails>>;\n    setAddress: React.Dispatch<React.SetStateAction<Address>>;\n    landSurvey: LandSurveyDetails;\n    address: Address;\n    associations: Associations;\n    orderTypes: OrderType;\n    data: OrderData;\n    basePath: string;\n}\n\nexport const CreateOrderForm = ({\n    basePath,\n    setData,\n    setAssociations,\n    associations,\n    orderTypes,\n    address,\n    setAddress,\n    landSurvey,\n    setLandSurvey,\n    data,\n}: Props) => {\n    const history = useHistory();\n\n    const [isAddressReady, setIsAddressReady] = useState(false);\n    const [isDataReady, setIsDataReady] = useState(false);\n    const [isAssociationsReady, setIsAssociationsReady] = useState(false);\n    const [isLandSurveyReady, setIsLandSurveyReady] = useState(false);\n\n    const onSubmit = () => {\n        setData(data);\n        history.push(`${basePath}/3`, {\n            orderType: orderTypes,\n            data,\n            associations,\n        });\n    };\n\n    const isReady =\n        isAddressReady &&\n        isDataReady &&\n        (orderTypes.estoppelLetter ? isAssociationsReady : true) &&\n        (orderTypes.landSurvey ? isLandSurveyReady : true);\n\n    const content = (\n        <>\n            <Grid item container spacing={2}>\n                <AddressForm\n                    {...{ setIsAddressReady }}\n                    {...{ address }}\n                    {...{ setAddress }}\n                />\n            </Grid>\n            <Grid item container spacing={2}>\n                <DataForm\n                    {...{ setIsDataReady }}\n                    orderData={data}\n                    setOrderData={setData}\n                />\n            </Grid>\n            <Grid item container spacing={2}>\n                {orderTypes.estoppelLetter && (\n                    <Grid\n                        item\n                        container\n                        spacing={2}\n                        xs={12}\n                        md={orderTypes.landSurvey ? 6 : 12}\n                        direction=\"column\"\n                    >\n                        <AssociationForm\n                            {...{ setIsAssociationsReady }}\n                            {...{ setAssociations }}\n                            {...{ associations }}\n                        />\n                    </Grid>\n                )}\n                {orderTypes.landSurvey && (\n                    <Grid\n                        item\n                        container\n                        spacing={2}\n                        xs={12}\n                        md={orderTypes.estoppelLetter ? 6 : 12}\n                        direction=\"column\"\n                    >\n                        <LandSurveyForm\n                            {...{ setIsLandSurveyReady }}\n                            {...{ landSurvey }}\n                            {...{ setLandSurvey }}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </>\n    );\n\n    return (\n        <CreateWrapper {...{ content }} onNext={onSubmit} disabled={!isReady} />\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { FullScreenCreate } from \"../../components/FullScreenCreate\";\nimport { Step3 } from \"./Step3\";\nimport { Step1 } from \"./Step1\";\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\nimport {\n    OrderType,\n    OrderData,\n    Address,\n    LandSurveyDetails,\n    Order,\n} from \"../../Interfaces\";\nimport firebase from \"firebase/app\";\nimport { CreateOrderForm } from \"../../components/CreateOrderForm\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { destructureOrder } from \"../../utils/orders\";\nimport { extend } from \"lodash\";\n\nconst blankAddress: Address = {\n    address1: \"\",\n    address2: \"\",\n    unit: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n};\n\nconst bankLandSurvey: LandSurveyDetails = {\n    lenderCertification: \"\",\n    buyerCertification: \"\",\n    underwriterCertification: \"\",\n    titleCompany: \"\",\n    hardCopy: false,\n};\n\nconst blankData: OrderData = {\n    orderNumber: \"\",\n    specialInstructions: \"\",\n    folio: 0,\n    legalDescription: \"\",\n    closingDate: new Date().toLocaleDateString(),\n    neededDate: new Date().toLocaleDateString(),\n    seller: \"\",\n    buyer: \"\",\n    listingAgent: \"\",\n    listingAgentPhone: 0,\n};\n\nexport type Associations = Array<{ name: string; number: string }>;\n\nexport const blankAssociation = { name: \"\", number: \"\" };\n\nexport const blankOrderType: OrderType = {\n    lienSearch: false,\n    permitResolution: false,\n    estoppelLetter: false,\n    landSurvey: false,\n};\n\ninterface locationState {\n    orderType: OrderType;\n    data: OrderData;\n    associations: Associations;\n}\n\nexport const NewOrder = () => {\n    const history = useHistory<locationState>();\n\n    const {\n        location: {\n            state: {\n                orderType,\n                data: preData,\n                associations: preAssocations,\n            } = {\n                orderType: null,\n                data: null,\n                associations: [{ ...blankAssociation }],\n            },\n        },\n    } = history;\n\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState<OrderData>(preData || blankData);\n    const [address, setAddress] = useState<Address>(blankAddress);\n    const [landSurvey, setLandSurvey] = useState<LandSurveyDetails>(\n        bankLandSurvey\n    );\n    const [associations, setAssociations] = useState<Associations>(\n        preAssocations || [{ ...blankAssociation }]\n    );\n    const [orderTypes, setOrderTypes] = useState<OrderType>(\n        orderType || blankOrderType\n    );\n\n    const { step, id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            const db = firebase.firestore();\n            db.collection(\"orders\")\n                .doc(id)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) {\n                        history.push(\"/\");\n                    } else {\n                        const data = doc.data() as Order;\n                        const {\n                            orderData,\n                            orderType,\n                            associations,\n                            address,\n                            landSurvey,\n                        } = destructureOrder(data);\n                        setData(orderData as OrderData);\n                        setOrderTypes(orderType);\n                        setAssociations((c) => {\n                            if (associations) {\n                                return extend(associations);\n                            }\n                            return [blankAssociation];\n                        });\n                        setAddress(address);\n                        setLandSurvey((c) => {\n                            if (landSurvey) {\n                                return extend(c, landSurvey);\n                            }\n                            return bankLandSurvey;\n                        });\n                    }\n                })\n                .catch((err) => console.log(\"Order error\", err))\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [history, id]);\n\n    const basePath = id ? `/update/${id}` : \"/new-order\";\n    const cancelPath = id ?  `/order/${id}` : '/';\n    if (loading) return <CircularProgress />;\n    if (!step) return <Redirect to=\"/\" />;\n\n    const stepComponents = [\n        {\n            label: \"Type of Order\",\n            component: (\n                <Step1\n                    {...{ basePath }}\n                    {...{ orderTypes }}\n                    {...{ setOrderTypes }}\n                />\n            ),\n        },\n        {\n            label: \"Property Information\",\n            component: (\n                <CreateOrderForm\n                    {...{ address }}\n                    {...{ setAddress }}\n                    {...{ setData }}\n                    {...{ setAssociations }}\n                    {...{ associations }}\n                    {...{ setLandSurvey }}\n                    {...{ landSurvey }}\n                    {...{ orderTypes }}\n                    {...{ data }}\n                    {...{ basePath }}\n                />\n            ),\n        },\n        {\n            label: \"Confirm Order\",\n            component: (\n                <Step3\n                    {...{ address }}\n                    {...{ landSurvey }}\n                    {...{ associations }}\n                    {...{ id }}\n                    {...{ data }}\n                    orderType={orderTypes}\n                />\n            ),\n        },\n    ];\n\n    return (\n        <FullScreenCreate\n            cancelPath={cancelPath}\n            {...{ stepComponents }}\n            activeStep={step}\n            toolbarHeader=\"Create New Order\"\n        />\n    );\n};\n","\nimport { Order } from \"../Interfaces\";\nimport { includes, pickBy } from \"lodash\";\n\nexport const destructureOrder = (data: Order) => {\n    const orderData = pickBy(data, (_, key) =>\n        !includes([\"address\", \"orderType\", \"associations\"], key)\n    );\n    const address = data.address;\n    const orderType = data.orderType;\n    const associations = data.associations;\n    const landSurvey = data.landSurvey;\n    return {\n        address,\n        orderType,\n        orderData,\n        associations,\n        landSurvey\n    };\n};\n","import React from \"react\";\nimport { Container, makeStyles, Toolbar, CssBaseline } from \"@material-ui/core\";\n\ninterface Props {\n    children: JSX.Element;\n}\n\nexport const AuthWrapper: React.FC<Props> = ({ children }) => {\n    const classes = useStyles();\n    return (\n        <>\n            <CssBaseline />\n            <img\n                alt=\"\"\n                className={classes.logo}\n                src={`${process.env.PUBLIC_URL}/logo.png`}\n            />\n            <Container maxWidth=\"sm\">\n                <Toolbar />\n                {children}\n            </Container>\n        </>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    logo: {\n        height: 120,\n    },\n}));\n","import React, { useContext } from \"react\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    MenuItem,\n    makeStyles,\n    Menu,\n    Divider,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n} from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport * as Firebase from \"firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n        flexGrow:1\n    },\n    logo: {\n        height: 60,\n        width:140\n    },\n}));\n\nexport const AppHeader = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const currentUser = useContext(UserContext);\n    const history = useHistory();\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = async () => {\n        await Firebase.auth().signOut();\n    };\n\n    const redirectAdmin = () => {\n        history.push(\"/admin/manage\");\n    };\n\n    return (\n        <AppBar position=\"absolute\">\n            <Toolbar>\n                <Link to=\"/\" className={classes.link}>\n                    <img\n                        alt=\"\"\n                        className={classes.logo}\n                        src={`${process.env.PUBLIC_URL}/logo-transparent.png`}\n                    />\n                </Link>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    <MenuItem>\n                        <ListItemAvatar>\n                            <Avatar>{currentUser?.email.charAt(0)}</Avatar>\n                        </ListItemAvatar>\n                        <ListItemText>{currentUser?.email}</ListItemText>\n                    </MenuItem>\n                    {currentUser?.admin && (\n                        <MenuItem onClick={redirectAdmin}>Admin</MenuItem>\n                    )}\n                    <Divider />\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import {createContext} from 'react';\n\ninterface LoadingContext {\n    loading: boolean\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const LoadingContext = createContext<LoadingContext>({\n    loading: false,\n    setLoading: () => {}\n});","import React, { useState } from 'react';\nimport {\n    Toolbar,\n    Grid,\n    makeStyles,\n    LinearProgress,\n} from '@material-ui/core';\n\nimport {AppHeader} from './AppHeader';\nimport { LoadingContext } from '../context/LoadingContext';\n\ninterface Props {\n    children: JSX.Element\n}\n\nexport const AppWrapper: React.FC<Props> = ({children}) => {\n\n    const [loading, setLoading] = useState(false);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppHeader />\n            <Toolbar />\n            {loading && <LinearProgress />}\n            <LoadingContext.Provider value={{loading, setLoading}}>\n                <Grid container direction=\"column\" alignItems=\"center\" spacing={3} className={classes.content}>\n                    {children}\n                </Grid>\n            </LoadingContext.Provider>\n        </>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        padding: theme.spacing(3, 4, 6, 4),\n        wordBreak: 'break-word',\n        minWidth: 0\n    }\n}))\n","import React, { useContext } from \"react\";\nimport { Grid, Typography, TextField, MenuItem } from \"@material-ui/core\";\nimport {\n    orderStatusEnumKeys as orderStatusType,\n    OrderStatusEnum,\n} from \"../../Interfaces\";\nimport { UserContext } from \"../../context/UserContext\";\n\ninterface Props {\n    currentStatus: orderStatusType;\n    setCurrentStatus: React.Dispatch<\n        React.SetStateAction<keyof typeof OrderStatusEnum>\n    >;\n}\n\nexport const OrderStatusController = ({\n    currentStatus,\n    setCurrentStatus,\n}: Props) => {\n    const user = useContext(UserContext);\n\n    return (\n        <Grid item container alignItems=\"center\" justify=\"space-between\">\n            <Grid item>\n                <Typography variant=\"subtitle1\">Status</Typography>\n            </Grid>\n            <Grid item xs={7}>\n                {user?.admin ? (\n                    <TextField\n                        label=\"Order Status\"\n                        select\n                        variant=\"outlined\"\n                        fullWidth\n                        value={currentStatus}\n                        onChange={(e) =>\n                            setCurrentStatus(\n                                e.target.value as keyof typeof OrderStatusEnum\n                            )\n                        }\n                    >\n                        {Object.keys(OrderStatusEnum).map((option, index) => (\n                            <MenuItem key={`status-${index}`} value={option}>\n                                {\n                                    OrderStatusEnum[\n                                        option as keyof typeof OrderStatusEnum\n                                    ]\n                                }\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                ) : (\n                    <Typography variant=\"body2\">\n                        {currentStatus ? OrderStatusEnum[currentStatus] : \"\"}\n                    </Typography>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Typography, TextField, MenuItem } from \"@material-ui/core\";\nimport firebase from \"firebase/app\";\nimport { UserData } from \"../../Interfaces\";\nimport { UserContext } from \"../../context/UserContext\";\n\ninterface Props {\n    currentAssignee: string;\n    setCurrentAssignee: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const OrderAssigneeController = ({\n    currentAssignee,\n    setCurrentAssignee,\n}: Props) => {\n    const [userOptions, setUserOptions] = useState<UserData[]>([]);\n\n    const user = useContext(UserContext);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (user?.admin) {\n            db.collection(\"employees\")\n                .get()\n                .then((querySnapshot) => {\n                    const arr: UserData[] = [];\n                    querySnapshot.forEach((doc) => {\n                        arr.push({ ...(doc.data() as UserData) });\n                    });\n                    setUserOptions(arr);\n                })\n                .catch((err) => console.log(err));\n        }\n    }, [user, db]);\n\n    return (\n        <Grid item container alignItems=\"center\" justify=\"space-between\">\n            <Grid item>\n                <Typography variant=\"subtitle1\">Asignee</Typography>\n            </Grid>\n            <Grid item xs={7}>\n                {user?.admin ? (\n                    <TextField\n                        label=\"Assigned Employee\"\n                        select\n                        variant=\"outlined\"\n                        fullWidth\n                        value={currentAssignee}\n                        onChange={(e) => setCurrentAssignee(e.target.value)}\n                    >\n                        {userOptions.map((option, index) => (\n                            <MenuItem\n                                key={`status-${index}`}\n                                value={option.email}\n                            >\n                                {option.email}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                ) : (\n                    <Typography variant=\"body2\">\n                        {currentAssignee ? currentAssignee : \"Not Assigned Yet\"}\n                    </Typography>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n} from \"@material-ui/core\";\n\ninterface Props {\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    title: string\n    description: string\n    confirmAction?: () => void;\n}\n\nexport const WarnModal = ({ open, description, title, setOpen, confirmAction }: Props) => {\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {description}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Close\n                </Button>\n                {confirmAction && (\n                    <Button onClick={confirmAction} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles, Snackbar, IconButton, Slide } from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst TRANSITION_TIMEOUT = 400;\n\ninterface Props {\n    message: string;\n    setMessage: React.Dispatch<React.SetStateAction<string>>;\n    messageType?: \"error\" | \"success\"; // error is default\n}\n\nfunction SlideTransition(props: TransitionProps) {\n    return <Slide {...props} direction=\"up\" timeout={TRANSITION_TIMEOUT} />;\n}\n\nexport const MessageSnackbar = ({\n    message,\n    setMessage,\n    messageType = \"error\",\n}: Props) => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(message ? true : false);\n\n    const timeoutRef = useRef<number>(0);\n    useEffect(() => {\n        return () => window.clearTimeout(timeoutRef.current);\n    }, []);\n\n    const handleClose = () => {\n        window.clearTimeout(timeoutRef.current);\n        setOpen(false);\n        timeoutRef.current = window.setTimeout(\n            () => setMessage(\"\"),\n            TRANSITION_TIMEOUT\n        );\n    };\n\n    useEffect(() => {\n        setOpen(message ? true : false);\n    }, [message]);\n\n    return (\n        <Snackbar\n            open={open}\n            onClose={handleClose}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n            autoHideDuration={6000}\n            ContentProps={{\n                className:\n                    messageType === \"error\" ? classes.error : classes.success,\n            }}\n            TransitionComponent={SlideTransition}\n            message={\n                <div className={classes.message}>\n                    {messageType === \"error\" && (\n                        <ErrorIcon className={classes.icon} />\n                    )}\n                    {messageType === \"success\" && (\n                        <CheckIcon className={classes.icon} />\n                    )}\n                    {message}\n                </div>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={handleClose}\n                >\n                    <CloseIcon />\n                </IconButton>,\n            ]}\n        />\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    success: {\n        backgroundColor: \"green\",\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n","import React, { useState, useMemo, useContext } from \"react\";\nimport {\n    Paper,\n    Grid,\n    makeStyles,\n    Typography,\n    Divider,\n    Button,\n} from \"@material-ui/core\";\nimport { OrderStatusController } from \"./OrdetStatusController\";\nimport { Order } from \"../../Interfaces\";\nimport { OrderAssigneeController } from \"./OrderAssigneeController\";\nimport { isEqual } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { WarnModal } from \"../WarnModal\";\nimport { MessageSnackbar } from \"../SnackMessage\";\n\ninterface Props {\n    order: Order;\n    orderId: string;\n}\n\nexport const OrderDetails = ({ order, orderId }: Props) => {\n    const [currentStatus, setCurrentStatus] = useState(order.status);\n    const [currentAssignee, setCurrentAssignee] = useState(\n        order.assignee\n    );\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [modalTitle, setModalTitle] = useState(\"\");\n    const [message, setMessage] = useState('');\n\n    const user = useContext(UserContext);\n    const db = firebase.firestore();\n\n    const classes = useStyles();\n\n    const newStatus = useMemo(() => {\n        const newstat = { ...order };\n        newstat.assignee = currentAssignee;\n        newstat.status = currentStatus;\n        return newstat;\n    }, [currentAssignee, currentStatus, order]);\n\n    \n    const onApply = async () => {\n        setLoading(true);\n        try {\n            await db\n                .collection(\"orders\")\n                .doc(orderId)\n                .update(newStatus);\n        } catch (err) {\n            setMessage(err.message || err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const onHold = () => {\n        setModalTitle(\"You want to put this order on Hold?\");\n        setOpen(true);\n    };\n\n    const onCancel = () => {\n        setModalTitle(\"You want cancel this order?\");\n        setOpen(true);\n    };\n\n    return (\n        <>\n            <MessageSnackbar {...{message}} {...{setMessage}} />\n            <WarnModal\n                {...{ open }}\n                {...{ setOpen }}\n                title={modalTitle}\n                description=\"Please send an email to facs95@gmail.com with the request and we will take care of it.\"\n            />\n            <Paper className={classes.paper}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    spacing={3}\n                    className={classes.cardContainer}\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">Order Status</Typography>\n                        <Divider />\n                    </Grid>\n                    <OrderStatusController\n                        {...{ currentStatus }}\n                        {...{ setCurrentStatus }}\n                    />\n                    <OrderAssigneeController\n                        {...{ currentAssignee }}\n                        {...{ setCurrentAssignee }}\n                    />\n                    {user?.admin ? (\n                        <Grid item container>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={\n                                    isEqual(order, newStatus) || loading\n                                }\n                                onClick={onApply}\n                            >\n                                Apply Changes\n                            </Button>\n                        </Grid>\n                    ) : (\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            spacing={1}\n                        >\n                            <Grid item xs={6}>\n                                <Button\n                                    fullWidth\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={onHold}\n                                >\n                                    Hold\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button\n                                    fullWidth\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onClick={onCancel}\n                                >\n                                    Cancel\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Grid>\n            </Paper>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(3),\n    },\n    paper: {\n        width: '100%'\n    }\n}));\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport {\n    Grid,\n    makeStyles,\n    Button,\n    Paper,\n    Typography,\n    Divider,\n    IconButton,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { UserContext } from \"../context/UserContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { map } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { MessageSnackbar } from \"./SnackMessage\";\nimport { EmptyState } from \"./EmpyState\";\n\ninterface Props {\n    orderId: string;\n    orgId: string;\n}\n\nexport const UploadDocuments = ({ orderId, orgId }: Props) => {\n    const [listOfFiles, setListOfFiles] = useState<string[]>([]);\n    const [message, setMessage] = useState(\"\");\n    const [messageType, setMessageType] = useState<\"success\" | \"error\">(\n        \"error\"\n    );\n    const [uploadLoading, setUploadLoading] = useState(false);\n\n    const docsPath = `org-${orgId}/order-${orderId}/`;\n\n    const user = useContext(UserContext);\n\n    const db = firebase.storage();\n\n    const catchError = (err: any) => {\n        setMessageType(\"error\");\n        setMessage(err && err.message);\n    };\n\n    const createSuccess = (message: string) => {\n        setMessageType(\"success\");\n        setMessage(message);\n    };\n\n    const deleteFile = (fileName: string) => {\n        const storageRef = db.ref();\n        const deleteReference = storageRef.child(docsPath);\n        deleteReference\n            .child(fileName)\n            .delete()\n            .then(() => {\n                createSuccess(`Succesfully Delete ${fileName}`);\n                listFiles();\n            })\n            .catch((err) => {\n                catchError(err);\n            });\n    };\n\n    const listFiles = useCallback(() => {\n        if (user) {\n            const storageRef = db.ref();\n            let listRef = storageRef.child(docsPath);\n            listRef\n                .listAll()\n                .then((res) => {\n                    setListOfFiles(res.items.map((item) => item.name));\n                })\n                .catch((err) => catchError(err));\n        }\n    }, [db, user, docsPath]);\n\n    const onUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const files = e.target.files;\n        if (files) {\n            const storageRef = db.ref();\n            const uploadReference = storageRef.child(docsPath);\n            const prom = map(files, (file) => {\n                const fileRef = uploadReference.child(file.name);\n                return fileRef.put(file);\n            });\n            setUploadLoading(true);\n            Promise.all(prom)\n                .then(() => {\n                    createSuccess(\"Succesful Upload\");\n                    listFiles();\n                })\n                .catch((err) => catchError(err))\n                .finally(() => setUploadLoading(false));\n        }\n    };\n\n    const onDownload = (fileName: string) => {\n        const fileRef = db.ref(`${docsPath}${fileName}`);\n        fileRef\n            .getDownloadURL()\n            .then((url) => {\n                var xhr = new XMLHttpRequest();\n                xhr.responseType = \"blob\";\n                xhr.onload = function () {\n                    var blob = xhr.response;\n                    const url = window.URL.createObjectURL(blob);\n                    const link = document.createElement(\"a\");\n                    link.href = url;\n                    link.setAttribute(\"download\", fileName);\n                    document.body.appendChild(link);\n                    link.click();\n                    link.parentNode?.removeChild(link);\n                };\n                xhr.open(\"GET\", url);\n                xhr.send();\n            })\n            .catch((err) => console.log(err));\n    };\n\n    useEffect(() => {\n        listFiles();\n    }, [listFiles]);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <MessageSnackbar\n                {...{ message }}\n                {...{ setMessage }}\n                {...{ messageType }}\n            />\n            <Paper className={classes.fullWidth}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    spacing={3}\n                    className={classes.cardContainer}\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">Documents</Typography>\n                        <Divider />\n                    </Grid>\n                    <Grid item container direction=\"column\" spacing={2}>\n                        {listOfFiles.length === 0 ? (\n                            <EmptyState\n                                width={200}\n                                title=\"No documents yet\"\n                                imageFile=\"documents.svg\"\n                            />\n                        ) : (\n                            listOfFiles.map((file, index) => (\n                                <Grid\n                                    key={`file-${index}`}\n                                    item\n                                    container\n                                    justify=\"space-between\"\n                                    wrap=\"nowrap\"\n                                >\n                                    <Grid\n                                        item\n                                        container\n                                        spacing={1}\n                                        alignItems=\"center\"\n                                        wrap=\"nowrap\"\n                                    >\n                                        <Grid item>\n                                            <DescriptionIcon />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"body1\" noWrap>\n                                                {file}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <IconButton\n                                            onClick={() => onDownload(file)}\n                                        >\n                                            <GetAppIcon />\n                                        </IconButton>\n                                    </Grid>\n                                    {user && user.admin && (\n                                        <Grid item>\n                                            <IconButton\n                                                onClick={() => deleteFile(file)}\n                                            >\n                                                <CloseIcon />\n                                            </IconButton>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            ))\n                        )}\n                    </Grid>\n                    {user && user.admin && (\n                        <Grid item container spacing={1}>\n                            <Grid item>\n                                <input\n                                    className={classes.input}\n                                    style={{ display: \"none\" }}\n                                    id=\"raised-button-file\"\n                                    multiple\n                                    type=\"file\"\n                                    onChange={onUpload}\n                                />\n                                <label htmlFor=\"raised-button-file\">\n                                    <Button\n                                        color=\"primary\"\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        disabled={uploadLoading}\n                                    >\n                                        Upload New File\n                                    </Button>\n                                </label>\n                            </Grid>\n                            {uploadLoading && (\n                                <Grid item>\n                                    <CircularProgress />\n                                </Grid>\n                            )}\n                        </Grid>\n                    )}\n                </Grid>\n            </Paper>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        display: \"none\",\n    },\n    cardContainer: {\n        padding: theme.spacing(3),\n    },\n    fullWidth: {\n        width: \"100%\",\n    },\n}));\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { Order } from \"../Interfaces\";\nimport { Paper, Grid, makeStyles } from \"@material-ui/core\";\nimport { LoadingContext } from \"../context/LoadingContext\";\nimport { DisplayOrder } from \"../components/DisplayOrder\";\nimport { OrderDetails } from \"../components/OrderDetails/OrderDetails\";\nimport { UploadDocuments } from \"../components/UploadDocuments\";\n\nexport const OrderInfo = () => {\n    const [order, setOrder] = useState<Order | null>(null);\n\n    const classes = useStyles();\n\n    const { setLoading } = useContext(LoadingContext);\n\n    const { id } = useParams();\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        setLoading(true);\n        if (id) {\n            db.collection(\"orders\")\n                .doc(id)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) {\n                        console.log(\"No such document!\");\n                    } else {\n                        setOrder({ ...doc.data(), id: doc.id } as Order);\n                    }\n                })\n                .catch((err) => console.log(\"here\", err))\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [db, id, setLoading]);\n\n    if (!order) return <> </>;\n\n    const orderData = (\n        <Paper>\n            <Grid\n                container\n                direction=\"column\"\n                spacing={3}\n                className={classes.cardContainer}\n            >\n                <DisplayOrder type=\"info\" {...{ order }} />\n            </Grid>\n        </Paper>\n    );\n\n    return (\n        <>\n            <Grid item container spacing={3}>\n                <Grid item sm={12} md={8}>\n                    {orderData}\n                </Grid>\n                <Grid\n                    item\n                    container\n                    direction=\"column\"\n                    sm={12}\n                    md={4}\n                    spacing={3}\n                >\n                    <Grid item container>\n                        <OrderDetails {...{ order }} orderId={id} />\n                    </Grid>\n                    <Grid item container>\n                        <UploadDocuments orderId={id} orgId={order.orgId} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n","import React from \"react\";\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Divider,\n} from \"@material-ui/core\";\n\ninterface Props {\n    email: string;\n    setEmail: React.Dispatch<React.SetStateAction<string>>;\n    onSetNewAdminClick: () => void;\n}\n\nexport const SetAdmin = ({ email, setEmail, onSetNewAdminClick }: Props) => {\n    return (\n        <>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">Set New Admin</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"column\">\n                <Grid item>\n                    <TextField\n                        size=\"small\"\n                        fullWidth\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!email}\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={onSetNewAdminClick}\n                        color=\"primary\"\n                    >\n                        Set Admin\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React from \"react\";\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Divider,\n} from \"@material-ui/core\";\n\ninterface Props {\n    orgName: string\n    setOrgName: React.Dispatch<React.SetStateAction<string>>\n    phoneNumber: string\n    setPhoneNumber: React.Dispatch<React.SetStateAction<string>>\n    address: string\n    setAddress: React.Dispatch<React.SetStateAction<string>>\n    onCreateOrgClick: () => void;\n}\n\nexport const CreateNewOrg = ({\n    orgName,\n    setOrgName,\n    onCreateOrgClick,\n    phoneNumber,\n    setAddress,\n    address,\n    setPhoneNumber\n}: Props) => {\n    return (\n        <>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">\n                        Create New Organization\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"column\">\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Company Name\"\n                        variant=\"outlined\"\n                        value={orgName}\n                        onChange={(e) => setOrgName(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Phone Number\"\n                        variant=\"outlined\"\n                        value={phoneNumber}\n                        onChange={(e) => setPhoneNumber(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Address\"\n                        variant=\"outlined\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!address || !phoneNumber || !orgName}\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={onCreateOrgClick}\n                        color=\"primary\"\n                    >\n                        Create Organization\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React from \"react\";\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Divider,\n    MenuItem,\n} from \"@material-ui/core\";\nimport { Org } from \"../../Interfaces\";\n\ninterface Props {\n    userToOrg: string;\n    setUserToOrg: React.Dispatch<React.SetStateAction<string>>;\n    selectedOrg: string;\n    setSelectedOrg: React.Dispatch<React.SetStateAction<string>>;\n    orgs: Array<Org>;\n    onAddUserToOrgClick: () => void;\n}\n\nexport const AddUserToOrg = ({\n    userToOrg,\n    setUserToOrg,\n    selectedOrg,\n    setSelectedOrg,\n    orgs,\n    onAddUserToOrgClick,\n}: Props) => {\n    return (\n        <>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">Add User to Org</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item container direction=\"column\" spacing={2}>\n                <Grid item>\n                    <TextField\n                        size=\"small\"\n                        fullWidth\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        value={userToOrg}\n                        onChange={(e) => setUserToOrg(e.target.value)}\n                        type=\"email\"\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        size=\"small\"\n                        variant=\"outlined\"\n                        fullWidth\n                        select\n                        value={selectedOrg}\n                        onChange={(e) => setSelectedOrg(e.target.value)}\n                    >\n                        {orgs.length === 0 ? (\n                            <MenuItem value=\"\">No Organizations</MenuItem>\n                        ) : (\n                            orgs.map((org, index) => (\n                                <MenuItem key={index} value={org.id}>\n                                    {org.name}\n                                </MenuItem>\n                            ))\n                        )}\n                    </TextField>\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!userToOrg || !selectedOrg}\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={onAddUserToOrgClick}\n                        color=\"primary\"\n                    >\n                        Add User\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport { MessageSnackbar } from \"../../components/SnackMessage\";\nimport { SetAdmin } from \"./SetAdmin\";\nimport { CreateNewOrg } from \"./CreateNewOrg\";\nimport { AddUserToOrg } from \"./AddUserToOrg\";\nimport { Org } from \"../../Interfaces\";\n\nexport const ManageAdming = () => {\n    const db = firebase.firestore();\n    const currentUser = useContext(UserContext);\n\n    const [email, setEmail] = useState(\"\");\n    const [orgName, setOrgName] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [orgs, setOrgs] = useState<Array<Org>>([]);\n    const [selectedOrg, setSelectedOrg] = useState(\"\");\n    const [orgPhoneNumber, setOrgPhoneNumber] = useState(\"\");\n    const [orgAddress, setOrgAddress] = useState(\"\");\n    const [userToOrg, setUserToOrg] = useState(\"\");\n    const [messageType, setMessageType] = useState<\"success\" | \"error\">(\n        \"success\"\n    );\n\n    const getOrgs = useCallback(() => {\n        db.collection(\"organizations\")\n            .get()\n            .then((querySnapshot) => {\n                const arr: Org[] = [];\n                querySnapshot.forEach((doc) => {\n                    arr.push({ ...doc.data(), id: doc.id } as Org);\n                });\n                setOrgs(arr);\n                setSelectedOrg(arr[0].id);\n            })\n            .catch((err) => console.log(err));\n    }, [db]);\n\n    useEffect(() => {\n        getOrgs();\n    }, [getOrgs]);\n\n    if (!currentUser?.admin) return <Redirect to=\"/\" />;\n\n    const setNotificationMessage = (\n        message: string,\n        type: \"success\" | \"error\" = \"error\"\n    ) => {\n        setMessageType(type);\n        setErrorMessage(message);\n    };\n\n    const setAdmin = () => {\n        const setAdminUser = firebase.functions().httpsCallable(\"setAdminUser\");\n        setAdminUser({ email })\n            .then(() => {\n                setNotificationMessage(\"Admin Set Succesfully\", \"success\");\n            })\n            .catch((err) => {\n                setNotificationMessage(err.message || err);\n            });\n    };\n\n    const onSetNewAdminClick = () => {\n        setAdmin();\n    };\n\n    const onCreateOrgClick = async () => {\n        try {\n            await db.collection(\"organizations\").add({\n                name: orgName,\n                users: [],\n                phoneNumber: orgPhoneNumber,\n                address: orgAddress,\n                created_on: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n            setNotificationMessage(\"Org Create Succesfully\", \"success\");\n            setOrgName(\"\");\n            getOrgs();\n        } catch (err) {\n            setNotificationMessage(err.message || err);\n        }\n    };\n\n    const onAddUserToOrgClick = async () => {\n        try {\n            const addOrgToUser = firebase\n                .functions()\n                .httpsCallable(\"addOrgToUser\");\n            await addOrgToUser({ email: userToOrg, orgId: selectedOrg });\n            setNotificationMessage(\"User Added to Org Succesfully\", \"success\");\n        } catch (err) {\n            setNotificationMessage(err.message || err);\n        }\n    };\n\n    return (\n        <>\n            <MessageSnackbar\n                message={errorMessage}\n                setMessage={setErrorMessage}\n                {...{ messageType }}\n            />\n            <Grid item xs={4} container justify=\"center\" spacing={3}>\n                <Grid item container spacing={3}>\n                    <SetAdmin\n                        {...{ email }}\n                        {...{ setEmail }}\n                        {...{ onSetNewAdminClick }}\n                    />\n                </Grid>\n                <Grid item container spacing={3}>\n                    <CreateNewOrg\n                        phoneNumber={orgPhoneNumber}\n                        setPhoneNumber={setOrgPhoneNumber}\n                        address={orgAddress}\n                        setAddress={setOrgAddress}\n                        {...{ onCreateOrgClick }}\n                        {...{ orgName }}\n                        {...{ setOrgName }}\n                    />\n                </Grid>\n                <Grid item container spacing={3}>\n                    <AddUserToOrg\n                        {...{ orgs }}\n                        {...{ userToOrg }}\n                        {...{ setUserToOrg }}\n                        {...{ selectedOrg }}\n                        {...{ setSelectedOrg }}\n                        {...{ onAddUserToOrgClick }}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React, { useContext } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { Login, Dashboard, CreateAccount, NewOrder } from './views';\nimport { UserContext } from './context/UserContext';\nimport {AuthWrapper, AppWrapper} from './components';\nimport { OrderInfo } from './views/OrderInfo';\nimport { ManageAdming } from './views/admin/ManageAdmin';\nimport { UpdateOrder } from './views/UpdateOrder/UpdateOrder';\n\nconst authWrap = (component: JSX.Element): JSX.Element => <AuthWrapper>{component}</AuthWrapper>\nconst appWrap = (component: JSX.Element): JSX.Element => <AppWrapper>{component}</AppWrapper>\n\nexport const Routes : React.FC = () => {\n    const currentUser = useContext(UserContext);\n    \n    if(currentUser?.uid) {\n        return (\n            <>\n                <Route exact path='/' render={() => appWrap(<Dashboard />)} />\n                <Route exact path='/new-order/:step' render={() => appWrap(<NewOrder />)} />\n                <Route exact path='/update/:id/:step' render={() => appWrap(<NewOrder />)} />\n                <Route exact path='/order/:id' render={() => appWrap(<OrderInfo />)} />\n                <Route exact path='/admin/manage' render={() => appWrap(<ManageAdming />)} />\n                {/* <Redirect to=\"/\" /> // Need to understand this */}\n            </>\n        )\n    } else {\n        return (\n            <>\n                <Route exact path=\"/\" render={() => authWrap(<Login />)} />\n                <Route exact path='/create-account' render={() => authWrap(<CreateAccount />)} />\n                <Redirect to=\"/\" />\n            </>\n        )\n    }\n}","import firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCa61N2rKPLU-m7RW-iQ1Xd2G8d2GL0to8\",\n    authDomain: \"lien-search-262720.firebaseapp.com\",\n    databaseURL: \"https://lien-search-262720.firebaseio.com\",\n    projectId: \"lien-search-262720\",\n    storageBucket: \"lien-search-262720.appspot.com\",\n    messagingSenderId: \"45974338820\",\n    appId: \"1:45974338820:web:762f88d7c893541b0ce451\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Routes } from \"./Routes\";\nimport { UserContext } from \"./context/UserContext\";\nimport firebase from \"firebase/app\";\nimport \"./initFirebase\";\nimport { User } from \"./Interfaces\";\n\nconst history = createBrowserHistory();\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#fff200\",\n        },\n        secondary: {\n            main: \"#e32c2c\",\n        },\n    },\n    typography: {\n        fontFamily: \"Roboto\",\n        fontSize: 12,\n        subtitle1: {\n            fontWeight: 'bold'\n        },\n        h5: {\n            fontWeight: 600\n        }\n    },\n    spacing: 6,\n    overrides: {\n        MuiButton: {\n            root: {\n                height: 40,\n            },\n        },\n        MuiDivider:{\n            root: {\n                backgroundColor: 'black'\n            }\n        },\n        MuiFormLabel: {\n            focused: {\n                borderColor: \"black\",\n            },\n            root: {\n                \"&$focused\": {\n                    color: \"black\",\n                },\n            },\n        },\n        MuiTextField: {\n            root: {\n                \"&.Mui-focused fieldset\": {\n                    borderColor: \"green\",\n                },\n            },\n        },\n        MuiOutlinedInput: {\n            root: {\n                \"&$focused\": {\n                    borderColor: \"black\",\n                },\n            },\n        },\n    },\n});\n\nconst App: React.FC = () => {\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user) => {\n            if (user) {\n                try {\n                    const token = await user.getIdTokenResult();\n                    const userDoc = await db\n                        .collection(\"users\")\n                        .doc(user.uid)\n                        .get();\n                    let userData;\n                    if (userDoc.exists) {\n                        userData = userDoc.data();\n                    }\n                    setCurrentUser({\n                        admin: token.claims.admin ?? false,\n                        orgId: userData?.orgId ?? \"\",\n                        name: userData?.name ?? \"\",\n                        phoneNumber: userData?.phoneNumber ?? \"\",\n                        email: user.email || \"\",\n                        uid: user.uid || \"\",\n                    });\n                } catch (err) {\n                    console.log(err);\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setCurrentUser(null);\n                setLoading(false);\n            }\n        });\n    }, [db]);\n\n    if (loading) return <></>;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <UserContext.Provider value={currentUser}>\n                <Router history={history}>\n                    <Switch>\n                        <Routes />\n                    </Switch>\n                </Router>\n            </UserContext.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('../firebase-messaging-sw.js')\n    .then(function(registration) {\n        console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function(err) {\n        console.log('Service worker registration failed, error:', err);\n    });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
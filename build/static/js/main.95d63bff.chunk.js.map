{"version":3,"sources":["views/auth/Login.tsx","context/UserContext.ts","views/Dashboard.tsx","views/auth/CreateAccount.tsx","components/CreateStepper.tsx","components/FullScreenCreate.tsx","views/NewOrder.tsx","components/AuthWrapper.tsx","components/AppHeader.tsx","components/AppWrapper.tsx","Routes.tsx","initFirebase.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Login","classes","useStyles","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","className","formContainer","onSubmit","e","a","async","preventDefault","firebase","signInWithEmailAndPassword","message","Grid","container","direction","alignItems","spacing","item","TextField","type","error","fullWidth","value","onChange","target","label","variant","Button","disabled","color","Typography","to","makeStyles","width","UserContext","createContext","headers","Dashboard","history","useHistory","currentUser","useContext","lienSearches","setLienSearches","db","useEffect","collection","uid","get","then","querySnapshot","arr","forEach","doc","push","data","wrap","justify","size","onClick","Paper","Table","stickyHeader","TableHead","TableRow","map","entry","index","TableCell","key","TableBody","length","hover","order_number","property_address","created_on","toDate","toLocaleDateString","CreateAccount","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","response","console","log","CreateStepper","activeStep","steps","Stepper","step","Step","StepLabel","FullScreenCreate","toolbarHeader","cancelPath","stepComponents","cancel","Dialog","fullScreen","open","onClose","AppBar","appBar","Toolbar","IconButton","edge","aria-label","component","position","emptyAddress","address1","address2","unit","city","state","zipCode","NewOrder","address","setAddress","handleAddressChange","currentAddress","name","paper","required","theme","padding","AuthWrapper","children","CssBaseline","Container","maxWidth","root","display","justifyContent","flexGrow","menuButton","marginRight","title","link","textDecoration","AppHeader","React","anchorEl","setAnchorEl","Boolean","handleClose","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Divider","Firebase","signOut","AppWrapper","authWrap","appWrap","Routes","exact","path","render","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createBrowserHistory","createMuiTheme","App","setCurrentUser","loading","setLoading","onAuthStateChanged","user","ThemeProvider","Provider","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kRAWaA,EAAkB,WAC3B,IAAMC,EAAUC,IADiB,EAGPC,mBAAiB,IAHV,mBAG1BC,EAH0B,KAGnBC,EAHmB,OAIDF,mBAAiB,IAJhB,mBAI1BG,EAJ0B,KAIhBC,EAJgB,OAKOJ,mBAAiB,IALxB,mBAK1BK,EAL0B,KAKZC,EALY,KAiBjC,OACI,0BAAMC,UAAWT,EAAQU,cAAeC,SAAU,SAACC,GAAD,OAXrC,SAAOA,GAAP,SAAAC,EAAAC,OAAA,uDACbF,EAAEG,iBACFP,EAAgB,IAFH,oBAAAK,EAAA,MAIHG,SAAgBC,2BAA2Bd,EAAOE,IAJ/C,uDAMTG,EAAgB,KAAIU,SANX,wDAW4CP,CAASC,KAC9D,kBAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAAUC,QAAS,GAC7D,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,QAASpB,EAAcqB,WAAS,EAACC,MAAO1B,EAAO2B,SAAU,SAAClB,GAAD,OAAOR,EAASQ,EAAEmB,OAAOF,QAAQG,MAAM,QAAQC,QAAQ,cAE5I,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWG,WAAS,EAACD,QAASpB,EAAcmB,KAAK,WAAWM,MAAM,WAAWH,MAAOxB,EAAUyB,SAAU,SAAClB,GAAD,OAAON,EAAYM,EAAEmB,OAAOF,QAAQI,QAAQ,cAExJ,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACU,EAAA,EAAD,CAAQR,KAAK,SAASS,UAAWhC,IAAUE,EAAUuB,WAAS,EAACK,QAAQ,YAAYG,MAAM,WAAzF,WAEJ,kBAACjB,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAACE,WAAW,SAASC,QAAS,GAC9C,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,+BAEJ,kBAAClB,EAAA,EAAD,CAAMK,MAAI,GACN,kBAAC,IAAD,CAAMc,GAAG,mBAAT,oBAKP/B,GACG,kBAACY,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,CAAYD,MAAM,SAAS7B,OAQ7CN,EAAYsC,aAAW,iBAAO,CAChC7B,cAAe,CACX8B,MAAO,YCxDFC,EAAeC,wBAA0B,M,sDCUhDC,EAAU,CACZ,QACA,UACA,WAGSC,EAAuB,WAChC,IAAMC,EAAUC,cACVC,EAAcC,qBAAWP,GAFO,EAGEvC,mBAA0C,IAH5C,mBAG/B+C,EAH+B,KAGjBC,EAHiB,KAKhCC,EAAKnC,cAELhB,EAAUC,IAYhB,OAVAmD,qBAAU,WACND,EAAGE,WAAH,iBAAwBN,EAAYO,IAApC,iBAAuDC,MAAMC,MAAK,SAACC,GAC/D,IAAMC,EAA8C,GACpDD,EAAcE,SAAQ,SAACC,GACnBF,EAAIG,KAAKD,EAAIE,WAEjBZ,EAAgBQ,QAErB,CAACP,EAAIJ,IAGJ,kBAAC5B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,QAAS,EAAGd,UAAWT,EAAQoB,WAC9D,kBAACD,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAAC2C,KAAK,SAASC,QAAQ,gBAAgB1C,WAAW,UAClE,kBAACH,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,CAAYJ,QAAQ,MAApB,cAEJ,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACU,EAAA,EAAD,CAAQD,QAAQ,YAAYG,MAAM,UAAU6B,KAAK,QAAQC,QAAS,kBAAMrB,EAAQgB,KAAK,gBAArF,eAGR,kBAAC1C,EAAA,EAAD,CAAMK,MAAI,GACN,kBAAC2C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,cAAY,GACf,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACK5B,EAAQ6B,KAAI,SAACC,EAAOC,GAAR,OACT,kBAACC,EAAA,EAAD,CAAWC,IAAG,gBAAWF,IAAUD,QAI/C,kBAACI,EAAA,EAAD,KAEQ5B,EAAa6B,OAAS,IAAtB,OAA2B7B,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAcuB,KAAI,SAACC,EAAoGC,GAArG,aACzC,kBAACH,EAAA,EAAD,CAAUQ,OAAK,EAACH,IAAG,oBAAeF,IAC9B,kBAACC,EAAA,EAAD,KAAYF,EAAMO,cAAgB,MAClC,kBAACL,EAAA,EAAD,KAAYF,EAAMQ,kBAAoB,MACtC,kBAACN,EAAA,EAAD,MAAY,UAAAF,EAAMS,kBAAN,eAAkBC,SAASC,uBAAwB,iBAYjGnF,EAAYsC,aAAW,iBAAO,CAChCnB,UAAW,CACPoB,MAAO,YCtEF6C,EAA0B,WACnC,IAAMrF,EAAUC,IADyB,EAGfC,mBAAiB,IAHF,mBAGlCC,EAHkC,KAG3BC,EAH2B,OAITF,mBAAiB,IAJR,mBAIlCG,EAJkC,KAIxBC,EAJwB,OAKKJ,mBAAiB,IALtB,mBAKlCoF,EALkC,KAKjBC,EALiB,OAMDrF,mBAAiB,IANhB,mBAMlCK,EANkC,KAMpBC,EANoB,KAmBzC,OACI,0BAAMC,UAAWT,EAAQU,cAAeC,SAAU,SAACC,GAAD,OAZrC,SAAOA,GAAP,eAAAC,EAAAC,OAAA,uDACbF,EAAEG,iBACFP,EAAgB,IAFH,oBAAAK,EAAA,MAIcG,SAAgBwE,+BAA+BrF,EAAOE,IAJpE,OAIHoF,EAJG,OAKTC,QAAQC,IAAIF,GALH,gDAOTjF,EAAgB,KAAIU,SAPX,wDAY4CP,CAASC,KAC9D,kBAACO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,UAAUC,QAAS,GAC7D,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWC,KAAK,QAAQC,QAASpB,EAAcqB,WAAS,EAACC,MAAO1B,EAAO2B,SAAU,SAAClB,GAAD,OAAOR,EAASQ,EAAEmB,OAAOF,QAAQG,MAAM,QAAQC,QAAQ,cAE5I,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWG,WAAS,EAACD,QAASpB,EAAcmB,KAAK,WAAWM,MAAM,WAAWH,MAAOxB,EAAUyB,SAAU,SAAClB,GAAD,OAAON,EAAYM,EAAEmB,OAAOF,QAAQI,QAAQ,cAExJ,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWG,WAAS,EAACD,QAASpB,EAAcmB,KAAK,WAAWM,MAAM,mBAAmBH,MAAOyD,EAAiBxD,SAAU,SAAClB,GAAD,OAAO2E,EAAmB3E,EAAEmB,OAAOF,QAAQI,QAAQ,cAE9K,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACU,EAAA,EAAD,CAAQC,UAAWhC,IAAUE,GAAYA,IAAaiF,EAAiB5D,KAAK,SAASE,WAAS,EAACK,QAAQ,YAAYG,MAAM,WAAzH,WAEJ,kBAACjB,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAACE,WAAW,SAASC,QAAS,GAC9C,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,kCAEJ,kBAAClB,EAAA,EAAD,CAAMK,MAAI,GACN,kBAAC,IAAD,CAAMc,GAAG,KAAT,WAKP/B,GACG,kBAACY,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,CAAYD,MAAM,SAAS7B,OAS7CN,EAAYsC,aAAW,iBAAO,CAChC7B,cAAe,CACX8B,MAAO,Y,wFC1DFoD,EAAgB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAEvC,OACI,kBAACC,EAAA,EAAD,CAASF,WAAYA,GAChBC,EAAMtB,KAAI,SAAAwB,GAAI,OACX,kBAACC,EAAA,EAAD,CAAMrB,IAAKoB,EAAKhE,OACZ,kBAACkE,EAAA,EAAD,KAAYF,EAAKhE,aCAxBmE,EAAmB,SAAC,GAAoE,IAAnEN,EAAkE,EAAlEA,WAAYO,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,eAE/DzD,EAAUC,cACV9C,EAAUC,IAEVsG,EAAS,kBAAM1D,EAAQgB,KAAKwC,IAElC,OACI,kBAACG,EAAA,EAAD,CAAQC,YAAU,EAACC,MAAM,EAAMC,QAASJ,GACpC,kBAACK,EAAA,EAAD,CAAQnG,UAAWT,EAAQ6G,QACvB,kBAACC,EAAA,EAAD,KACI,kBAAC3F,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,EAAGD,WAAW,UACnC,kBAACH,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACuF,EAAA,EAAD,CAAYC,KAAK,QAAQ5E,MAAM,UAAU8B,QAASqC,EAAQU,aAAW,SACjE,kBAAC,IAAD,QAGR,kBAAC9F,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,CAAYJ,QAAQ,MACfmE,OAMrB,kBAACjF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASE,QAAS,GACxC,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACwC,QAAQ,UACzB,kBAAC,EAAD,cAAmB,CAAC6B,cAApB,CAAiCC,MAAOQ,MAE5C,kBAACnF,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAAC4C,QAAQ,UACxBsC,EAAeT,GAAYqB,cAO1CjH,EAAYsC,aAAW,iBAAO,CAChCsE,OAAQ,CACJM,SAAU,gBCzCZC,EAAwB,CAC1BC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,QAAS,IAGAC,EAAW,WAAO,IAAD,EAEIzH,mBAAkBkH,GAFtB,mBAEnBQ,EAFmB,KAEVC,EAFU,OAGF3H,mBAAS,GAHP,mBAGnB8F,EAHmB,KAKpBhG,GALoB,KAKVC,KAEV6H,EAAsB,SAAClH,GACzB,IAAMmH,EAAc,eAAOH,GAC3BG,EAAenH,EAAEmB,OAAOiG,MAAyBpH,EAAEmB,OAAOF,MAC1DgG,EAAWE,IAmCTzB,EAAiB,CAAC,CACpBtE,MAAO,uBACPkF,UA/BA,kBAAC/C,EAAA,EAAD,CAAO1D,UAAWT,EAAQiI,OACtB,kBAAC9G,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAS,EAAGF,UAAU,SAASZ,UAAWT,EAAQoB,WAC9D,kBAACD,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACa,EAAA,EAAD,CAAYJ,QAAQ,MAApB,yBAEJ,kBAACd,EAAA,EAAD,CAAMK,MAAI,EAACJ,WAAS,EAACC,UAAU,SAASE,QAAS,GAC7C,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWyG,UAAQ,EAACtG,WAAS,EAACI,MAAM,YAAYF,SAAUgG,EAAqBjG,MAAO+F,EAAQP,SAAUpF,QAAQ,cAEpH,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWyG,UAAQ,EAACtG,WAAS,EAACI,MAAM,YAAYF,SAAUgG,EAAqBjG,MAAO+F,EAAQN,SAAUrF,QAAQ,cAEpH,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWG,WAAS,EAACI,MAAM,eAAeF,SAAUgG,EAAqBjG,MAAO+F,EAAQL,KAAMtF,QAAQ,cAE1G,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWyG,UAAQ,EAACtG,WAAS,EAACI,MAAM,OAAOF,SAAUgG,EAAqBjG,MAAO+F,EAAQJ,KAAMvF,QAAQ,cAE3G,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWyG,UAAQ,EAACtG,WAAS,EAACI,MAAM,QAAQF,SAAUgG,EAAqBjG,MAAO+F,EAAQH,MAAOxF,QAAQ,cAE7G,kBAACd,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWyG,UAAQ,EAACtG,WAAS,EAACI,MAAM,WAAWF,SAAUgG,EAAqBjG,MAAO+F,EAAQF,QAASzF,QAAQ,mBAYlI,OAAO,kBAAC,EAAD,eAAkBoE,WAAW,KAAQ,CAACC,kBAAtC,CAAuDT,WAAYG,EAAMI,cAAc,wBAG5FnG,EAAYsC,aAAW,SAAA4F,GAAK,MAAK,CACnC/G,UAAW,CACPgH,QAASD,EAAM5G,QAAQ,EAAG,IAE9B0G,MAAO,CACHzF,MAAO,Y,kBCrEF6F,EAA+B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEpCtI,EAAUC,KAChB,OACI,oCACI,kBAACsI,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC3B,EAAA,EAAD,MACA,yBAAKrG,UAAWT,EAAQ0I,MACnBJ,MAOfrI,GAAYsC,aAAW,iBAAO,CAChCmG,KAAM,CACFC,QAAS,OACTC,eAAgB,c,0DCflB3I,GAAYsC,aAAW,SAAC4F,GAAD,MAC1B,CACCO,KAAM,CACJG,SAAU,GAEZC,WAAY,CACVC,YAAaZ,EAAM5G,QAAQ,IAE7ByH,MAAO,CACLH,SAAU,GAEZI,KAAM,CACJC,eAAgB,OAChB9G,MAAO,aAKA+G,GAAY,WACvB,IAAMnJ,EAAUC,KADa,EAEGmJ,IAAMlJ,SAA6B,MAFtC,mBAEtBmJ,EAFsB,KAEZC,EAFY,KAGvB5C,EAAO6C,QAAQF,GAOfG,EAAc,WAClBF,EAAY,OAQd,OACE,yBAAK7I,UAAWT,EAAQ0I,MACtB,kBAAC9B,EAAA,EAAD,CAAQO,SAAS,UACf,kBAACL,EAAA,EAAD,KACI,kBAACzE,EAAA,EAAD,CAAYJ,QAAQ,KAAKxB,UAAWT,EAAQgJ,OAC1C,kBAAC,IAAD,CAAM1G,GAAG,IAAI7B,UAAWT,EAAQiJ,MAAhC,cAIF,kBAAClC,EAAA,EAAD,CACIE,aAAW,0BACXwC,gBAAc,cACdC,gBAAc,OACdxF,QA1BK,SAACyF,GAClBL,EAAYK,EAAMC,gBA0BNxH,MAAM,WAEN,kBAAC,KAAD,OAEJ,kBAACyH,GAAA,EAAD,CACIC,GAAG,cACHT,SAAUA,EACVU,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBvD,KAAMA,EACNC,QAAS6C,GAET,kBAACY,GAAA,EAAD,CAAUlG,QAASsF,GAAnB,WACA,kBAACY,GAAA,EAAD,CAAUlG,QAASsF,GAAnB,cACA,kBAACa,GAAA,EAAD,MACA,kBAACD,GAAA,EAAD,CAAUlG,QAzCH,0BAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACIyJ,UAAgBC,WADpB,OACb9E,EADa,OAEnBC,QAAQC,IAAIF,GAFO,uCAyCP,eC7EH+E,GAA8B,SAAC,GAAgB,IAAflC,EAAc,EAAdA,SACzC,OACI,oCACI,kBAAC,GAAD,MACA,kBAACxB,EAAA,EAAD,MACA,kBAAC3F,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAASD,UAAU,UAC1C,kBAACF,EAAA,EAAD,CAAMK,MAAI,GACL8G,MCbfmC,GAAW,SAACvD,GAAD,OAAyC,kBAAC,EAAD,KAAcA,IAClEwD,GAAU,SAACxD,GAAD,OAAyC,kBAAC,GAAD,KAAaA,IAEzDyD,GAAoB,WAE7B,OADoB3H,qBAAWP,GAGvB,oCACI,kBAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMJ,GAAQ,kBAAC,EAAD,UAC5C,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAMJ,GAAQ,kBAAC,EAAD,WAKzD,oCACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAML,GAAS,kBAAC,EAAD,UAC7C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,kBAAML,GAAS,kBAAC,EAAD,UAC3D,kBAAC,IAAD,CAAUnI,GAAG,Q,cCR7BtB,gBAVuB,CACnB+J,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,6CCFX,IAAMxI,GAAUyI,cAEVnD,GAAQoD,YAAe,IAiCdC,GA9BO,WAAO,IAAD,EACYtL,mBAAqB,MADjC,mBACnB6C,EADmB,KACN0I,EADM,OAEIvL,oBAAkB,GAFtB,mBAEnBwL,EAFmB,KAEVC,EAFU,KAgB1B,OAZAvI,qBAAU,WACRpC,SAAgB4K,oBAAmB,SAACC,GAC9BA,GACFJ,EAAeI,GACfF,GAAW,KAEXF,EAAe,MACfE,GAAW,SAGd,IAEAD,EAAgB,qCAEjB,kBAACI,EAAA,EAAD,CAAe3D,MAAOA,IAClB,kBAAC1F,EAAYsJ,SAAb,CAAsBlK,MAAOkB,GACzB,kBAAC,IAAD,CAAQF,QAASA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,WCzBA0G,QACW,cAA7ByC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStB,OAAO,kBAAC,GAAD,MAASuB,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjJ,MAAK,SAAAkJ,GACjCA,EAAaC,iB","file":"static/js/main.95d63bff.chunk.js","sourcesContent":["import React, {useState } from 'react';\nimport {\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Typography\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\n\nexport const Login: React.FC = () => {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [errorMessage, setErrorMessage] = useState<string>('');\n\n    const onSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setErrorMessage('');\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    }\n\n    return(\n        <form className={classes.formContainer} onSubmit={(e) => onSubmit(e)}>\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={4}>\n                <Grid item>\n                    <TextField type=\"email\" error={!!errorMessage} fullWidth value={email} onChange={(e) => setEmail(e.target.value)} label=\"email\" variant=\"outlined\"/>\n                </Grid>\n                <Grid item>\n                    <TextField fullWidth error={!!errorMessage} type=\"password\" label=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} variant=\"outlined\"/>\n                </Grid>\n                <Grid item>\n                    <Button type=\"submit\" disabled={!email || !password} fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n                </Grid>\n                <Grid item container alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <Typography>Dont have an account?</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Link to=\"/create-account\">\n                            Create account\n                        </Link>\n                    </Grid>\n                </Grid>\n                {errorMessage && (\n                    <Grid item>\n                        <Typography color=\"error\">{errorMessage}</Typography>\n                    </Grid>\n                )}\n            </Grid>\n        </form>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        width: '50vh'\n    }\n}));","import {createContext} from 'react';\n\ninterface user {\n    activeUser: any\n}\n\nexport const UserContext =  createContext<any | null>(null);","import React, {useEffect, useContext, useState} from 'react';\nimport { UserContext } from '../context/UserContext';\nimport * as firebase from 'firebase/app';\nimport { Paper,\n    Table, \n    TableHead, \n    TableRow, \n    TableCell, \n    TableBody,\n    Grid,\n    Typography,\n    Button,\n    makeStyles\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst headers = [\n    'Order',\n    'Address',\n    'Created'\n]\n\nexport const Dashboard : React.FC = () => {\n    const history = useHistory();\n    const currentUser = useContext(UserContext);\n    const [lienSearches, setLienSearches] = useState<firebase.firestore.DocumentData>([]);\n\n    const db = firebase.firestore();\n\n    const classes = useStyles();\n    \n    useEffect(() => {\n        db.collection(`/users/${currentUser.uid}/lien_search`).get().then((querySnapshot) => {\n            const arr: Array<firebase.firestore.DocumentData> = [];\n            querySnapshot.forEach((doc) => {\n                arr.push(doc.data());\n            });\n            setLienSearches(arr);\n        });\n    }, [db, currentUser])\n\n    return (\n        <Grid container direction=\"column\" spacing={5} className={classes.container}>\n            <Grid item container wrap=\"nowrap\" justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                    <Typography variant=\"h4\">Dashboard</Typography>\n                </Grid>\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => history.push('/new-order')}>New Order</Button>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Paper>\n                    <Table stickyHeader>\n                        <TableHead>\n                            <TableRow>\n                                {headers.map((entry, index) => (\n                                    <TableCell key={`header${index}`}>{entry}</TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                lienSearches.length > 0 && lienSearches?.map((entry: { order_number: number; property_address: string; created_on: firebase.firestore.Timestamp}, index: number) => (\n                                    <TableRow hover key={`liensearch${index}`}>\n                                        <TableCell>{entry.order_number || '--'}</TableCell>\n                                        <TableCell>{entry.property_address || '--'}</TableCell>\n                                        <TableCell>{entry.created_on?.toDate().toLocaleDateString() || '--'}</TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: '80vw'\n    }\n}))","import React, {useState } from 'react';\nimport {\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Typography\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\n\nexport const CreateAccount: React.FC = () => {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\n    const [errorMessage, setErrorMessage] = useState<string>('');\n\n    const onSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setErrorMessage('');\n        try {\n            const response = await firebase.auth().createUserWithEmailAndPassword(email, password);\n            console.log(response);\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    }\n\n    return(\n        <form className={classes.formContainer} onSubmit={(e) => onSubmit(e)}>\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={4} >\n                <Grid item>\n                    <TextField type=\"email\" error={!!errorMessage} fullWidth value={email} onChange={(e) => setEmail(e.target.value)} label=\"Email\" variant=\"outlined\"/>\n                </Grid>\n                <Grid item>\n                    <TextField fullWidth error={!!errorMessage} type=\"password\" label=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} variant=\"outlined\"/>\n                </Grid>\n                <Grid item>\n                    <TextField fullWidth error={!!errorMessage} type=\"password\" label=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} variant=\"outlined\"/>\n                </Grid>\n                <Grid item>\n                    <Button disabled={!email || !password || password !== confirmPassword} type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Submit</Button>\n                </Grid>\n                <Grid item container alignItems=\"center\" spacing={1}>\n                    <Grid item>\n                        <Typography>Already have an account?</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Link to=\"/\">\n                            Login\n                        </Link>\n                    </Grid>\n                </Grid>\n                {errorMessage && (\n                    <Grid item>\n                        <Typography color=\"error\">{errorMessage}</Typography>\n                    </Grid>\n                )}\n\n            </Grid>\n        </form>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    formContainer: {\n        width: '50vh'\n    }\n}));","import React from 'react';\nimport {Stepper, Step, StepLabel} from '@material-ui/core';\n\ninterface Props {\n    activeStep: number,\n    steps: Array<{\n        label: string\n    }>\n}\n\nexport const CreateStepper = ({activeStep, steps}: Props) => {\n\n    return (\n        <Stepper activeStep={activeStep}>\n            {steps.map(step => (\n                <Step key={step.label}>\n                    <StepLabel>{step.label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    )\n}","import React from 'react';\nimport { Dialog, Grid, AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useHistory } from 'react-router-dom';\nimport { CreateStepper } from './CreateStepper';\n\ninterface Props {\n    toolbarHeader: string,\n    cancelPath: string,\n    activeStep: number,\n    stepComponents: Array<{\n        label: string,\n        component: JSX.Element\n    }>\n}\n\nexport const FullScreenCreate = ({activeStep, toolbarHeader, cancelPath, stepComponents}: Props) => {\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const cancel = () => history.push(cancelPath)\n\n    return (\n        <Dialog fullScreen open={true} onClose={cancel}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={cancel} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {toolbarHeader}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction=\"column\" spacing={4}>\n                <Grid container item justify=\"center\">\n                    <CreateStepper {...{activeStep}} steps={stepComponents} />\n                </Grid>\n                <Grid item container justify=\"center\">\n                    {stepComponents[activeStep].component}\n                </Grid>\n            </Grid>\n        </Dialog>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    appBar: {\n        position: 'relative'\n    }\n}))","import React, { useState } from 'react';\nimport { Paper, Grid, TextField, Typography, makeStyles } from '@material-ui/core';\nimport { CreateStepper } from '../components/CreateStepper';\nimport { FullScreenCreate } from '../components/FullScreenCreate';\n\ninterface Address {\n    address1: string\n    address2: string\n    unit: string\n    city: string\n    state: string\n    zipCode: string\n}\n\nconst emptyAddress: Address = {\n    address1: '',\n    address2: '',\n    unit: '',\n    city: '',\n    state: '',\n    zipCode: '',\n}\n\nexport const NewOrder = () => {\n\n    const [address, setAddress] = useState<Address>(emptyAddress);\n    const [step, setStep] = useState(0);\n\n    const classes = useStyles();\n\n    const handleAddressChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const currentAddress = {...address};\n        currentAddress[e.target.name as keyof Address] = e.target.value as string;\n        setAddress(currentAddress);\n    }\n\n    \n\n    const step1 = (\n        <Paper className={classes.paper}>\n            <Grid container spacing={3} direction=\"column\" className={classes.container}>\n                <Grid item>\n                    <Typography variant=\"h6\">Property Information</Typography>\n                </Grid>\n                <Grid item container direction=\"column\" spacing={2}>\n                    <Grid item>\n                        <TextField required fullWidth label=\"Address 1\" onChange={handleAddressChange} value={address.address1} variant=\"outlined\" />\n                    </Grid>\n                    <Grid item>\n                        <TextField required fullWidth label=\"Address 2\" onChange={handleAddressChange} value={address.address2} variant=\"outlined\" />\n                    </Grid>\n                    <Grid item>\n                        <TextField fullWidth label=\"Unit / Suite\" onChange={handleAddressChange} value={address.unit} variant=\"outlined\" />\n                    </Grid>\n                    <Grid item>\n                        <TextField required fullWidth label=\"City\" onChange={handleAddressChange} value={address.city} variant=\"outlined\" />\n                    </Grid>\n                    <Grid item>\n                        <TextField required fullWidth label=\"State\" onChange={handleAddressChange} value={address.state} variant=\"outlined\" />\n                    </Grid>\n                    <Grid item>\n                        <TextField required fullWidth label=\"Zip Code\" onChange={handleAddressChange} value={address.zipCode} variant=\"outlined\" />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n\n    const stepComponents = [{\n        label: 'Property Information',\n        component: step1\n    }]\n\n    return <FullScreenCreate cancelPath=\"/\" {...{stepComponents}} activeStep={step} toolbarHeader=\"Create New Order \" />\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(3, 7)\n    },\n    paper: {\n        width: '40vw'\n    }\n}))","import React from 'react';\nimport {\n    Container, \n    CssBaseline,\n    makeStyles,\n    Toolbar\n} from '@material-ui/core';\n\ninterface Props {\n    children: JSX.Element\n}\n\nexport const AuthWrapper: React.FC<Props> = ({children}) => {\n\n    const classes = useStyles();\n    return (\n        <>\n            <CssBaseline />\n            <Container maxWidth=\"sm\">\n                <Toolbar />\n                <div className={classes.root}>\n                    {children}\n                </div>\n            </Container>\n        </>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        justifyContent: \"center\"\n    }\n}))","import React from 'react';\nimport { Theme } from '@material-ui/core/styles';\nimport { \n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    MenuItem,\n    makeStyles,\n    Menu,\n    Divider\n } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport * as Firebase from 'firebase';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      textDecoration: 'none',\n      color: 'white'\n    }\n  }),\n);\n\nexport const AppHeader = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = async () => {\n    const response = await Firebase.auth().signOut();\n    console.log(response);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/\" className={classes.link}>\n                    Dashboard\n              </Link>\n            </Typography>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n                >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n                >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <Divider />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};","import React from 'react';\nimport {\n    Toolbar,\n    Grid\n} from '@material-ui/core';\n\nimport {AppHeader} from './AppHeader';\n\ninterface Props {\n    children: JSX.Element\n}\n\nexport const AppWrapper: React.FC<Props> = ({children}) => {\n    return (\n        <>\n            <AppHeader />\n            <Toolbar />\n            <Grid container alignItems=\"center\" direction=\"column\">\n                <Grid item>\n                    {children}\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { Login, Dashboard, CreateAccount, NewOrder  } from './views';\nimport { UserContext } from './context/UserContext';\nimport {AuthWrapper, AppWrapper} from './components';\n\nconst authWrap = (component: JSX.Element): JSX.Element => <AuthWrapper>{component}</AuthWrapper>\nconst appWrap = (component: JSX.Element): JSX.Element => <AppWrapper>{component}</AppWrapper>\n\nexport const Routes : React.FC = () => {\n    const currentUser = useContext(UserContext);\n    if(currentUser) {\n        return (\n            <>\n                <Route exact path='/' render={() => appWrap(<Dashboard />)} />\n                <Route exact path='/new-order' render={() => appWrap(<NewOrder />)} />\n            </>\n        )\n    } else {\n        return (\n            <>\n                <Route exact path=\"/\" render={() => authWrap(<Login />)} />\n                <Route exact path='/create-account' render={() => authWrap(<CreateAccount />)} />\n                <Redirect to=\"/\" />\n            </>\n        )\n    }\n}","import * as firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCa61N2rKPLU-m7RW-iQ1Xd2G8d2GL0to8\",\n    authDomain: \"lien-search-262720.firebaseapp.com\",\n    databaseURL: \"https://lien-search-262720.firebaseio.com\",\n    projectId: \"lien-search-262720\",\n    storageBucket: \"lien-search-262720.appspot.com\",\n    messagingSenderId: \"45974338820\",\n    appId: \"1:45974338820:web:762f88d7c893541b0ce451\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n","import React, {useState, useEffect} from 'react';\nimport { Switch, Router } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport {Routes} from './Routes';\nimport { UserContext } from './context/UserContext';\nimport * as firebase from 'firebase/app';\nimport './initFirebase';\n\nconst history = createBrowserHistory();\n\nconst theme = createMuiTheme({})\n\n\nconst App: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState<any | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n        setLoading(false);\n      } else {\n        setCurrentUser(null);\n        setLoading(false);\n      }\n    });\n  }, []);\n  \n  if(loading) return <></>;\n  return (\n    <ThemeProvider theme={theme}>\n        <UserContext.Provider value={currentUser}>\n            <Router history={history}>\n                <Switch>\n                    <Routes />\n                </Switch>\n            </Router>\n        </UserContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
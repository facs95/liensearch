{"version":3,"sources":["Interfaces.ts","components/PaperWrapper.tsx","views/auth/Login.tsx","context/UserContext.ts","components/StatusChip.tsx","components/OrderTable.tsx","components/SearchInput.tsx","components/EmpyState.tsx","components/CustomDrawer.tsx","components/OrderTypeSelector.tsx","components/OrgSelector.tsx","components/StatusSelector.tsx","components/SelectEmployee.tsx","components/FilterDrawer.tsx","components/OrdersTable.tsx","context/TitleContext.ts","context/ActionButtonContext.tsx","views/Dashboard.tsx","views/auth/CreateAccount.tsx","components/CreateStepper.tsx","components/FullScreenCreate.tsx","components/CreateWrapper.tsx","components/CutomAccordion.tsx","utils/orders.ts","components/DisplayOrder.tsx","views/NewOrder/Step3.tsx","components/OrderCard.tsx","views/NewOrder/Step1.tsx","components/AssociationForm.tsx","components/InputGenerator.tsx","components/LandSurveryForm.tsx","components/OrderForms/AddressForm.tsx","components/OrderForms/DataForm.tsx","components/CreateOrderForm.tsx","views/NewOrder/NewOrder.tsx","components/AuthWrapper.tsx","components/AppHeader.tsx","context/LoadingContext.ts","components/LeftNav/LeftNav.tsx","components/NavigationBar.tsx","components/AppWrapper.tsx","context/SnackContext.ts","components/UploadDocuments.tsx","components/KPI.tsx","components/OrderDetails/OrderStatusTypeController.tsx","components/OrderDetails/OrderAssigneeController.tsx","components/OrderDetails/EstimatedDeliveryController.tsx","components/ModifyOrderDrawer.tsx","components/ActiveIcon.tsx","views/OrderInfo.tsx","views/auth/ForgotPassword.tsx","views/admin/CreateNewOrg.tsx","views/admin/OrgsTable.tsx","views/admin/ManageClients.tsx","views/admin/SetAdmin.tsx","views/admin/EmployeesTable.tsx","views/admin/ManageEmployees.tsx","views/UserProfile.tsx","Routes.tsx","initFirebase.js","components/SnackMessage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["OrderStatusEnum","OrderTypeEnum","OrderTypeStatusEnum","AddressEnum","OrderDataEnum","LandSurveyDetailsEnum","PaperWrapper","children","classes","useStyles","Paper","className","padding","makeStyles","theme","spacing","width","Login","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","onSubmit","e","a","preventDefault","firebase","auth","signInWithEmailAndPassword","message","form","alt","logo","src","process","Grid","container","direction","alignItems","item","TextField","type","error","fullWidth","value","onChange","target","label","variant","helperText","to","Button","disabled","color","Typography","title","alignSelf","height","marginBottom","display","flexDirection","UserContext","createContext","emptyOrderType","isActive","status","assignee","estimatedDelivery","emptyOrdersType","lienSearch","estoppelLetter","landSurvey","permitResolution","StatusChip","size","Box","inProgress","backgroundColor","palette","info","main","finalized","success","cancelled","hold","warning","borderRadius","shape","headers","OrderTable","orders","Table","TableHead","TableRow","map","entry","index","TableCell","key","TableBody","order","i","Row","history","useHistory","onClick","id","objectID","push","hover","pointer","orderNumber","address","address1","folio","Date","created_on","toLocaleString","cursor","SearchInput","setValue","xs","InputProps","disableUnderline","placeholder","EmptyState","imageFile","description","button","justify","style","maxWidth","undefined","image","align","data-test","text","fill","primary","CustomDrawer","open","onClose","content","IconButton","Drawer","anchor","OrderTypeSelector","orderType","setOrderType","select","MenuItem","Object","keys","s","OrgSelector","orgId","setOrgId","orgOptions","setOrgOptions","user","useContext","db","firestore","useEffect","admin","collection","get","then","querySnapshot","arr","forEach","doc","data","catch","err","console","log","option","name","StatusSelector","setStatus","withLabel","OrderAssigneeController","currentAssignee","setCurrentAssignee","userOptions","setUserOptions","FilterDrawer","filters","organizations","employee","filterStatus","setFilterStatus","filterOrg","setFilterOrg","filterEmployee","setFilterEmployee","filterOrderType","setFilterOrderType","setter","forOwn","header","getFilter","Map","generateFilterQuery","initialValue","transform","acc","OrdersTable","setOrders","searchQuery","setSearchQuery","useLocation","pathname","state","openFilter","useMemo","filtersOptions","getOrders","useCallback","searchClient","algoliasearch","initIndex","filterArr","search","facetFilters","hits","wrap","Badge","invisible","values","find","length","TitleContext","setTitle","ActionButtonContext","actionButton","setNavigationBar","Dashboard","action","CreateAccount","useForm","register","handleSubmit","pn","PhoneNumber","phoneNumber","isValid","Error","createUser","functions","httpsCallable","getNumber","inputRef","CreateStepper","activeStep","steps","Stepper","step","Step","StepLabel","FullScreenCreate","toolbarHeader","cancelPath","stepComponents","createStep","parseInt","Dialog","fullScreen","AppBar","appBar","Toolbar","edge","aria-label","component","position","paper","buttons","CreateWrapper","isLast","isFirst","onNext","onCancel","hideActions","goBack","margin","CustomAccordion","defaultExpanded","Accordion","accordion","AccordionSummary","expandIcon","AccordionDetails","subHeader","getAddressStr","address2","unit","zipCode","city","orderTypeText","orderInfoText","landSurveyDetailsText","orderDetails","landSurveyDetails","DisplayOrder","userData","org","setOrg","requestedBy","setRequestedBy","loading","setLoading","exists","finally","accordions","elements","entries","el","getOrderTypes","detail","details","hardCopy","getLandSurveyInfo","Step3","associations","orderComplete","setOrderComplete","o","uid","now","update","add","getIcon","OrderCard","selected","icon","borderColor","border","Step1","basePath","orderTypes","setOrderTypes","typeCards","Divider","md","c","curr","handleDataChange","card","AssociationForm","setAssociations","setIsAssociationsReady","updatedData","isReady","some","splice","removeAssociation","autoComplete","required","number","blankAssociation","startIcon","InputGenerator","isNotRequired","isNumber","isBoolean","FormControl","FormGroup","FormControlLabel","control","Checkbox","checked","n","val","current","LandSurveyForm","setLandSurvey","setIsLandSurveyReady","inputList","AddressForm","setAddress","setIsAddressReady","DataForm","orderData","setOrderData","setIsDataReady","utils","DateFnsUtils","format","inputVariant","neededDate","newDate","toLocaleDateString","KeyboardButtonProps","closingDate","CreateOrderForm","setData","isAddressReady","isDataReady","isAssociationsReady","isLandSurveyReady","blankAddress","bankLandSurvey","lenderCertification","buyerCertification","underwriterCertification","titleCompany","blankData","specialInstructions","legalDescription","seller","buyer","listingAgent","listingAgentPhone","NewOrder","location","preOrderType","preData","preAssocations","useParams","pickBy","_","includes","destructureOrder","extend","CircularProgress","AuthWrapper","root","CssBaseline","justifyContent","menuButton","marginRight","link","textDecoration","flexGrow","divider","breakpoints","up","marginLeft","DRAWER_WIDTH","toolBar","paddingLeft","paddingRight","paddingTop","AppHeader","React","anchorEl","setAnchorEl","Boolean","currentUser","handleLogout","Firebase","signOut","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","ListItemAvatar","Avatar","charAt","ListItemText","LoadingContext","LeftNav","options","drawer","Hidden","xsDown","implementation","drawerPaper","logoContainer","List","Fragment","ListItem","ListItemIcon","flexShrink","NavigationBar","Breadcrumbs","Link","breadcrumbText","AppWrapper","noBreadCrumb","noPadding","Provider","LinearProgress","paddingContent","bottomMargin","SnackContext","setMessage","setMessageType","UploadDocuments","orderId","listOfFiles","setListOfFiles","uploadLoading","setUploadLoading","docsPath","storage","catchError","createSuccess","listFiles","ref","child","listAll","res","items","cardContainer","input","multiple","files","uploadReference","prom","file","put","Promise","all","htmlFor","noWrap","fileName","getDownloadURL","url","xhr","XMLHttpRequest","responseType","onload","blob","response","window","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","send","delete","KPI","kpis","kpi","isValidElement","getItem","OrderStatusTypeController","currentStatus","setCurrentStatus","EstimatedDeliveryController","setEstimatedDelivery","emptyLabel","disablePast","ModifyOrderDrawer","refreshOrder","currentTypeStatus","setCurrentTypeStatus","newStatus","newstat","onApply","ActiveIcon","active","inactive","OrderInfo","setOrder","updateOrder","modifyType","orderCount","getTypeData","ForgotPassword","sendPasswordResetEmail","CreateNewOrg","orgName","setOrgName","onCreateOrgClick","setPhoneNumber","columns","OrgsTable","records","orgs","column","row","col","ManageClients","setOrgs","orgPhoneNumber","setOrgPhoneNumber","orgAddress","setOrgAddress","getOrgs","users","FieldValue","serverTimestamp","SetAdmin","setName","onSetNewAdminClick","EmployeesTable","employees","ManageEmployees","setEmployees","getEmployees","setAdminUser","UserProfile","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","authWrap","appWrap","Routes","exact","path","render","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SlideTransition","props","Slide","timeout","MessageSnackbar","messageType","setOpen","timeoutRef","useRef","clearTimeout","handleClose","setTimeout","Snackbar","autoHideDuration","ContentProps","TransitionComponent","dark","createBrowserHistory","createMuiTheme","secondary","typography","fontFamily","fontSize","subtitle1","fontWeight","h5","overrides","MuiButton","MuiDivider","MuiFormLabel","focused","MuiTextField","MuiOutlinedInput","App","setCurrentUser","onAuthStateChanged","getIdTokenResult","token","claims","userDoc","ThemeProvider","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","registration","scope","ready","unregister"],"mappings":"+KAkBYA,EAOAC,EAOAC,EAUAC,EASAC,EAWAC,E,yLCvDCC,EAAe,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAEpBC,EAAUC,IAEhB,OACI,kBAACC,EAAA,EAAD,CAAOC,UAAWH,EAAQI,SACrBL,IAKPE,EAAYI,aAAW,SAAAC,GAAK,MAAK,CACnCF,QAAS,CACLA,QAASE,EAAMC,QAAQ,GACvBC,MAAO,SCTFC,EAAkB,WAAO,IAAD,EACPC,mBAAiB,IADV,mBAC1BC,EAD0B,KACnBC,EADmB,OAEDF,mBAAiB,IAFhB,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAGOJ,mBAAiB,IAHxB,mBAG1BK,EAH0B,KAGZC,EAHY,KAK3BhB,EAAUC,IACVgB,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACbD,EAAEE,iBACFJ,EAAgB,IAFH,kBAIHK,IAASC,OAAOC,2BAA2BZ,EAAOE,GAJ/C,uDAMTG,EAAgB,KAAIQ,SANX,yDAAH,sDAUd,OACI,kBAAC,EAAD,KACI,0BAAMP,SAAU,SAACC,GAAD,OAAOD,EAASC,IAAIf,UAAWH,EAAQyB,MACnD,yBACIC,IAAI,GACJvB,UAAWH,EAAQ2B,KACnBC,IAAG,UAAKC,GAAL,eAEP,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,WAAW,UACX1B,QAAS,GAET,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,QAAStB,EACTuB,WAAS,EACTC,MAAO5B,EACP6B,SAAU,SAACtB,GAAD,OAAON,EAASM,EAAEuB,OAAOF,QACnCG,MAAM,QACNC,QAAQ,cAGhB,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACTD,QAAStB,EACTqB,KAAK,WACLM,MAAM,WACNH,MAAO1B,EACP2B,SAAU,SAACtB,GAAD,OAAOJ,EAAYI,EAAEuB,OAAOF,QACtCI,QAAQ,WACRC,WACI,kBAACd,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,IAAD,CAAMW,GAAG,oBAAT,uBAOhB,kBAACf,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIV,KAAK,SACLW,UAAWpC,IAAUE,EACrByB,WAAS,EACTK,QAAQ,YACRK,MAAM,WALV,UAUJ,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,SAAS1B,QAAS,GAC9C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,+BAEJ,kBAACnB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,IAAD,CAAMW,GAAG,mBAAT,oBAGP9B,GACG,kBAACe,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYD,MAAM,SACbjC,QAU3Bd,EAAYI,aAAW,SAACC,GAAD,MAAY,CACrC4C,MAAO,CACHC,UAAW,UAEfxB,KAAM,CACFyB,OAAQ,GACRC,aAAc/C,EAAMC,QAAQ,IAEhCkB,KAAM,CACF6B,QAAS,OACTC,cAAe,SACftB,WAAY,cC/GPuB,EAAeC,wBAA2B,M,4GHe3CjE,K,yBAAAA,E,sBAAAA,E,sBAAAA,E,aAAAA,M,cAOAC,K,yBAAAA,E,iCAAAA,E,yBAAAA,E,sCAAAA,M,cAOAC,K,qBAAAA,E,YAAAA,E,6CAAAA,E,2CAAAA,E,iCAAAA,E,sBAAAA,E,uBAAAA,M,cAUAC,K,qBAAAA,E,qBAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,oBAAAA,M,cASAC,K,kCAAAA,E,cAAAA,E,qCAAAA,E,gBAAAA,E,cAAAA,E,6BAAAA,E,wCAAAA,E,4CAAAA,M,cAWAC,K,2CAAAA,E,yCAAAA,E,qDAAAA,E,6BAAAA,E,8BAAAA,M,KAcL,IAAM6D,EAAqC,CAC9CC,UAAU,EACVC,OAAQ,WACRC,SAAU,GACVC,kBAAmB,IAGVC,EAAuC,CAChDC,WAAW,eAAKN,GAChBO,eAAe,eAAKP,GACpBQ,WAAW,eAAKR,GAChBS,iBAAiB,eAAKT,II5EbU,EAAa,SAAC,GAAqC,IAAnCR,EAAkC,EAAlCA,OAAkC,IAA1BS,KAC3BrE,EAAUC,OAD2C,MAAnB,MAAmB,EAC3CA,GAEhB,OACI,kBAACqE,EAAA,EAAD,CAAKnE,UAAS,UAAKH,EAAQ+B,UAAb,YAA0B/B,EAAQ4D,KAC5C,kBAACX,EAAA,EAAD,KAAazD,EAAgBoE,MAKnC3D,EAAY,SAACoE,GAAD,OAAgBhE,aAAW,SAACC,GAAD,MAAY,CACrDiE,WAAY,CACRC,gBAAiBlE,EAAMmE,QAAQC,KAAKC,MAExCC,UAAW,CACPJ,gBAAiBlE,EAAMmE,QAAQI,QAAQF,MAE3CG,UAAW,CACPN,gBAAiBlE,EAAMmE,QAAQpC,MAAMsC,MAEzCI,KAAM,CACFP,gBAAiBlE,EAAMmE,QAAQO,QAAQL,MAE3C5C,UAAW,CACP3B,QAAkB,UAATiE,EAAmB/D,EAAMC,QAAQ,GAAK,GAAKD,EAAMC,QAAQ,EAAG,GACrE0E,aAAc3E,EAAM4E,MAAMD,aAC1BjC,MAAO,QACPM,QAAS,qBCxBX6B,EAAU,CACZ,sBACA,UACA,QACA,SACA,WAOSC,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACzB,OACI,kBAACnF,EAAA,EAAD,KACI,kBAACoF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKL,EAAQM,KAAI,SAACC,EAAOC,GAAR,OACT,kBAACC,EAAA,EAAD,CAAWC,IAAG,gBAAWF,IACpBD,QAKjB,kBAACI,EAAA,EAAD,KACKT,EAAOI,KAAI,SAACM,EAAOC,GAAR,OACR,kBAAC,EAAD,eAAKH,IAAG,gBAAWG,IAAS,CAAED,kBAYhDE,EAAM,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,MACLG,EAAUC,cACVnG,EAAUC,IAMhB,OACI,kBAACuF,EAAA,EAAD,CACIY,QAAS,kBANAC,EAMcN,EAAMO,cALjCJ,EAAQK,KAAR,iBAAuBF,IADX,IAACA,GAOTG,OAAK,EACLrG,UAAWH,EAAQyG,SAEnB,kBAACb,EAAA,EAAD,KAAYG,EAAMW,aAAe,MACjC,kBAACd,EAAA,EAAD,KAAYG,EAAMY,QAAQC,UAAY,MACtC,kBAAChB,EAAA,EAAD,KAAYG,EAAMc,OAAS,MAC3B,kBAACjB,EAAA,EAAD,KACI,kBAAC,EAAD,CAAYvB,KAAK,QAAQT,OAAQmC,EAAMnC,UAE3C,kBAACgC,EAAA,EAAD,KACK,IAAIkB,KAAKf,EAAMgB,YAAYC,kBAAoB,QAM1D/G,EAAYI,aAAW,iBAAO,CAChC0B,UAAW,CACPvB,MAAO,QAEXiG,QAAS,CACLQ,OAAQ,e,oBC5EHC,GAAc,SAAC,GAAgC,IAA9B3E,EAA6B,EAA7BA,MAAO4E,EAAsB,EAAtBA,SAEjC,OACI,kBAACrF,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAG0B,WAAW,YACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,KAAD,CAAYc,MAAM,cAEtB,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACjF,EAAA,EAAD,eACIkF,WAAY,CAACC,kBAAkB,GAC/BhF,WAAS,GACL,CAAEC,SAHV,CAIIC,SAAU,SAACtB,GAAD,OAAOiG,EAASjG,EAAEuB,OAAOF,QACnCgF,YAAY,yD,SCVnBC,GAAa,SAAC,GAMb,IALVC,EAKS,EALTA,UACAvE,EAIS,EAJTA,MACAwE,EAGS,EAHTA,YACAC,EAES,EAFTA,OACAnH,EACS,EADTA,MAEMR,EAAUC,KAEhB,OACI,kBAAC6B,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTC,UAAU,SACV4F,QAAQ,SACR3F,WAAW,SACX1B,QAAS,GAET,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,yBACI2F,MAAOrH,EAAQ,CAAEsH,SAAUtH,QAAUuH,EACrC5H,UAAWH,EAAQgI,MACnBpG,IAAG,UAAKC,GAAL,0BAA6C4F,GAChD/F,IAAI,MAGZ,kBAACI,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAAMO,IAE7BwE,GACG,kBAAC5F,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,CAAYgF,MAAM,SAAStF,QAAQ,SAC9B+E,IAKZC,GACG,kBAAC7F,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIoF,YAAU,qBACVnF,SAAU4E,EAAO5E,SACjBC,MAAM,UACNqB,KAAK,QACL1B,QAAQ,YACRyD,QAASuB,EAAOvB,SAEfuB,EAAOQ,SAQ1BlI,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrC0H,MAAO,CACHF,SAAU,QACVM,KAAM9H,EAAMmE,QAAQ4D,QAAQ1D,U,mDCnDvB2D,GAAe,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QACpCzI,EAAUC,KAEV8B,EACF,kBAACD,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACV7B,UAAWH,EAAQ+B,UACnBxB,QAAS,GAET,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAAC0F,QAAQ,gBAAgB3F,WAAW,UACpD,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,iBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CAAYtC,QAASoC,GACjB,kBAAC,KAAD,SAIZ,kBAAC1G,EAAA,EAAD,CAAMI,MAAI,GAAEuG,IAGpB,OACI,kBAACE,GAAA,EAAD,eAAQC,OAAO,SAAY,CAAEL,QAAY,CAAEC,YACtCzG,IAKP9B,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCyB,UAAW,CACP3B,QAASE,EAAMC,QAAQ,EAAG,GAC1BC,MAnCa,S,UCRRqI,GAAoB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAC3C,OACI,kBAAC5G,EAAA,EAAD,CACIO,MAAM,aACNsG,QAAM,EACNzG,MAAOuG,EACPnG,QAAQ,WACRL,WAAS,EACT+B,KAAK,QACL7B,SAAU,SAACtB,GAAD,OAAO6H,EAAa7H,EAAEuB,OAAOF,SAEvC,kBAAC0G,GAAA,EAAD,CAAU1G,MAAM,IAAhB,OACC2G,OAAOC,KAAK1J,GAAegG,KAAI,SAAC2D,EAAGzD,GAAJ,OAC5B,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,UAAKF,EAAL,YAAcyD,GAAK7G,MAAO6G,GAClC3J,EAAc2J,SCZtBC,GAAc,SAAC,GAGd,IAFVC,EAES,EAFTA,MACAC,EACS,EADTA,SACS,EAC2B7I,mBAAgB,IAD3C,mBACF8I,EADE,KACUC,EADV,KAGHC,EAAOC,qBAAWnG,GAElBoG,EAAKvI,IAASwI,YAiBpB,OAfAC,qBAAU,YACN,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,QACNH,EAAGI,WAAW,iBACTC,MACAC,MAAK,SAACC,GACH,IAAMC,EAAa,GACnBD,EAAcE,SAAQ,SAACC,GACnBF,EAAI7D,KAAJ,aAAWF,GAAIiE,EAAIjE,IAAQiE,EAAIC,YAEnCd,EAAcW,MAEjBI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAErC,CAACf,EAAME,IAGN,kBAAC9H,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIO,MAAM,eACNsG,QAAM,EACNrG,QAAQ,WACRL,WAAS,EACTC,MAAO+G,EACPjF,KAAK,QACL7B,SAAU,SAACtB,GAAD,OAAOqI,EAASrI,EAAEuB,OAAOF,SAEnC,kBAAC0G,GAAA,EAAD,CAAU1G,MAAM,IAAhB,OACCiH,EAAW/D,KAAI,SAACmF,EAAQjF,GAAT,OACZ,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,iBAAYF,GAASpD,MAAOqI,EAAOvE,IAC3CuE,EAAOC,YCvCnBC,GAAiB,SAAC,GAA6C,IAA3ClH,EAA0C,EAA1CA,OAAQmH,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAChD,OACI,kBAAC7I,EAAA,EAAD,CACIO,MAAOsI,EAAY,cAAWjD,EAC9BiB,QAAM,EACNzG,MAAOqB,EACPjB,QAAQ,WACRL,WAAS,EACT+B,KAAK,QACL7B,SAAU,SAACtB,GAAD,OAAO6J,EAAU7J,EAAEuB,OAAOF,SAEpC,kBAAC0G,GAAA,EAAD,CAAU1G,MAAM,IAAhB,OACC2G,OAAOC,KAAK3J,GAAiBiG,KAAI,SAAC2D,EAAGzD,GAAJ,OAC9B,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,UAAKF,EAAL,YAAcyD,GAAK7G,MAAO6G,GAClC5J,EAAgB4J,SCdxB6B,GAA0B,SAAC,GAG1B,IAFVC,EAES,EAFTA,gBACAC,EACS,EADTA,mBACS,EAC6BzK,mBAAqB,IADlD,mBACF0K,EADE,KACWC,EADX,KAGH3B,EAAOC,qBAAWnG,GAElBoG,EAAKvI,IAASwI,YAiBpB,OAfAC,qBAAU,YACN,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,QACNH,EAAGI,WAAW,aACTC,MACAC,MAAK,SAACC,GACH,IAAMC,EAAkB,GACxBD,EAAcE,SAAQ,SAACC,GACnBF,EAAI7D,KAAJ,eAAe+D,EAAIC,YAEvBc,EAAejB,MAElBI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAErC,CAACf,EAAME,IAGN,kBAACzH,EAAA,EAAD,CACIO,MAAM,oBACNsG,QAAM,EACNrG,QAAQ,WACR0B,KAAK,QACL/B,WAAS,EACTC,MAAO2I,EACP1I,SAAU,SAACtB,GAAD,OAAOiK,EAAmBjK,EAAEuB,OAAOF,SAE7C,kBAAC0G,GAAA,EAAD,CAAU1G,MAAM,IAAhB,OACC6I,EAAY3F,KAAI,SAACmF,EAAQjF,GAAT,OACb,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,iBAAYF,GAASpD,MAAOqI,EAAOjK,OAC3CiK,EAAOjK,YChCf2K,GAAe,SAAC,GAAuC,IAAD,IAApC/C,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAAS+C,EAAqB,EAArBA,QAClC3H,EAA+C2H,EAA/C3H,OAAQ4H,EAAuCD,EAAvCC,cAAe1C,EAAwByC,EAAxBzC,UAAW2C,EAAaF,EAAbE,SADqB,EAGvB/K,mBACpCkD,EAAOrB,OAJoD,mBAGxDmJ,EAHwD,KAG1CC,EAH0C,OAM7BjL,mBAAQ,iBAAC8K,QAAD,IAACA,OAAD,EAACA,EAAejJ,aAAhB,QAAyB,IANJ,mBAMxDqJ,EANwD,KAM7CC,EAN6C,OAOnBnL,mBAAQ,iBAAC+K,QAAD,IAACA,OAAD,EAACA,EAAUlJ,aAAX,QAAoB,IAPT,mBAOxDuJ,EAPwD,KAOxCC,EAPwC,OAQjBrL,mBAE5CoI,EAAUvG,OAVmD,mBAQxDyJ,EARwD,KAQvCC,EARuC,KA2BzDxD,EACF,kBAAC3G,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGyB,UAAU,UACjC4B,GACG,kBAAC9B,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,iBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,CACI0B,OAAQ8H,EACRX,UAAWY,EACXX,WAAS,MAKxBQ,GACG,kBAAC1J,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,iBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,CACIoH,MAAOsC,EACPrC,SAAUsC,MAKzBJ,GACG,kBAAC3J,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,sBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,CACIgJ,gBAAiBY,EACjBX,mBAAoBY,MAKnCjD,GACG,kBAAChH,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,eAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,CACI4G,UAAWkD,EACXjD,aAAckD,MAK9B,kBAACnK,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIR,WAAS,EACT+B,KAAK,QACL1B,QAAQ,YACRK,MAAM,UACNoD,QApEI,WAChBxC,EAAOsI,OAAOR,GACd5C,EAAUoD,OAAOF,GACbR,GAAeA,EAAcU,OAAON,GACpCH,GAAUA,EAASS,OAAOJ,KA2DtB,kBAUJ,kBAAChK,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIR,WAAS,EACT+B,KAAK,QACL1B,QAAQ,WACRyD,QAtFK,WACjB+F,kBAAOZ,GAAS,SAAChJ,GAAD,OAAWA,GAASA,EAAM2J,OAAO,OACjDL,EAAa,IACbF,EAAgB,IAChBM,EAAmB,IACnBF,EAAkB,MA6EV,mBAYZ,OACI,kBAAC,GAAD,cACQ,CAAExD,QACF,CAAEC,WAFV,CAGI4D,OAAO,UACH,CAAE3D,c,qBCxGZ4D,GAGF,IAAIC,IAAI,CACR,CAAC,gBAAiB,SAAC/J,GAAD,MAAmB,CAAC,SAAD,OAAUA,MAC/C,CAAC,YAAa,SAACA,GAAD,MAAmB,CAAC,aAAD,OAAcA,EAAd,qBACjC,CAAC,SAAU,SAACA,GAAD,MAAmB,CAAC,UAAD,OAAWA,MACzC,CACI,WACA,SAACA,GAAD,MAAmB,CAAC,iCAAD,OACkBA,GADlB,wCAEkBA,GAFlB,8CAGwBA,GAHxB,4CAIsBA,QAK3CgK,GAAsB,SACxBhB,EACAiB,GAEA,OAAOC,qBAAU,eACRlB,IACL,SAACmB,EAAKnK,EAAOsD,GACT,cAAItD,QAAJ,IAAIA,OAAJ,EAAIA,EAAOA,OACAmK,EAAInG,KACP8F,GAAUpC,IAAIpE,EAAdwG,CAA2C9J,EAAMA,QAGlDmK,IAEXF,GAAgB,KAIXG,GAAc,WAAO,IAAD,EACDjM,mBAAkB,IADjB,mBACtB2E,EADsB,KACduH,EADc,OAESlM,mBAAS,IAFlB,mBAEtBmM,EAFsB,KAETC,EAFS,OAGWpM,mBACpC,IAJyB,mBAGtBgL,EAHsB,KAGRC,EAHQ,OAMKjL,mBAAS,IANd,mBAMtBkL,EANsB,KAMXC,EANW,OAOenL,mBAAS,IAPxB,mBAOtBoL,EAPsB,KAONC,EAPM,OAQiBrL,mBAE5C,IAV2B,mBAQtBsL,EARsB,KAQLC,EARK,KAYvBvC,EAAOC,qBAAWnG,GAElB0C,EAAUC,cAda,EAkBzB4G,cAFAC,EAhByB,EAgBzBA,SAhByB,IAiBzBC,MAASC,GAjBgB,aAiBD,CAAEA,YAAY,GAjBb,GAiBhBA,WAuBP3B,EAAU4B,mBAAQ,WACpB,IAAIC,EAAgC,CAChCxJ,OAAQ,CACJrB,MAAOmJ,EACPQ,OAAQP,GAEZ7C,UAAW,CACPvG,MAAOyJ,EACPE,OAAQD,IAchB,OAVA,OAAIvC,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,SACNqD,EAAe5B,cAAgB,CAC3BjJ,MAAOqJ,EACPM,OAAQL,GAEZuB,EAAe3B,SAAW,CACtBlJ,MAAOuJ,EACPI,OAAQH,IAGTqB,IACR,CAAC1D,EAAMgC,EAAcM,EAAiBJ,EAAWE,IAE9CuB,EAAYC,sBAAW,sBAAC,gCAAAnM,EAAA,6DACpBoM,EAAeC,IACjB,aACA,oCAHsB,SAKND,EAAaE,UAAU,UALjB,OAKpB9H,EALoB,OAOtB+H,EAA6B,GAE7BhE,KAAQ,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMK,SACf2D,EAAY,CAAC,CAAC,SAAD,OAAUhE,EAAKJ,UAGhCoE,EAAYnB,GAAoBhB,EAASmC,GACzC/H,EACKgI,OAAOd,EAAa,CACjBe,aAAcF,IAEjBxD,MAAK,YAAe,IAAZ2D,EAAW,EAAXA,KACLjB,EAAUiB,MAEbrD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MArBN,2CAsB3B,CAACf,EAAMmD,EAAatB,IAUvB,OAJAzB,qBAAU,WACNuD,MACD,CAACA,IAGA,oCACI,kBAAC,GAAD,eACI9E,KAAM2E,EACN1E,QA/EU,WAClBtC,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHC,YAAY,OA4ER,CAAE3B,aAEV,kBAACzJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACT6F,QAAQ,gBACRrH,QAAS,EACTuN,KAAK,UAEL,kBAAChM,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAAC,GAAD,CACI7E,MAAOsK,EACP1F,SAAU2F,KAGlB,kBAAChL,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAGqH,QAAQ,YACrC,kBAAC9F,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CAAYrE,KAAK,QAAQ+B,QA/B/B,WACdiH,MA+BwB,kBAAC,KAAD,QAGR,kBAACvL,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CAAYrE,KAAK,QAAQ+B,QA9F5B,WACjBF,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHC,YAAY,OA2FI,kBAACa,EAAA,EAAD,CACI/K,MAAM,QACNL,QAAQ,MACRqL,WACK9E,OAAO+E,OAAO1C,GAAS2C,MACpB,SAAC9L,GAAD,QAAYA,EAAKG,UAIzB,kBAAC,KAAD,WAMpB,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACa,IAAlBmD,EAAO8I,OACJ,kBAAC,GAAD,CACIjL,MAAM,kBACNuE,UAAU,eAGd,kBAAC,EAAe,CAAEpC,eCzM7B+I,GAAgB3K,wBAAuB,CAChDP,MAAO,GACPmL,SAAU,eCIDC,GAAsB7K,wBAA4C,CAC3E8K,aAAc,KACdC,iBAAkB,eCPTC,GAAsB,WAC/B,IAAMvI,EAAUC,cAEVuD,EAAOC,qBAAWnG,GAChB6K,EAAa1E,qBAAWyE,IAAxBC,SACDG,EAAoB7E,qBAAW2E,IAA/BE,iBAiBP,OAfA1E,qBAAU,WACNuE,EAAS,eACV,CAACA,IAGJvE,qBAAU,YACF,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMK,QACPyE,EAAiB,CACb9L,MAAO,YACPgM,OAAQ,kBAAMxI,EAAQK,KAAK,qBAIpC,CAACmD,EAAM8E,EAAkBtI,IAErB,kBAAC,GAAD,O,+BCVEyI,GAA0B,WACnC,IAAM3O,EAAUC,KADyB,EAGDS,mBAAiB,IAHhB,mBAGlCK,EAHkC,KAGpBC,EAHoB,OAKN4N,eAA3BC,EALiC,EAKjCA,SAAUC,EALuB,EAKvBA,aAEZ5I,EAAUC,cAEVlF,EAAQ,uCAAG,WACbsJ,EACArJ,GAFa,iBAAAC,EAAA,yDAIbD,GAAKA,EAAEE,iBACPJ,EAAgB,IACZ+N,EAAK,IAAIC,KAAYzE,EAAK0E,YAAa,MAN9B,SAQJF,EAAGG,UARC,sBASC,IAAIC,MAAM,mCATX,cAUHC,EAAa/N,IAASgO,YAAYC,cAAc,oBAV7C,SAWHF,EAAW,CACbzO,MAAO4J,EAAK5J,MACZE,SAAU0J,EAAK1J,SACfgK,KAAMN,EAAKM,KACXvB,MAAOiB,EAAKjB,MACZ2F,YAAaF,EAAGQ,cAhBX,OAkBTrJ,EAAQK,KAAK,KAlBJ,kDAoBTvF,EAAgB,KAAIQ,SApBX,0DAAH,wDAwBd,OACI,kBAAC,EAAD,KACI,0BAAMP,SAAU6N,EAAa7N,GAAWd,UAAWH,EAAQyB,MACvD,yBACIC,IAAI,GACJvB,UAAWH,EAAQ2B,KACnBC,IAAG,UAAKC,GAAL,eAEP,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,WAAW,UACX1B,QAAS,GAET,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAAC/B,UAAWH,EAAQkD,OAC1B,kBAACD,EAAA,EAAD,CAAYN,QAAQ,MAApB,mBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,QAAStB,EACTuB,WAAS,EACTI,MAAM,QACNC,QAAQ,WACRkI,KAAK,QACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,QAAStB,EACTuB,WAAS,EACTI,MAAM,OACNC,QAAQ,WACRkI,KAAK,OACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,QAAStB,EACTuB,WAAS,EACTI,MAAM,eACNC,QAAQ,WACRkI,KAAK,cACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,KACLC,QAAStB,EACTuB,WAAS,EACTI,MAAM,kBACNE,WAAW,oCACXD,QAAQ,WACRkI,KAAK,QACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACTD,QAAStB,EACTqB,KAAK,WACLM,MAAM,WACNC,QAAQ,WACRkI,KAAK,WACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACTD,QAAStB,EACTqB,KAAK,WACLM,MAAM,mBACNC,QAAQ,WACRkI,KAAK,oBACL2E,SAAUX,KAGlB,kBAAC/M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIV,KAAK,SACLE,WAAS,EACTK,QAAQ,YACRK,MAAM,WAJV,WASJ,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,SAAS1B,QAAS,GAC9C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,kCAEJ,kBAACnB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,IAAD,CAAMW,GAAG,KAAT,WAGP9B,GACG,kBAACe,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYD,MAAM,SACbjC,QAU3Bd,GAAYI,aAAW,SAAAC,GAAK,MAAK,CACnC4C,MAAO,CACHC,UAAW,UAEfxB,KAAM,CACFyB,OAAQ,GACRC,aAAc/C,EAAMC,QAAQ,IAEhCkB,KAAM,CACF6B,QAAS,OACTC,cAAe,SACftB,WAAY,c,4DCzKPwN,GAAgB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAEvC,OACI,kBAACC,GAAA,EAAD,CAASF,WAAYA,GAChBC,EAAMlK,KAAI,SAAAoK,GAAI,OACX,kBAACC,GAAA,EAAD,CAAMjK,IAAKgK,EAAKnN,OACZ,kBAACqN,GAAA,EAAD,KAAYF,EAAKnN,aCAxBsN,GAAmB,SAAC,GAAoE,IAAD,IAAlEN,EAAkE,EAAlEA,WAAYO,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,eAE/DjK,EAAUC,cACVnG,EAAUC,KAEVmQ,EAAaC,SAASX,GAAc,EAEpClH,EAAU,kBAAMtC,EAAQK,KAAK2J,IAEnC,OACI,kBAACI,GAAA,EAAD,CAAQC,YAAU,EAAChI,MAAM,EAAMC,QAASA,GACpC,kBAACgI,GAAA,EAAD,CAAQrQ,UAAWH,EAAQyQ,QACvB,kBAACC,GAAA,EAAD,KACI,kBAAC5O,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAG0B,WAAW,UACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CAAYiI,KAAK,QAAQ3N,MAAM,UAAUoD,QAASoC,EAASoI,aAAW,SAClE,kBAAC,KAAD,QAGR,kBAAC9O,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MACfsN,OAMrB,kBAACnO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACtB,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAAC0F,QAAQ,UACzB,kBAAC,GAAD,CAAe8H,WAAYU,EAAYT,MAAOQ,KAElD,kBAACrO,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAAC6F,QAAQ,UAA7B,oBACKuI,EAAeC,UADpB,aACK,EAA4BS,iBADjC,QAC8C,YAOxD5Q,GAAYI,aAAW,SAAAC,GAAK,MAAK,CACnCmQ,OAAQ,CACJK,SAAU,YAEdC,MAAO,CACH3Q,QAASE,EAAMC,QAAQ,EAAG,EAAG,EAAG,IAEpCyQ,QAAS,CACL3N,aAAc/C,EAAMC,QAAQ,QCjDvB0Q,GAAgB,SAAC,GAQhB,IAPVxI,EAOS,EAPTA,QACAyI,EAMS,EANTA,OACAC,EAKS,EALTA,QACAC,EAIS,EAJTA,OACAC,EAGS,EAHTA,SAGS,IAFTtO,gBAES,SADTuO,EACS,EADTA,YAEMtR,EAAUC,KACViG,EAAUC,cAIhB,OACI,kBAACrE,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTC,UAAU,SACVzB,QAAS,EACTJ,UAAWH,EAAQ+B,WAElB0G,GACC6I,GACE,kBAACxP,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTxB,QAAS,EACTqH,QAAQ,WACRzH,UAAWH,EAAQgR,SAEnB,kBAAClP,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIsD,QAASiL,GArBlB,kBAAMnL,EAAQqL,UAsBL5O,QAAQ,YACRK,MAAM,WAELmO,EAAU,SAAW,SAG9B,kBAACrP,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIsD,QAASgL,EACTrO,SAAUA,EACVJ,QAAQ,YACRK,MAAM,WAELkO,EAAS,SAAW,YAS3CjR,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCyB,UAAW,CACPyP,OAAQlR,EAAMC,QAAQ,EAAG,IAE7ByQ,QAAS,CACL3N,aAAc/C,EAAMC,QAAQ,Q,oGCrDvBkR,GAAkB,SAAC,GAIH,IAHzBrF,EAGwB,EAHxBA,OACA3D,EAEwB,EAFxBA,QACAiJ,EACwB,EADxBA,gBAEM1R,EAAUC,KAChB,OACI,kBAAC0R,GAAA,EAAD,cAAe,CAAED,mBAAjB,CAAoCvR,UAAWH,EAAQ4R,YACnD,kBAACC,GAAA,EAAD,CAAkBC,WAAY,kBAAC,KAAD,OAC1B,kBAAC7O,EAAA,EAAD,CAAYN,QAAQ,MAAMyJ,IAE9B,kBAAC2F,GAAA,EAAD,KACI,kBAACjQ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACvCkI,EAAQhD,KAAI,SAACvD,EAAMyD,GAAP,OACT,kBAAC7D,EAAA,EAAD,CAAM+D,IAAG,oBAAeF,GAASzD,MAAI,EAACH,WAAS,GAC3C,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,KAAaf,EAAK8P,YAEtB,kBAAClQ,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,SACfT,EAAKK,gBAWpCtC,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCsR,UAAW,CACPpR,MAAO,YClCFyR,GAAgB,SAACtL,GAAsB,IACxCC,EAAmDD,EAAnDC,SAAUsL,EAAyCvL,EAAzCuL,SAAUC,EAA+BxL,EAA/BwL,KAAMC,EAAyBzL,EAAzByL,QAASC,EAAgB1L,EAAhB0L,KAAMpF,EAAUtG,EAAVsG,MACjD,MAAM,GAAN,OAAUrG,GAAV,OAAqBsL,EAAQ,WAAOA,GAAa,IAAjD,OACIC,EAAI,WAAOA,GAAS,GADxB,aAEKlF,EAFL,YAEcoF,EAFd,YAEsBD,EAFtB,MCEEE,GAAgB,IAAIhG,IAAuC,CAC7D,CAAC,aAAc,eACf,CAAC,iBAAkB,mBACnB,CAAC,aAAc,eACf,CAAC,mBAAoB,uBAGnBiG,GAAgB,IAAIjG,IAA6B,CACnD,CAAC,QAAS,SACV,CAAC,mBAAoB,qBACrB,CAAC,cAAe,gBAChB,CAAC,aAAc,eACf,CAAC,SAAU,UACX,CAAC,QAAS,SACV,CAAC,eAAgB,iBACjB,CAAC,oBAAqB,uBACtB,CAAC,sBAAuB,0BAGtBkG,GAAwB,IAAIlG,IAAqC,CACnE,CAAC,qBAAsB,uBACvB,CAAC,sBAAuB,wBACxB,CAAC,eAAgB,iBACjB,CAAC,2BAA4B,+BAG3BmG,GAAuC,CACzC,QACA,cACA,aACA,QACA,eACA,oBACA,mBACA,uBAGEC,GAAoD,CACtD,qBACA,sBACA,eACA,4BAGSC,GAAe,SAAC,GAA4B,IAA1B5M,EAAyB,EAAzBA,MAAO3D,EAAkB,EAAlBA,KAC5BwQ,EAAWjJ,qBAAWnG,GACtBoG,EAAKvI,KAASwI,YAFgC,EAI9BnJ,mBAAqB,MAJS,mBAI7CmS,EAJ6C,KAIxCC,EAJwC,OAKdpS,mBAAwB,MALV,mBAK7CqS,EAL6C,KAKhCC,EALgC,OAMtBtS,oBAAS,GANa,mBAM7CuS,EAN6C,KAMpCC,EANoC,KAQpDpJ,qBAAU,WACF/D,EAAMuD,MACNM,EAAGI,WAAW,iBACTM,IAAIvE,EAAMuD,OACVW,MACAC,MAAK,SAACI,GACEA,EAAI6I,QAAQL,EAAO,MACxBA,EAAOxI,EAAIC,WAEdC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3B2I,SAAQ,kBAAMF,GAAW,OAE9BJ,EAAO,MACPI,GAAW,MAEhB,CAACnN,EAAO6D,IAEXE,qBAAU,WAWE,IAAD,EAVM,SAAT1H,GAAmB2D,EAAMgN,YACzBnJ,EAAGI,WAAW,SACTM,IAAIvE,EAAMgN,aACV9I,MACAC,MAAK,SAACI,GAAS,IAAD,IACNA,EAAI6I,QAAQH,EAAe,MAChCA,EAAc,oBAAC1I,EAAIC,cAAL,aAAC,EAAY5J,aAAb,QAAuB,OAExC6J,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,OAAQF,MACnC2I,SAAQ,kBAAMF,GAAW,MAE9BF,EAAc,iBAACJ,QAAD,IAACA,OAAD,EAACA,EAAUjS,aAAX,QAAoB,MAEvC,CAACoF,EAAO3D,EAAMwH,EAAIgJ,IAmCrB,GAAIK,EAAS,OAAO,qCAEpB,IAAMI,EAAqC,CACvC,CACIjH,OAAQ,mBACR3D,QAAS,CACL,CACIuJ,UAAWC,GAAclM,EAAMY,WAGvC+K,iBAAiB,GAErB,CACItF,OAAQ,eACR3D,QAAS,CACL,CACIuJ,UAAW,aACXzP,MAAK,OAAEwQ,QAAF,IAAEA,IAAe,iBAE1B,CACIf,UAAW,eACXzP,MAAOsQ,EAAMA,EAAIhI,KAAO,sBAIpC,CACIuB,OAAQ,gBACR3D,QA5DiD,WAErD,IADA,IAAM6K,EAAW,GACjB,MAAyBpK,OAAOqK,QAAQxN,EAAM+C,WAA9C,eAA0D,CAAC,IAAD,wBAAhDjD,EAAgD,KAA3CtD,EAA2C,KAChDiR,EAAK,CACPxB,UAAS,UAAEM,GAAcrI,IAAIpE,UAApB,QAAyD,GAClEtD,MAAOA,EAAMoB,SAAW,kBAAC,KAAD,MAAgB,kBAAC,KAAD,OAE5C2P,EAAS/M,KAAKiN,GAElB,OAAOF,EAmDMG,IAEb,CACIrH,OAAQ,gBACR3D,QAnDGgK,GAAahN,KAAI,SAACiO,GAAY,IAAD,EAChC,MAAO,CACH1B,UAAS,UAAEO,GAActI,IAAIyJ,UAApB,QAA+B,GACxCnR,MAAOwD,EAAM2N,IAAW,WA2DpC,OAPI3N,EAAM+C,UAAU5E,WAAWP,UAC3B0P,EAAW9M,KAAK,CACZ6F,OAAQ,mBACR3D,QAlDqD,WACzD,IAAMkL,EAAUjB,GAAkBjN,KAAI,SAACiO,GAAD,YAAa,CAC/C1B,UAAS,UAAEQ,GAAsBvI,IAAIyJ,UAA5B,QAAuC,GAChDnR,MAAOwD,EAAM7B,WAAYwP,IAAW,SAElCE,EAAW,CACb5B,UAAW,oBACXzP,MAAOwD,EAAM7B,WAAY0P,SAAW,kBAAC,KAAD,MAAgB,kBAAC,KAAD,OAExD,MAAM,GAAN,oBAAWD,GAAX,CAAoBC,IAyCPC,KAKb,oCAEKR,EAAW5N,KAAI,SAACmM,EAAWjM,GAAZ,OACZ,kBAAC,GAAD,CACIE,IAAG,uBAAkBF,GACrByG,OAAQwF,EAAUxF,OAClB3D,QAASmJ,EAAUnJ,eCvK1BqL,GAAQ,SAAC,GAOR,IANVvJ,EAMS,EANTA,KACAwJ,EAKS,EALTA,aACAjL,EAIS,EAJTA,UACAnC,EAGS,EAHTA,QACAzC,EAES,EAFTA,WACAmC,EACS,EADTA,GACS,EACqB3F,oBAAS,GAD9B,mBACFuS,EADE,KACOC,EADP,OAEiCxS,oBAAS,GAF1C,mBAEFsT,EAFE,KAEaC,EAFb,KAIHrB,EAAWjJ,qBAAWnG,GACtB0C,EAAUC,cAEVyD,EAAKvI,IAASwI,YAEd9D,EAAQoH,mBAAQ,WAClB,IAAI+G,EAAc,2BACX3J,GADW,IAEd5D,UACAmC,YACAiK,aAAqB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUuB,MAAO,GAC9B7K,OAAe,OAARsJ,QAAQ,IAARA,OAAA,EAAAA,EAAUtJ,QAAS,GAC1BvC,WAAYD,KAAKsN,MACjBxQ,OAAQ,eAQZ,OANIkF,EAAU5E,WAAWP,WACrBuQ,EAAEhQ,WAAaA,GAEf4E,EAAU7E,eAAeN,WACzBuQ,EAAEH,aAAeA,GAEdG,IACR,CAAC3J,EAAMrG,EAAY6P,EAAcjL,EAAWnC,EAASiM,IAElD3R,EAAQ,uCAAG,sBAAAE,EAAA,yDACb+R,GAAW,GADE,UAGL7M,EAHK,gCAICuD,EAAGI,WAAW,UAAUM,IAAIjE,GAAIgO,OAAOtO,GAJxC,OAKLG,EAAQK,KAAR,iBAAuBF,IALlB,wCAOCuD,EAAGI,WAAW,UAAUsK,IAAIvO,GAP7B,QAQLkO,GAAiB,GARZ,0DAWTvJ,QAAQC,IAAR,MAXS,yBAaTuI,GAAW,GAbF,6EAAH,qDA4BRzK,EAAUuL,EAVZ,kBAAC,GAAD,CACIvM,UAAU,eACVvE,MAAM,kBACNwE,YAAY,8BACZC,OAAQ,CACJQ,KAAM,kBACN/B,QAAS,kBAAMF,EAAQK,KAAK,SAOpC,kBAAC,GAAD,cAAkB,CAAER,SAApB,CAA6B3D,KAAK,YAGtC,OACI,kBAAC,GAAD,cACQ,CAAEqG,WADV,CAEIyI,QAAM,EACNE,OAAQnQ,EACR8B,SAAUkQ,EACV3B,YAAa0C,M,yECvFnBO,GAA+C,IAAIjI,IAAI,CACzD,CAAC,aAAc,kBAAC,KAAD,OACf,CAAC,iBAAkB,kBAAC,KAAD,OACnB,CAAC,aAAc,kBAAC,KAAD,OACf,CAAC,mBAAoB,kBAAC,KAAD,SAGZkI,GAAY,SAAC,GAA+B,IAA7BpS,EAA4B,EAA5BA,KAAMqS,EAAsB,EAAtBA,SACxBzU,EAAUC,KAEhB,OACI,kBAACC,EAAA,EAAD,CAAOC,UAAS,UAAKH,EAAQ+B,UAAb,YAA0B0S,EAAWzU,EAAQyU,SAAW,KACpE,kBAAC3S,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAAS1B,QAAS,GACzC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,6BAAMqS,GAAQtK,IAAI7H,KAEtB,kBAACN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MACflD,EAAc2C,QAQjCnC,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCyB,UAAW,CACP3B,QAASE,EAAMC,QAAQ,IAE3BmU,KAAM,CACFlD,OAAQlR,EAAMC,QAAQ,EAAG,IAE7BkU,SAAU,CACNE,YAAarU,EAAMmE,QAAQ4D,QAAQ1D,KACnCiQ,OAAQ,aCpCHC,GAAQ,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,cACpC9O,EAAUC,cAQV8O,EAKA,CACF,CACIpK,KAAM,aACNnI,MAAO,cACP+R,SAAUM,EAAW/Q,WAAWL,SAChC+D,YAAa,iDAEjB,CACImD,KAAM,iBACNnI,MAAO,kBACP+R,SAAUM,EAAW9Q,eAAeN,SACpC+D,YAAa,iDAEjB,CACImD,KAAM,aACNnI,MAAO,cACP+R,SAAUM,EAAW7Q,WAAWP,SAChC+D,YAAa,iDAEjB,CACImD,KAAM,mBACNnI,MAAO,oBACP+R,SAAUM,EAAW5Q,iBAAiBR,SACtC+D,YAAa,kDAYfe,EACF,oCACI,kBAAC3G,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,wBACA,kBAACuS,GAAA,EAAD,OAEJ,kBAACpT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,SAApB,8DAIJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzB0U,EAAUxP,KAAI,SAACrD,EAAMuD,GAAP,OACX,kBAAC7D,EAAA,EAAD,CACI+D,IAAG,eAAUF,GACbzD,MAAI,EACJkF,GAAI,EACJ+N,GAAI,EACJ/O,QAAS,kBA1BJ,SAAChE,GACtB4S,GAAc,SAACI,GACX,IAAIC,EAAI,eAAQD,GAEhB,OADAC,EAAKjT,GAAMuB,UAAYyR,EAAEhT,GAAMuB,SACxB0R,KAsBoBC,CAAiBlT,EAAKyI,QAErC,kBAAC,GAAD,CACIzI,KAAMA,EAAKyI,KACX4J,SAAUM,EAAW3S,EAAKyI,MAAMlH,iBAQxD,OACI,kBAAC,GAAD,cACQ,CAAE8E,WADV,CAEI0I,SAAO,GACH,CAAEC,OAhFC,WACXlL,EAAQK,KAAR,UAAgBuO,EAAhB,MAA8B,CAC1BhM,UAAWiM,MA2Ef,CAIIhS,UAAWkS,EAAU/G,MAAK,SAACqH,GAAD,OAAUA,EAAKd,gB,0CC9ExCe,GAAkB,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,gBAAiB1B,EAAiD,EAAjDA,aAAc2B,EAAmC,EAAnCA,uBActDJ,EAAmB,SAACzK,EAA6B3J,EAA8DyE,GACjH,IAAMgQ,EAAW,aAAO5B,GACxB4B,EAAYhQ,GAAOkF,GAAQ3J,EAAEuB,OAAOF,MACpCkT,EAAgBE,IAQpB,OALA7L,qBAAU,WACN,IAAM8L,GAAW7B,EAAa8B,MAAK,SAAA3T,GAAI,OAAI2T,gBAAK3T,GAAM,SAACK,GAAD,OAAYA,QAClEmT,EAAuBE,KACxB,CAAC7B,EAAc2B,IAGd,oCACI,kBAAC5T,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,kCACA,kBAACuS,GAAA,EAAD,OAEHnB,EAAatO,KAAI,SAACC,EAAOC,GAAR,OACd,kBAAC7D,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAAC8D,IAAG,2BAAsBF,GAAS1D,WAAW,SAAS1B,QAAS,GAChF,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,SAAS1B,QAAS,EAAG6G,GAAI,EAAG+N,GAAI,GACjD,IAAVxP,GACG,kBAAC7D,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACsB,EAAA,EAAD,CAAYtC,QAAS,kBA9BvB,SAACT,GACvB8P,GAAgB,SAAAL,GACZ,IAAIhL,EAAG,aAAOgL,GAEd,OADAhL,EAAI0L,OAAOnQ,EAAO,GACXyE,KA0BwC2L,CAAkBpQ,IAAQtB,KAAK,SACtD,kBAAC,KAAD,QAIZ,kBAACvC,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAc,IAAVzB,EAAc,GAAK,IAC9B,kBAACxD,EAAA,EAAD,CAAWG,WAAS,EAChB0T,aAAa,OACbC,UAAU,EACVvT,MAAM,mBACNH,MAAOmD,EAAMmF,KACblI,QAAQ,WACRH,SAAU,SAAAtB,GAAC,OAAIoU,EAAiB,OAAQpU,EAAGyE,QAGvD,kBAAC7D,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,EAAG+N,GAAI,GAClB,kBAAChT,EAAA,EAAD,CAAWG,WAAS,EAChB0T,aAAa,OACbC,UAAU,EACVvT,MAAM,qBACNH,MAAOmD,EAAMwQ,OACbvT,QAAQ,WACRH,SAAU,SAAAtB,GAAC,OAAIoU,EAAiB,SAAUpU,EAAGyE,WAI7D,kBAAC7D,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACtE,EAAA,EAAD,CAAQH,QAAQ,OAAOyD,QA7DZ,WACnBqP,GAAgB,SAAAL,GAAC,6BAAQA,GAAR,gBAAee,UA4DyBC,UAAW,kBAAC,KAAD,OAA5D,sB,wCC9DT,SAASC,GAAT,GAQO,IAPVC,EAOS,EAPTA,cACAzL,EAMS,EANTA,KACA0L,EAKS,EALTA,SACA7T,EAIS,EAJTA,MACAH,EAGS,EAHTA,MACA2J,EAES,EAFTA,OAcA,OAZS,EADTsK,UAcI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIjU,MAAOA,EACPkU,QACI,kBAACC,GAAA,EAAD,CACIC,QAASvU,EACTC,SAAU,kBACN0J,GAAO,SAACkJ,GACJ,IAAI2B,EAAC,eAAQ3B,GAIb,OAHA2B,EAAElM,IAAUuK,EACRvK,GAEGkM,YASnC,kBAAC5U,EAAA,EAAD,CACIG,WAAS,EACT0T,aAAa,OACbC,UAAWK,EACX9T,SAtCa,SACjBtB,GAEA,IAAM8V,EAAMT,EAAWlG,SAASnP,EAAEuB,OAAOF,OAASrB,EAAEuB,OAAOF,MAC3D2J,GAAO,SAAC+K,GACJ,IAAIF,EAAC,eAAQE,GAEb,OADAF,EAAElM,GAASmM,EACJD,MAgCPxU,MAAOA,EACPG,MAAOA,EACPC,QAAQ,aChDb,IAAMuU,GAAiB,SAAC,GAIjB,IAHVhT,EAGS,EAHTA,WACAiT,EAES,EAFTA,cACAC,EACS,EADTA,qBAEMC,EAAyB,CAC3B,CACI3U,MAAO7C,EAAqB,oBAC5BgG,IAAK,sBACLuB,GAAI,GACJ+N,GAAI,GAER,CACIzS,MAAO7C,EAAqB,mBAC5BgG,IAAK,qBACLuB,GAAI,GACJ+N,GAAI,GAER,CACIzS,MAAO7C,EAAqB,yBAC5BgG,IAAK,2BACLuB,GAAI,GACJ+N,GAAI,GAER,CACIzS,MAAO7C,EAAqB,aAC5BgG,IAAK,eACLuB,GAAI,GACJ+N,GAAI,GAER,CACIzS,MAAO7C,EAAqB,SAC5BgG,IAAK,WACLuB,GAAI,GACJ+N,GAAI,EACJqB,WAAW,IAWnB,OAPA1M,qBAAU,WACN,IAAM8L,GAAWyB,EAAUxB,MACvB,SAAC3T,GAAD,MAAuB,aAAbA,EAAK2D,MAAuB3D,EAAKoU,gBAAkBpS,EAAWhC,EAAK2D,QAEjFuR,EAAqBxB,KACtB,CAACyB,EAAWnT,EAAYkT,IAGvB,oCACI,kBAACtV,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,eACA,kBAACuS,GAAA,EAAD,OAEJ,kBAACpT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzB8W,EAAU5R,KAAI,SAACvD,EAAMyD,GAAP,aACX,kBAAC7D,EAAA,EAAD,CAAM+D,IAAG,eAAUF,GAASzD,MAAI,EAACkF,GAAIlF,EAAKkF,GAAI+N,GAAIjT,EAAKiT,IACnD,kBAACkB,GAAD,CACIxL,KAAM3I,EAAK2D,IACXyQ,cAAepU,EAAKoU,cACpB/T,MAAK,UAAE2B,EAAWhC,EAAK2D,YAAlB,QAA0B,GAC/BqG,OAAQiL,EACRzU,MAAOR,EAAKQ,MACZ8T,UAAWtU,EAAKsU,mBC9D/Bc,GAAc,SAAC,GAAuD,IAArD3Q,EAAoD,EAApDA,QAAS4Q,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,kBACzCH,EAAyB,CAC3B,CACI3U,MAAO/C,EAAW,SAClBkG,IAAK,WACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO/C,EAAW,SAClBkG,IAAK,WACLyQ,eAAe,EACfnB,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO/C,EAAW,KAClBkG,IAAK,OACLyQ,eAAe,EACfnB,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO/C,EAAW,KAClBkG,IAAK,OACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO/C,EAAW,MAClBkG,IAAK,QACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO/C,EAAW,QAClBkG,IAAK,UACLsP,GAAI,EACJ/N,GAAI,KASZ,OALA0C,qBAAU,WACN,IAAM8L,EAAUyB,EAAUxB,MAAK,SAAA3T,GAAI,OAAKA,EAAKoU,gBAAkB3P,EAAQzE,EAAK2D,QAC5E2R,GAAmB5B,KACpB,CAACyB,EAAW1Q,EAAS6Q,IAGpB,kBAAC1V,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAG6G,GAAI,GAAI+N,GAAI,GAAInT,UAAU,UACvD,kBAACF,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,oBACA,kBAACuS,GAAA,EAAD,OAEJ,kBAACpT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzB8W,EAAU5R,KAAI,SAACvD,EAAMyD,GAAP,aACX,kBAAC7D,EAAA,EAAD,CAAM+D,IAAG,eAAUF,GAASzD,MAAI,EAACkF,GAAIlF,EAAKkF,GAAI+N,GAAIjT,EAAKiT,IACnD,kBAACkB,GAAD,CACIxL,KAAM3I,EAAK2D,IACXyQ,cAAepU,EAAKoU,cACpB/T,MAAK,UAAEoE,EAAQzE,EAAK2D,YAAf,QAAuB,GAC5BqG,OAAQqL,EACR7U,MAAOR,EAAKQ,e,4BCxD3B+U,GAAW,SAAC,GAIX,IAHVC,EAGS,EAHTA,UACAC,EAES,EAFTA,aACAC,EACS,EADTA,eAEMP,EAAyB,CAC3B,CACI3U,MAAO9C,EAAa,YACpBiG,IAAK,cACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,MACpBiG,IAAK,QACL0Q,UAAU,EACVpB,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,iBACpBiG,IAAK,mBACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,OACpBiG,IAAK,SACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,MACpBiG,IAAK,QACLsP,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,aACpBiG,IAAK,eACLyQ,eAAe,EACfnB,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,kBACpBiG,IAAK,oBACLyQ,eAAe,EACfC,UAAU,EACVpB,GAAI,EACJ/N,GAAI,IAER,CACI1E,MAAO9C,EAAa,oBACpBiG,IAAK,sBACLyQ,eAAe,EACfnB,GAAI,GACJ/N,GAAI,KASZ,OALA0C,qBAAU,WACN,IAAM8L,EAAUyB,EAAUxB,MAAK,SAAA3T,GAAI,OAAKA,EAAKoU,gBAAkBoB,EAAUxV,EAAK2D,QAC9E+R,GAAgBhC,KACjB,CAACyB,EAAWK,EAAWE,IAGtB,kBAAC9V,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAG6G,GAAI,GAAIpF,UAAU,UAC/C,kBAACF,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,qBACA,kBAACuS,GAAA,EAAD,OAEJ,kBAACpT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzB8W,EAAU5R,KAAI,SAACvD,EAAMyD,GAAP,aACX,kBAAC7D,EAAA,EAAD,CAAM+D,IAAG,eAAUF,GAASzD,MAAI,EAACkF,GAAIlF,EAAKkF,GAAI+N,GAAIjT,EAAKiT,IACnD,kBAACkB,GAAD,CACIxL,KAAM3I,EAAK2D,IACXyQ,cAAepU,EAAKoU,cACpB/T,MAAK,UAAEmV,EAAUxV,EAAK2D,YAAjB,QAAyB,GAC9BqG,OAAQyL,EACRjV,MAAOR,EAAKQ,YAIxB,kBAACZ,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GAAI+N,GAAI,GACnB,kBAAC,KAAD,CAAyB0C,MAAOC,MAC5B,kBAAC,KAAD,CACIxV,WAAS,EACTK,QAAQ,SACRoV,OAAO,aACPvG,OAAO,SACPnL,GAAG,qBACH2R,aAAa,WACbtV,MAAO,cACPH,MAAOmV,EAAUO,WACjBzV,SAAU,SAACtB,GACP,IAAMgX,EAAO,OAAGhX,QAAH,IAAGA,OAAH,EAAGA,EAAGiX,qBACnBzN,QAAQC,IAAIuN,GACZP,GAAa,SAACvC,GACV,IAAI2B,EAAC,eAAQ3B,GAEb,OADA2B,EAAEkB,WAAF,OAAeC,QAAf,IAAeA,IAAW,GACnBnB,MAGfqB,oBAAqB,CACjB,aAAc,mBAK9B,kBAACtW,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GAAI+N,GAAI,GACnB,kBAAC,KAAD,CAAyB0C,MAAOC,MAC5B,kBAAC,KAAD,CACIxV,WAAS,EACTK,QAAQ,SACRoV,OAAO,aACPvG,OAAO,SACPnL,GAAG,qBACH2R,aAAa,WACbtV,MAAO,eACPH,MAAOmV,EAAUW,YACjB7V,SAAU,SAACtB,GACP,IAAMgX,EAAO,OAAGhX,QAAH,IAAGA,OAAH,EAAGA,EAAGiX,qBACnBzN,QAAQC,IAAIuN,GACZP,GAAa,SAACvC,GACV,IAAI2B,EAAC,eAAQ3B,GAEb,OADA2B,EAAEsB,YAAF,OAAgBH,QAAhB,IAAgBA,IAAW,GACpBnB,MAGfqB,oBAAqB,CACjB,aAAc,sBC7HjCE,GAAkB,SAAC,GAWlB,IAVVxD,EAUS,EAVTA,SACAyD,EASS,EATTA,QACA9C,EAQS,EARTA,gBACA1B,EAOS,EAPTA,aACAgB,EAMS,EANTA,WACApO,EAKS,EALTA,QACA4Q,EAIS,EAJTA,WACArT,EAGS,EAHTA,WACAiT,EAES,EAFTA,cACA5M,EACS,EADTA,KAEMrE,EAAUC,cADP,EAGmCzF,oBAAS,GAH5C,mBAGF8X,EAHE,KAGchB,EAHd,OAI6B9W,oBAAS,GAJtC,mBAIF+X,EAJE,KAIWb,EAJX,OAK6ClX,oBAAS,GALtD,mBAKFgY,EALE,KAKmBhD,EALnB,OAMyChV,oBAAS,GANlD,mBAMFiY,EANE,KAMiBvB,EANjB,KAiBHxB,EACF4C,GACAC,KACC1D,EAAW9Q,eAAeN,UAAW+U,MACrC3D,EAAW7Q,WAAWP,UAAWgV,GAEhClQ,EACF,oCACI,kBAAC3G,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GAC1B,kBAAC,GAAD,cACQ,CAAEiX,qBACF,CAAE7Q,WACF,CAAE4Q,iBAGd,kBAACzV,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GAC1B,kBAAC,GAAD,cACQ,CAAEqX,kBADV,CAEIF,UAAWnN,EACXoN,aAAcY,MAGtB,kBAACzW,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzBwU,EAAW9Q,eAAeN,UACvB,kBAAC7B,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTxB,QAAS,EACT6G,GAAI,GACJ+N,GAAIJ,EAAW7Q,WAAWP,SAAW,EAAI,GACzC3B,UAAU,UAEV,kBAAC,GAAD,cACQ,CAAE0T,0BACF,CAAED,mBACF,CAAE1B,mBAIjBgB,EAAW7Q,WAAWP,UACnB,kBAAC7B,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTxB,QAAS,EACT6G,GAAI,GACJ+N,GAAIJ,EAAW9Q,eAAeN,SAAW,EAAI,GAC7C3B,UAAU,UAEV,kBAAC,GAAD,cACQ,CAAEoV,wBACF,CAAElT,cACF,CAAEiT,sBAQ9B,OACI,kBAAC,GAAD,cAAmB,CAAE1O,WAArB,CAAgC2I,OArEnB,WACbmH,EAAQhO,GACRrE,EAAQK,KAAR,UAAgBuO,EAAhB,MAA8B,CAC1BhM,UAAWiM,EACXxK,OACAwJ,kBAgE8ChR,UAAW6S,M,UCpG/DgD,GAAwB,CAC1BhS,SAAU,GACVsL,SAAU,GACVC,KAAM,GACNE,KAAM,GACNpF,MAAO,GACPmF,QAAS,IAGPyG,GAAoC,CACtCC,oBAAqB,GACrBC,mBAAoB,GACpBC,yBAA0B,GAC1BC,aAAc,GACdrF,UAAU,GAGRsF,GAAuB,CACzBxS,YAAa,GACbyS,oBAAqB,GACrBtS,MAAO,EACPuS,iBAAkB,GAClBf,aAAa,IAAIvR,MAAOqR,qBACxBF,YAAY,IAAInR,MAAOqR,qBACvBkB,OAAQ,GACRC,MAAO,GACPC,aAAc,GACdC,kBAAmB,GAKVrD,GAAmB,CAAEtL,KAAM,GAAIqL,OAAQ,IAQvCuD,GAAW,WACpB,IAAMvT,EAAUC,cADU,EAetBD,EAXAwT,SACIzM,MACI0M,GANc,aASd,CACAA,aAAc,KACdpP,KAAM,KACNwJ,aAAc,CAAC,eAAKoC,MAZN,GAMdwD,aACMC,EAPQ,EAOdrP,KACcsP,EARA,EAQd9F,aARc,EAiBIrT,oBAAS,GAjBb,mBAiBnBuS,EAjBmB,KAiBVC,EAjBU,OAkBFxS,mBAAoBkZ,GAAWV,IAlB7B,mBAkBnB3O,EAlBmB,KAkBbgO,EAlBa,OAmBI7X,mBAAkBkY,IAnBtB,mBAmBnBjS,EAnBmB,KAmBV4Q,EAnBU,OAoBU7W,mBAChCmY,IArBsB,mBAoBnB3U,EApBmB,KAoBPiT,EApBO,OAuBczW,mBACpCmZ,GAAkB,CAAC,eAAK1D,MAxBF,mBAuBnBpC,EAvBmB,KAuBL0B,EAvBK,OA2BU/U,mBAAQ,eACpCiZ,GAAgB5V,IA5BE,mBA2BnBgR,EA3BmB,KA2BPC,EA3BO,OA+BL8E,cAAbjK,EA/BkB,EA+BlBA,KAAMxJ,EA/BY,EA+BZA,GAEdyD,qBAAU,WACFzD,GACWhF,IAASwI,YACjBG,WAAW,UACTM,IAAIjE,GACJ4D,MACAC,MAAK,SAACI,GACH,GAAKA,EAAI6I,OAEF,CACH,IADG,EXlGK,SAAC5I,GAC7B,IAAMmN,EAAYqC,kBACdxP,GACA,SAACyP,EAAGnU,GAAJ,OAAaoU,oBAAS,CAAC,UAAW,YAAa,gBAAiBpU,MAMpE,MAAO,CACHc,QALY4D,EAAK5D,QAMjBmC,UALcyB,EAAKzB,UAMnB4O,YACA3D,aANiBxJ,EAAKwJ,aAOtB7P,WANeqG,EAAKrG,YWkGAgW,CAPS5P,EAAIC,QAEbmN,EAHD,EAGCA,UACA5O,EAJD,EAICA,UACAiL,EALD,EAKCA,aACApN,EAND,EAMCA,QACAzC,EAPD,EAOCA,WAEJqU,EAAQb,GACR1C,EAAclM,GACd2M,GAAgB,SAACL,GACb,OAAIrB,EACOoG,kBAAOpG,GAEX,CAACoC,OAEZoB,EAAW5Q,GACXwQ,GAAc,SAAC/B,GACX,OAAIlR,EACOiW,kBAAO/E,EAAGlR,GAEd2U,WAvBX3S,EAAQK,KAAK,QA2BpBiE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,cAAeF,MAC1C2I,SAAQ,WACLF,GAAW,QAGxB,CAAChN,EAASG,IAEb,IAAMyO,EAAWzO,EAAE,kBAAcA,GAAO,aAClC6J,EAAa7J,EAAE,iBAAaA,GAAO,IACzC,GAAI4M,EAAS,OAAO,kBAACmH,GAAA,EAAD,MACpB,IAAKvK,EAAM,OAAO,kBAAC,IAAD,CAAUhN,GAAG,MAE/B,IAAMsN,EAAiB,CACnB,CACIzN,MAAO,gBACPmO,UACI,kBAAC,GAAD,cACQ,CAAEiE,YACF,CAAEC,cACF,CAAEC,oBAIlB,CACItS,MAAO,uBACPmO,UACI,kBAAC,GAAD,cACQ,CAAElK,WACF,CAAE4Q,cACF,CAAEgB,WACF,CAAE9C,mBACF,CAAE1B,gBACF,CAAEoD,iBACF,CAAEjT,cACF,CAAE6Q,cACF,CAAExK,QACF,CAAEuK,eAIlB,CACIpS,MAAO,gBACPmO,UACI,kBAAC,GAAD,cACQ,CAAElK,WACF,CAAEzC,cACF,CAAE6P,gBACF,CAAE1N,MACF,CAAEkE,QALV,CAMIzB,UAAWiM,OAM3B,OACI,kBAAC,GAAD,eACI7E,WAAYA,GACR,CAAEC,kBAFV,CAGIT,WAAYG,EACZI,cAAc,uB,UCpLboK,GAA+B,SAAC,GAAkB,IAAhBta,EAAe,EAAfA,SACrCC,EAAUC,KAChB,OACI,yBAAKE,UAAWH,EAAQsa,MACpB,kBAACC,GAAA,EAAD,MACCxa,IAKPE,GAAYI,aAAW,SAAAC,GAAK,MAAI,CAClCga,KAAM,CACFlX,OAAQ,QACRoB,gBAAiBlE,EAAMmE,QAAQ4D,QAAQ1D,KACvCrB,QAAS,OACTkX,eAAgB,SAChBvY,WAAY,c,gFCFdhC,GAAYI,aAAW,SAACC,GAAD,YAAmB,CAC5Cma,WAAY,CACRC,YAAapa,EAAMC,QAAQ,IAE/Boa,KAAM,CACFC,eAAgB,OAChB5X,MAAO,QACP6X,SAAU,GAEdlZ,KAAM,CACFyB,OAAQ,GACR5C,MAAO,KAEXsa,QAAS,CACLtW,gBAAiB,aAErBiM,QAAM,oBACDnQ,EAAMya,YAAYC,GAAG,MAAQ,CAC1BC,WAAYC,GACZ1a,MAAM,eAAD,OAAiB0a,GAAjB,SAHP,qBAKG,GALH,sBAMI,QANJ,uBAOK,GAPL,0BAQQ,YARR,wBASM,MATN,2BAUS,cAVT,GAYNC,QAAS,CACL7X,QAAS,OACTkX,eAAgB,gBAChBY,YAAa,IACbC,aAAc,IACdpZ,WAAY,SACZqZ,WAAY,QAIPC,GAAY,WACrB,IAAMvb,EAAUC,KADW,EAEKub,IAAM9a,SAA6B,MAFxC,mBAEpB+a,EAFoB,KAEVC,EAFU,KAGrBnT,EAAOoT,QAAQF,GAEbvY,EAAUyG,qBAAWyE,IAArBlL,MAEF0Y,EAAcjS,qBAAWnG,GACzB0C,EAAUC,cAUV0V,EAAY,uCAAG,sBAAA1a,EAAA,sEACX2a,UAAgBC,UADL,2CAAH,qDAIlB,OACI,yBAAK5b,UAAWH,EAAQyQ,QACpB,kBAACC,GAAA,EAAD,CAASvQ,UAAWH,EAAQmb,SACxB,kBAAClY,EAAA,EAAD,CAAYN,QAAQ,MAAMO,GAC1B,kBAACwF,EAAA,EAAD,CACIkI,aAAW,0BACXoL,gBAAc,cACdC,gBAAc,OACd7V,QApBG,SAAC8V,GAChBR,EAAYQ,EAAMC,gBAoBNnZ,MAAM,WAEN,kBAAC,KAAD,OAEJ,kBAACoZ,GAAA,EAAD,CACI/V,GAAG,cACHoV,SAAUA,EACVY,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBhU,KAAMA,EACNC,QAlCI,WAChBkT,EAAY,QAmCA,kBAACzS,GAAA,EAAD,CAAU7C,QAAS,kBAAMF,EAAQK,KAAK,cAClC,kBAACmW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,YAASf,QAAT,IAASA,OAAT,EAASA,EAAajb,MAAMic,OAAO,KAEvC,kBAACC,GAAA,EAAD,YAAejB,QAAf,IAAeA,OAAf,EAAeA,EAAajb,QAEhC,kBAACuU,GAAA,EAAD,CAAS/U,UAAWH,EAAQ8a,UAC5B,kBAAC7R,GAAA,EAAD,CAAU7C,QAASyV,GAAnB,cC7GPiB,GAAiBrZ,wBAA8B,CACxDwP,SAAS,EACTC,WAAY,e,sGCSH6J,GAAU,WACnB,IAAM/c,EAAUC,KAEVyJ,EAAOC,qBAAWnG,GAClB0C,EAAUC,cACR6G,EAAaD,cAAbC,SAEFgQ,EAAU,CACZ,CACIta,MAAO,YACPgS,KAAM,kBAAC,KAAD,MACNhG,OAAQ,kBAAMxI,EAAQK,KAAK,MAC3BuU,WAAU,OAACpR,QAAD,IAACA,OAAD,EAACA,EAAMK,OACjB0K,SAAU,CAAC,IAAK,cAAcwF,SAASjN,KAuB/C,OAnBA,OAAItD,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,QACNiT,EAAQzW,KACJ,CACI7D,MAAO,mBACPgS,KAAM,kBAAC,KAAD,MACNhG,OAAQ,kBAAMxI,EAAQK,KAAK,qBAC3BuU,SAAS,EACTrG,SAAuB,qBAAbzH,GAEd,CACItK,MAAO,iBACPgS,KAAM,kBAAC,KAAD,MACNhG,OAAQ,kBAAMxI,EAAQK,KAAK,mBAC3BuU,SAAS,EACTrG,SAAuB,mBAAbzH,IAMlB,yBAAK7M,UAAWH,EAAQid,QACpB,kBAACC,GAAA,EAAD,CAAQC,QAAM,EAACC,eAAe,MAC1B,kBAACzU,GAAA,EAAD,CACIC,OAAO,OACPjG,QAAQ,YACR4F,MAAI,EACJvI,QAAS,CAAE+Q,MAAO/Q,EAAQqd,cAE1B,yBAAKld,UAAWH,EAAQsd,eACpB,yBACI5b,IAAI,GACJvB,UAAWH,EAAQ2B,KACnBC,IAAG,UAAKC,GAAL,4BAGX,kBAAC0b,GAAA,EAAD,KACKP,EAAQvX,KAAI,SAACmF,EAAQjF,GAAT,OACT,kBAAC,IAAM6X,SAAP,CAAgB3X,IAAG,mBAAcF,IAC7B,kBAAC8X,GAAA,EAAD,CACI9V,QAAM,EACNvB,QAASwE,EAAO8D,OAChB+F,SAAU7J,EAAO6J,UAEjB,kBAACiJ,GAAA,EAAD,KAAe9S,EAAO8J,MACtB,kBAACmI,GAAA,EAAD,CAAcxU,QAASuC,EAAOlI,SAEjCkI,EAAOkQ,SAAW,kBAAC5F,GAAA,EAAD,eAU7CjV,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrC+c,YAAa,CACT7c,MAAO0a,GACP1W,gBAAiBlE,EAAMmE,QAAQ4D,QAAQ1D,MAE3CsY,OAAO,gBACF3c,EAAMya,YAAYC,GAAG,MAAQ,CAC1Bxa,MAAO0a,GACPyC,WAAY,IAGpBhc,KAAM,CACFyB,OAAQ,GACR5C,MAAO,KAEX8c,cAAe,CACXld,QAASE,EAAMC,QAAQ,Q,oBCpGlBqd,GAAgB,WAAO,IACxBvX,EAAOyT,cAAPzT,GAEFrG,EAAUC,KAETsO,EAAgB5E,qBAAW2E,IAA3BC,aAEDrI,EAAUC,cAEhB,OACI,kBAACrE,EAAA,EAAD,CAAMC,WAAS,EAAC6F,QAAQ,gBAAgB3F,WAAW,UAC/C,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC2b,GAAA,EAAD,CAAajN,aAAW,cACpB,kBAACkN,GAAA,EAAD,CACI9a,MAAM,UACNoD,QAAS,kBAAMF,EAAQK,KAAK,MAC5BpG,UAAWH,EAAQyG,SAHvB,OAOCJ,GACG,kBAACyX,GAAA,EAAD,CACI9a,MAAM,UACN7C,UAAWH,EAAQ2a,MAEnB,kBAAC,KAAD,CAAkBxa,UAAWH,EAAQ0U,QACxB,OAAZnG,QAAY,IAAZA,OAAA,EAAAA,EAAcwP,iBAAkB1X,KAKhDkI,GACG,kBAACzM,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIH,QAAQ,YACRK,MAAM,UACNqB,KAAK,QACL+B,QAASmI,EAAaG,QAErBH,EAAa7L,UAQhCzC,GAAYI,aAAW,SAAAC,GAAK,MAAK,CACnCmG,QAAS,CACLQ,OAAQ,WAEZ0T,KAAM,CACFrX,QAAS,QAEboR,KAAM,CACFgG,YAAapa,EAAMC,QAAQ,QCpCtB2a,GAAe,IAEf8C,GAA8B,SAAC,GAIrC,IAHHje,EAGE,EAHFA,SACAke,EAEE,EAFFA,aACAC,EACE,EADFA,UACE,EAC4Bxd,oBAAS,GADrC,mBACKuS,EADL,KACcC,EADd,OAEwBxS,mBAAS,IAFjC,mBAEKwC,EAFL,KAEYmL,EAFZ,OAME3N,mBAAuC,MANzC,mBAIE6N,EAJF,KAKEC,EALF,KAQIxO,EAAUC,KAEhB,OACI,kBAAC6c,GAAeqB,SAAhB,CAAyB5b,MAAO,CAAE0Q,UAASC,eACvC,kBAAC9E,GAAa+P,SAAd,CAAuB5b,MAAO,CAAEW,QAAOmL,aACnC,kBAACC,GAAoB6P,SAArB,CACI5b,MAAO,CAAEgM,eAAcC,qBAEvB,yBAAKrO,UAAWH,EAAQsa,MACpB,kBAACC,GAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACCtH,GAAW,kBAACmL,GAAA,EAAD,MACZ,0BACIje,UAAS,UAAKH,EAAQyI,QAAb,YACJyV,OAAqCnW,EAAzB/H,EAAQqe,iBAGzB,kBAAC3N,GAAA,EAAD,OACEuN,GACE,yBAAK9d,UAAWH,EAAQse,cACpB,kBAAC,GAAD,OAGPve,QASvBE,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCmI,QAAS,CACL6S,WAAY,GACZ9a,MAAO,QAEX6d,eAAgB,CACZjD,YAAa,IACbC,aAAc,KAElBf,KAAM,CACFhX,QAAS,QAEbgb,aAAc,CACVjb,aAAc/C,EAAMC,QAAQ,Q,0CC/EvBge,GAAe9a,wBAAqC,CAC7D+a,WAAY,aACZC,eAAgB,eCePC,GAAkB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASrV,EAAmB,EAAnBA,MAAmB,EACpB5I,mBAAmB,IADC,mBACnDke,EADmD,KACtCC,EADsC,OAEhBne,oBAAS,GAFO,mBAEnDoe,EAFmD,KAEpCC,EAFoC,OAG5Bre,oBAAS,GAHmB,mBAGnDuS,EAHmD,KAG1CC,EAH0C,KAKpD8L,EAAQ,cAAU1V,EAAV,kBAAyBqV,EAAzB,KAL4C,EAOnBhV,qBAAW4U,IAA1CC,EAPkD,EAOlDA,WAAYC,EAPsC,EAOtCA,eACd/U,EAAOC,qBAAWnG,GAElBoG,EAAKvI,IAAS4d,UAEdC,EAAa5R,uBAAY,SAAC7C,GAC5BgU,EAAe,SACfD,EAAW/T,GAAOA,EAAIjJ,WACvB,CAACgd,EAAYC,IAEVU,EAAgB,SAAC3d,GACnBid,EAAe,WACfD,EAAWhd,IAkBT4d,EAAY9R,uBAAY,WACtB5D,GACmBE,EAAGyV,MACGC,MAAMN,GAE1BO,UACArV,MAAK,SAACsV,GACHX,EAAeW,EAAIC,MAAMha,KAAI,SAACvD,GAAD,OAAUA,EAAK2I,YAE/CL,OAAM,SAACC,GAAD,OAASyU,EAAWzU,MAC1B2I,SAAQ,kBAAMF,GAAW,QAEnC,CAACtJ,EAAIF,EAAMsV,EAAUE,IA6CxBpV,qBAAU,WACNsV,MACD,CAACA,IAEJ,IAAMpf,EAAUC,KAEhB,OAAIgT,EAAgB,kBAACmH,GAAA,EAAD,MAGhB,kBAACla,EAAA,EAAD,CAAOC,UAAWH,EAAQsC,WACtB,kBAACR,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVzB,QAAS,EACTJ,UAAWH,EAAQ0f,eAEnB,kBAAC5d,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACT6F,QAAQ,gBACR3F,WAAW,SACX6L,KAAK,UAEL,kBAAChM,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,cAEH+G,GAAQA,EAAKK,OACV,kBAACjI,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTxB,QAAS,EACTqH,QAAQ,WACR3F,WAAW,UAEV6c,GACG,kBAAChd,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACkY,GAAA,EAAD,OAGR,kBAACtY,EAAA,EAAD,CAAMI,MAAI,GACN,2BACI/B,UAAWH,EAAQ2f,MACnB9X,MAAO,CAAEvE,QAAS,QAClB+C,GAAG,qBACHuZ,UAAQ,EACRxd,KAAK,OACLI,SAzFf,SAACtB,GACd,IAAM2e,EAAQ3e,EAAEuB,OAAOod,MACvB,GAAIA,EAAO,CACP,IACMC,EADalW,EAAGyV,MACaC,MAAMN,GACnCe,EAAOta,eAAIoa,GAAO,SAACG,GAErB,OADgBF,EAAgBR,MAAMU,EAAKnV,MAC5BoV,IAAID,MAEvBjB,GAAiB,GACjBmB,QAAQC,IAAIJ,GACP7V,MAAK,WACFiV,EAAc,oBACdC,OAEH5U,OAAM,SAACC,GAAD,OAASyU,EAAWzU,MAC1B2I,SAAQ,kBAAM2L,GAAiB,UA2EhB,2BAAOqB,QAAQ,sBACX,kBAACtd,EAAA,EAAD,CACIuB,KAAK,QACLwM,UAAU,OACVlO,QAAQ,WACRI,SAAU+b,GAJd,uBAapB,kBAAChd,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GACrB,IAAvBqe,EAAYzQ,OACT,kBAAC,GAAD,CACI3N,MAAO,IACP0C,MAAM,mBACNuE,UAAU,kBAGdmX,EAAYnZ,KAAI,SAACua,EAAMra,GAAP,OACZ,kBAAC7D,EAAA,EAAD,CACI+D,IAAG,eAAUF,GACbzD,MAAI,EACJH,WAAS,EACT6F,QAAQ,gBACRkG,KAAK,UAEL,kBAAChM,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTxB,QAAS,EACT0B,WAAW,SACX6L,KAAK,UAEL,kBAAChM,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,KAAD,OAEJ,kBAACJ,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,QAAQ0d,QAAM,GAC7BL,KAIb,kBAACle,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CACItC,QAAS,kBAvHzBka,EAuH0CN,OAtH1CpW,EAAGyV,IAAH,UAAUL,GAAV,OAAqBsB,IAEhCC,iBACArW,MAAK,SAACsW,GACH,IAAIC,EAAM,IAAIC,eACdD,EAAIE,aAAe,OACnBF,EAAIG,OAAS,WAAa,IAAD,EACjBC,EAAOJ,EAAIK,SACTN,EAAMO,OAAOC,IAAIC,gBAAgBJ,GACjClG,EAAOuG,SAASC,cAAc,KACpCxG,EAAKyG,KAAOZ,EACZ7F,EAAK0G,aAAa,WAAYf,GAC9BY,SAASI,KAAKC,YAAY5G,GAC1BA,EAAK6G,QACL,UAAA7G,EAAK8G,kBAAL,SAAiBC,YAAY/G,IAEjC8F,EAAIlY,KAAK,MAAOiY,GAChBC,EAAIkB,UAEPnX,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MApBjB,IAAC6V,IAyHgB,kBAAC,KAAD,QAGP5W,GAAQA,EAAKK,OACV,kBAACjI,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CACItC,QAAS,kBAhL7Bka,EAgL8CN,OA/K3CpW,EAAGyV,MACaC,MAAMN,GAEpCM,MAAMgB,GACNsB,SACA1X,MAAK,WACFiV,EAAc,sBAAD,OAAuBmB,IACpClB,OAEH5U,OAAM,SAACC,GACJyU,EAAWzU,MAXJ,IAAC6V,IAkLoB,kBAAC,KAAD,gBAatCrgB,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCqf,MAAO,CACHrc,QAAS,QAEboc,cAAe,CACXtf,QAASE,EAAMC,QAAQ,IAE3B+B,UAAW,CACP9B,MAAO,Y,qBC5NFqhB,GAAM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACZ9hB,EAAUC,KA8BhB,OACI,kBAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,GACpBuhB,EAAKrc,KAAI,SAACsc,EAAKpc,GAAN,OACN,kBAAC7D,EAAA,EAAD,CACI+D,IAAG,cAASF,GACZzD,MAAI,EACJH,WAAS,EACT6F,QAAQ,gBACRkG,KAAK,SACL1G,GAAI,GAEJ,kBAAClH,EAAA,EAAD,CAAOC,UAAWH,EAAQ+Q,OACtB,kBAACjP,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACTC,UAAU,SACVzB,QAAS,EACTJ,UAAWH,EAAQ+B,WAEnB,kBAACD,EAAA,EAAD,CACII,MAAI,EACJH,WAAS,EACT+L,KAAK,SACLlG,QAAQ,iBAER,kBAAC9F,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MACfof,EAAI7e,QAGZ6e,EAAIrT,QACD,kBAAC5M,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACwG,EAAA,EAAD,CACIrE,KAAK,QACL+B,QAAS2b,EAAIrT,QAEb,kBAAC,KAAD,SAKhB,kBAAC5M,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,GACzBwhB,EAAIxX,KAAK9E,KAAI,SAAC8E,EAAM5E,GAAP,OAtE1B,SAACoc,EAAWpc,GAAZ,OACZ,kBAAC7D,EAAA,EAAD,CACI+D,IAAG,UAAKkc,EAAI7e,MAAT,YAAkByC,GACrBzD,MAAI,EACJH,WAAS,EACTE,WAAW,SACX6L,KAAK,SACLvN,QAAS,EACT6G,GAAI,GAEJ,kBAACtF,EAAA,EAAD,CAAMI,MAAI,EAAC/B,UAAWH,EAAQ0U,MACzBqN,EAAIrN,MAET,kBAAC5S,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,UAC3B,kBAACF,EAAA,EAAD,CAAMI,MAAI,GACL8f,yBAAeD,EAAIxf,OAChBwf,EAAIxf,MAEJ,kBAACU,EAAA,EAAD,KAAa8e,EAAIxf,QAGzB,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,SAASof,EAAI7e,UAiDjB+e,CAAQ1X,EAAM5E,eAW5C1F,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrCyB,UAAW,CACP3B,QAASE,EAAMC,QAAQ,EAAG,IAE9BmU,KAAM,CACFpR,QAAS,OACTH,UAAW,UAEf4N,MAAO,CACHvQ,MAAO,Y,0CC1GF0hB,GAA4B,SAAC,GAG5B,IAFVC,EAES,EAFTA,cACAC,EACS,EADTA,iBAGA,OACI,kBAACjgB,EAAA,EAAD,CACI6G,QAAM,EACNrG,QAAQ,WACRL,WAAS,EACT+B,KAAK,QACL9B,MAAO4f,EACP3f,SAAU,SAACtB,GAAD,OACNkhB,EAAiBlhB,EAAEuB,OAAOF,SAG7B2G,OAAOC,KAAKzJ,GAAqB+F,KAAI,SAACmF,EAAQjF,GAAT,OAClC,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,iBAAYF,GAASpD,MAAOqI,GACpClL,EAAoBkL,SCpB5BK,GAA0B,SAAC,GAG1B,IAFVC,EAES,EAFTA,gBACAC,EACS,EADTA,mBACS,EAC6BzK,mBAAqB,IADlD,mBACF0K,EADE,KACWC,EADX,KAGH3B,EAAOC,qBAAWnG,GAElBoG,EAAKvI,IAASwI,YAiBpB,OAfAC,qBAAU,YACN,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,QACNH,EAAGI,WAAW,aACTC,MACAC,MAAK,SAACC,GACH,IAAMC,EAAkB,GACxBD,EAAcE,SAAQ,SAACC,GACnBF,EAAI7D,KAAJ,eAAe+D,EAAIC,YAEvBc,EAAejB,MAElBI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAErC,CAACf,EAAME,IAGN,kBAACzH,EAAA,EAAD,CACI6G,QAAM,EACNrG,QAAQ,WACRL,WAAS,EACTC,MAAO2I,GAAmB,IAC1B7G,KAAK,QACL7B,SAAU,SAACtB,GAAD,OAAOiK,EAAmBjK,EAAEuB,OAAOF,SAE7C,kBAAC0G,GAAA,EAAD,CAAU1G,MAAM,KAAhB,oBACC6I,EAAY3F,KAAI,SAACmF,EAAQjF,GAAT,OACb,kBAACsD,GAAA,EAAD,CAAUpD,IAAG,iBAAYF,GAASpD,MAAOqI,EAAOjK,OAC3CiK,EAAOjK,YCvCf0hB,GAA8B,SAAC,GAG9B,IAFVve,EAES,EAFTA,kBACAwe,EACS,EADTA,qBAGA,OACI,kBAAC,KAAD,CAAyBzK,MAAOC,MAC5B,kBAAC,KAAD,CACIxV,WAAS,EACTK,QAAQ,SACR0B,KAAK,QACL0T,OAAO,aACP1R,GAAG,qBACH2R,aAAa,WACbuK,WAAW,iBACXhgB,MAAOuB,GAAqB,KAC5B0e,aAAW,EACXhgB,SAAU,SAACtB,GACP,IAAMgX,EAAO,OAAGhX,QAAH,IAAGA,OAAH,EAAGA,EAAGiX,qBACnBmK,EAAqBpK,GAAW,KAEpCE,oBAAqB,CACjB,aAAc,mBCZrBqK,GAAoB,SAAC,GAMpB,IALVla,EAKS,EALTA,KACAC,EAIS,EAJTA,QACAzC,EAGS,EAHTA,MACA+C,EAES,EAFTA,UACA4Z,EACS,EADTA,aACS,EACiChiB,mBAExCqF,EAAMnC,QAHC,mBACFue,EADE,KACaC,EADb,OAIyC1hB,mBAC9CoI,EAAY/C,EAAM+C,UAAUA,GAAWlF,OAAS,YAL3C,mBAIF+e,EAJE,KAIiBC,EAJjB,OAOqCliB,mBAC1CoI,EAAY/C,EAAM+C,UAAUA,GAAWjF,SAAW,IAR7C,mBAOFqH,EAPE,KAOeC,EAPf,OAUyCzK,mBAC9CoI,EAAY/C,EAAM+C,UAAUA,GAAWhF,kBAAoB,IAXtD,mBAUFA,EAVE,KAUiBwe,EAVjB,KAcH1Y,EAAKvI,IAASwI,YAdX,EAeqBnJ,oBAAS,GAf9B,mBAeFuS,EAfE,KAeOC,EAfP,OAgB8BvJ,qBAAW4U,IAA1CC,EAhBC,EAgBDA,WAAYC,EAhBX,EAgBWA,eAEdoE,EAAY1V,mBAAQ,WACtB,IAAM2V,EAAO,eAAQ/c,GAUrB,OATI+C,GACAga,EAAQha,UAAUA,GAAWjF,SAAWqH,EACxC4X,EAAQha,UAAUA,GAAWhF,kBAAoBA,EACjDgf,EAAQha,UAAUA,GAAWlF,OAASkf,EAAQha,UAC1CA,GACFlF,OAAS+e,GAEXG,EAAQlf,OAASue,GAAiB,aAE/BW,IACR,CACC5X,EACAiX,EACAre,EACAiC,EACA+C,EACA6Z,IAGEI,EAAO,uCAAG,sBAAA5hB,EAAA,6DACZ+R,GAAW,GADC,kBAGFtJ,EAAGI,WAAW,UAAUM,IAAIvE,EAAMM,IAAIgO,OAAOwO,GAH3C,OAIRH,IACAjE,EAAe,WACfD,EAAW,sBANH,gDAQRC,EAAe,SACfD,EAAW,KAAIhd,SAAJ,MATH,yBAWR0R,GAAW,GAXH,4EAAH,qDAePzK,EACF,kBAAC3G,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,iBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACL4G,EACG,kBAAC,GAAD,CACIqZ,cAAeQ,EACfP,iBAAkBQ,IAGtB,kBAAC,GAAD,CACIhf,OAAQue,EACRpX,UAAWqX,MAK1BtZ,GACG,kBAAChH,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,qBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,cACQ,CAAEgJ,mBACF,CAAEC,0BAKrBrC,GACG,kBAAChH,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC7C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,uBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,cACQ,CAAE4B,qBACF,CAAEwe,4BAKtB,kBAACxgB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIH,QAAQ,YACRL,WAAS,EACTU,MAAM,UACNoD,QAAS2c,EACThgB,SAAUkQ,GALd,mBAaZ,OACI,kBAAC,GAAD,cACQ,CAAEzK,WACF,CAAED,QAFV,CAGI6D,OAAO,gBACH,CAAE3D,c,oFCvILua,GAAa,SAAC,GAAyB,IAAvBrf,EAAsB,EAAtBA,SACnB3D,EAAUC,KAChB,OAAO0D,EACH,kBAAC,KAAD,CAAiBxD,UAAWH,EAAQijB,SAEpC,kBAAC,KAAD,CAAY9iB,UAAWH,EAAQkjB,YAIjCjjB,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrC2iB,OAAQ,CACJjgB,MAAO1C,EAAMmE,QAAQI,QAAQF,KAC7BrB,QAAS,OACTH,UAAW,UAEf+f,SAAU,CACNlgB,MAAO1C,EAAMmE,QAAQpC,MAAMsC,KAC3BrB,QAAS,OACTH,UAAW,cCANggB,GAAY,WAAO,IAAD,EACDziB,mBAAuB,MADtB,mBACpBqF,EADoB,KACbqd,EADa,KAGnBlQ,EAAevJ,qBAAWmT,IAA1B5J,WACA7E,EAAa1E,qBAAWyE,IAAxBC,SACAG,EAAqB7E,qBAAW2E,IAAhCE,iBACF9E,EAAOC,qBAAWnG,GAClB0C,EAAUC,cAPW,EAWvB4G,cAFAC,EATuB,EASvBA,SATuB,IAUvBC,MAASoW,GAVc,aAUc,CAAEA,aAAa,EAAOC,gBAAYvb,GAVhD,GAUdsb,YAAaC,EAVC,EAUDA,WAG1BxZ,qBAAU,WACNuE,EAAS,gBACV,CAACA,IAEJvE,qBAAU,WAqBN,OApBA,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAMK,OACNyE,EAAiB,CACb9L,MAAO,eACPgM,OAAQ,kBACJxI,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,MAGzBtF,eAAc,OAAEhY,QAAF,IAAEA,OAAF,EAAEA,EAAOwd,aAG3B/U,EAAiB,CACb9L,MAAO,eACPgM,OAAQ,kBAAMxI,EAAQK,KAAR,yBAAwBR,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOM,GAA/B,QACd0X,eAAc,OAAEhY,QAAF,IAAEA,OAAF,EAAEA,EAAOwd,aAIxB,WACH/U,EAAiB,SAEtB,CAACA,EAAkB9E,EAAM3D,EAAOG,EAAS8G,IAzCjB,IA2CnB3G,EAAOyT,cAAPzT,GAEFuD,EAAKvI,IAASwI,YAEd6Y,EAAepV,uBAAY,WACzBjH,GACAuD,EAAGI,WAAW,UACTM,IAAIjE,GACJ4D,MACAC,MAAK,SAACI,GACEA,EAAI6I,OAGLiQ,EAAS,2BAAK9Y,EAAIC,QAAV,IAAkBlE,GAAIiE,EAAIjE,MAFlCqE,QAAQC,IAAI,wBAKnBH,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,OAAQF,MACnC2I,SAAQ,WACLF,GAAW,QAGxB,CAACtJ,EAAIvD,EAAI6M,IAOZ,GALApJ,qBAAU,WACNoJ,GAAW,GACXwP,MACD,CAACxP,EAAYwP,KAEX3c,EAAO,OAAO,yCAEnB,IAWMyd,EAAc,SAACphB,GACjB,MAAO,CACH,CACIc,MAAO,SACPX,OAfkBoB,EAeUvB,EAAKuB,SAdzC,kBAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAG0B,WAAW,UACnC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,KAAaU,EAAW,UAAY,gBAExC,kBAAC7B,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAe,CAAEyB,gBAUlB+Q,KAAM,kBAAC,KAAD,OAEV,CACIxR,MAAO,SACPX,MAAOH,EAAKuB,SAAWjE,EAAoB0C,EAAKwB,QAAU,KAC1D8Q,KAAM,kBAAC,KAAD,OAEV,CACIxR,MAAO,WACPX,MAAOH,EAAKuB,SACNvB,EAAKyB,SACDzB,EAAKyB,SACL,mBACJ,KACN6Q,KAAM,kBAAC,KAAD,OAEV,CACIxR,MAAO,qBACPX,MAAOH,EAAKuB,SACNvB,EAAK0B,kBACD1B,EAAK0B,kBACL,MACJ,KACN4Q,KAAM,kBAAC,KAAD,QAvCW,IAAC/Q,GA4CxBme,EAAuB,CACzB,CACI5e,MAAOzD,EAAcuE,WACrBuG,KAAOiZ,EAAYzd,EAAM+C,UAAU9E,YACnC0K,OAAQ3I,EAAM+C,UAAU9E,WAAWL,WAA3B,OAAuC+F,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMK,OAAS,WAC1D7D,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,EACbC,WAAY,sBAGpBvb,GAER,CACI7E,MAAOzD,EAAcwE,eACrBsG,KAAOiZ,EAAYzd,EAAM+C,UAAU7E,gBACnCyK,OAAQ3I,EAAM+C,UAAU7E,eAAeN,WAA/B,OAA2C+F,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAMK,OAAQ,WAC7D7D,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,EACbC,WAAY,0BAGpBvb,GAER,CACI7E,MAAOzD,EAAc0E,iBACrBoG,KAAMiZ,EAAYzd,EAAM+C,UAAU3E,kBAClCuK,OAAQ3I,EAAM+C,UAAU3E,iBAAiBR,WAAjC,OAA6C+F,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAMK,OAAQ,WAC/D7D,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,EACbC,WAAY,4BAGpBvb,GAER,CACI7E,MAAOzD,EAAcyE,WACrBqG,KAAMiZ,EAAYzd,EAAM+C,UAAU5E,YAClCwK,OAAQ3I,EAAM+C,UAAU5E,WAAWP,WAA3B,OAAuC+F,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMK,OAAQ,WACzD7D,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,EACbC,WAAY,sBAGpBvb,IAcZ,OACI,oCACI,kBAAC,GAAD,cACQ,CAAEhC,SADV,CAEIwC,KAAM8a,EACN7a,QAfe,WACvBtC,EAAQK,KAAK,CACTyG,WACAC,MAAO,CACHoW,aAAa,EACbC,gBAAYvb,OAWR,CAAE2a,gBAJV,CAKI5Z,UAAWwa,KAEf,kBAACxhB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,SAAS1B,QAAS,GAC9C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,CAAYN,QAAQ,MAApB,kBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,EAAD,CAAY0B,OAAQmC,EAAMnC,WAGlC,kBAAC9B,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAQ,CAAE4f,UAEf,kBAAChgB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,cAAkB,CAAE6D,SAApB,CAA6B3D,KAAK,WAEtC,kBAACN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,CAAiByc,QAAStY,EAAIiD,MAAOvD,EAAMuD,YC7NlDma,GAA2B,WAAO,IAAD,EAChB/iB,mBAAiB,IADD,mBACnCC,EADmC,KAC5BC,EAD4B,OAGH+I,qBAAW4U,IAA1CC,EAHkC,EAGlCA,WAAYC,EAHsB,EAGtBA,eAEdze,EAAUC,KACVgB,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACbD,EAAEE,iBADW,kBAGHC,IAASC,OAAOoiB,uBAAuB/iB,GAHpC,OAIT8d,EAAe,WACfD,EAAW,0BALF,gDAOTA,EACI,KAAIhd,SACA,wDATC,yDAAH,sDAcd,OACI,kBAAC,EAAD,KACI,0BAAMP,SAAU,SAACC,GAAD,OAAOD,EAASC,IAAIf,UAAWH,EAAQyB,MACnD,yBACIC,IAAI,GACJvB,UAAWH,EAAQ2B,KACnBC,IAAG,UAAKC,GAAL,eAEP,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,WAAW,UACX1B,QAAS,GAKT,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLE,WAAS,EACTC,MAAO5B,EACP6B,SAAU,SAACtB,GAAD,OAAON,EAASM,EAAEuB,OAAOF,QACnCG,MAAM,QACNC,QAAQ,cAGhB,kBAACb,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIV,KAAK,SACLW,UAAWpC,EACX2B,WAAS,EACTK,QAAQ,YACRK,MAAM,WALV,iBAUJ,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,SAAS1B,QAAS,GAC9C,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACe,EAAA,EAAD,qCAEJ,kBAACnB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,IAAD,CAAMW,GAAG,KAAT,eAStB5C,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrC4C,MAAO,CACHC,UAAW,UAEfxB,KAAM,CACFyB,OAAQ,GACRC,aAAc/C,EAAMC,QAAQ,IAEhCkB,KAAM,CACF6B,QAAS,OACTC,cAAe,SACftB,WAAY,cC5EP0hB,GAAe,SAAC,GASf,IARVC,EAQS,EARTA,QACAC,EAOS,EAPTA,WACAC,EAMS,EANTA,iBACA7U,EAKS,EALTA,YACAsI,EAIS,EAJTA,WACA5Q,EAGS,EAHTA,QACAod,EAES,EAFTA,eACA9Q,EACS,EADTA,QAEA,OACI,kBAACnR,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAAS8L,KAAK,UACzC,kBAAChM,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,MAApB,4BAIJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAAC8N,GAAA,EAAD,QAGR,kBAACpT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAGyB,UAAU,UACvC,kBAACF,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACT+B,KAAK,QACL3B,MAAM,eACNC,QAAQ,WACRJ,MAAOqhB,EACPphB,SAAU,SAACtB,GAAD,OAAO2iB,EAAW3iB,EAAEuB,OAAOF,WAG7C,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACT+B,KAAK,QACL3B,MAAM,eACNC,QAAQ,WACRJ,MAAO0M,EACPzM,SAAU,SAACtB,GAAD,OAAO6iB,EAAe7iB,EAAEuB,OAAOF,WAGjD,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIG,WAAS,EACT+B,KAAK,QACL3B,MAAM,UACNC,QAAQ,WACRJ,MAAOoE,EACPnE,SAAU,SAACtB,GAAD,OAAOqW,EAAWrW,EAAEuB,OAAOF,WAG7C,kBAACT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIC,UAAW4D,IAAYsI,IAAgB2U,GAAW3Q,EAClD3Q,WAAS,EACTK,QAAQ,YACRyD,QAAS0d,EACT9gB,MAAM,WALV,2BCxDdghB,GAAU,CAAC,eAAgB,KAAM,eAAgB,UAE1CC,GAAY,SAAC,GAAqB,IACrCC,EADoC,EAAlBC,KACH1e,KAAI,SAACoN,GAAD,MAAU,CAC/BmR,QAAS,CACL,CACIzhB,MAAOsQ,EAAIhI,MAEf,CACItI,MAAOsQ,EAAIxM,IAEf,CACI9D,MAAOsQ,EAAI5D,aAEf,CACI1M,MAAOsQ,EAAI0Q,YAAc,QAKrC,OACI,kBAACzhB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAAS8L,KAAK,UACzC,kBAAChM,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,MAApB,kBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAAC8N,GAAA,EAAD,QAGR,kBAACpT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAChC,EAAA,EAAD,KACI,kBAACoF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKwe,GAAQve,KAAI,SAAC2e,EAAQze,GAAT,OACT,kBAACC,EAAA,EAAD,CAAWC,IAAG,uBAAkBF,IAC3Bye,QAKjB,kBAACte,EAAA,EAAD,KACKoe,EAAQze,KAAI,SAAC4e,EAAK1e,GAAN,OACT,kBAACH,EAAA,EAAD,CAAUK,IAAG,mBAAcF,IACtB0e,EAAIL,QAAQve,KAAI,SAAC6e,EAAK3e,GAAN,OACb,kBAACC,EAAA,EAAD,CACIC,IAAG,UAAKme,GAAQre,GAAb,iBAA4BA,IAE/B,kBAAC1C,EAAA,EAAD,KAAaqhB,EAAI/hB,qBC1DhDgiB,GAAgB,WACzB,IAAM3a,EAAKvI,KAASwI,YADW,EAGPnJ,mBAAqB,IAHd,mBAGxByjB,EAHwB,KAGlBK,EAHkB,OAID9jB,oBAAS,GAJR,mBAIxBuS,EAJwB,KAIfC,EAJe,OAKaxS,mBAAS,IALtB,mBAKxB+jB,EALwB,KAKRC,EALQ,OAMKhkB,mBAAS,IANd,mBAMxBikB,EANwB,KAMZC,EANY,OAODlkB,mBAAS,IAPR,mBAOxBkjB,EAPwB,KAOfC,EAPe,KASvBxV,EAAa1E,qBAAWyE,IAAxBC,SAERvE,qBAAU,WACFuE,GACAA,EAAS,oBAEd,CAACA,IAf2B,MAiBQ1E,qBAAW4U,IAA1CC,EAjBuB,EAiBvBA,WAAYC,EAjBW,EAiBXA,eAEdoG,EAAUvX,uBAAY,WACxB1D,EAAGI,WAAW,iBACTC,MACAC,MAAK,SAACC,GACH,IAAMC,EAAa,GACnBD,EAAcE,SAAQ,SAACC,GACnBF,EAAI7D,KAAJ,2BAAc+D,EAAIC,QAAlB,IAA0BlE,GAAIiE,EAAIjE,SAEtCme,EAAQpa,MAEXI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QACjC,CAACb,IAEJE,qBAAU,WACN+a,MACD,CAACA,IAEJ,IAAMf,EAAgB,uCAAG,sBAAA3iB,EAAA,6DACrB+R,GAAW,GADU,kBAGXtJ,EAAGI,WAAW,iBAAiBsK,IAAI,CACrCzJ,KAAM+Y,EACNkB,MAAO,GACP7V,YAAawV,EACblB,WAAY,EACZ5c,QAASge,EACT5d,WAAY1F,KAASwI,UAAUkb,WAAWC,oBAT7B,OAWjBvG,EAAe,WACfD,EAAW,2BACXqF,EAAW,IACXgB,IAdiB,kDAgBjBpG,EAAe,SACfD,EAAW,KAAIhd,SAAW,oBAjBT,yBAmBjB0R,GAAW,GAnBM,6EAAH,qDAuBtB,OACI,kBAACpR,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,eACI+M,YAAawV,EACbV,eAAgBW,EAChB/d,QAASge,EACTpN,WAAYqN,GACR,CAAEd,oBACF,CAAEF,WACF,CAAEC,cACF,CAAC5Q,cAGb,kBAACnR,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAc,CAAEiiB,YCjEpBc,GAAW,SAAC,GAOX,IANVtkB,EAMS,EANTA,MACAC,EAKS,EALTA,SACAiK,EAIS,EAJTA,KACAqa,EAGS,EAHTA,QACAC,EAES,EAFTA,mBACAlS,EACS,EADTA,QAEA,OACI,kBAACnR,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAAS8L,KAAK,UACzC,kBAAChM,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,MAApB,qBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAAC8N,GAAA,EAAD,QAGR,kBAACpT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACxB,QAAS,EAAGyB,UAAU,UACvC,kBAACF,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIkC,KAAK,QACL/B,WAAS,EACTI,MAAM,OACNC,QAAQ,WACRJ,MAAOsI,EACPrI,SAAU,SAACtB,GAAD,OAAOgkB,EAAQhkB,EAAEuB,OAAOF,QAClCH,KAAK,WAGb,kBAACN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACC,EAAA,EAAD,CACIkC,KAAK,QACL/B,WAAS,EACTI,MAAM,QACNC,QAAQ,WACRJ,MAAO5B,EACP6B,SAAU,SAACtB,GAAD,OAAON,EAASM,EAAEuB,OAAOF,QACnCH,KAAK,WAGb,kBAACN,EAAA,EAAD,CAAMI,MAAI,GACN,kBAACY,EAAA,EAAD,CACIC,UAAWpC,IAAUkK,GAAQoI,EAC7B3Q,WAAS,EACTK,QAAQ,YACRyD,QAAS+e,EACTniB,MAAM,WALV,uBC1CdghB,GAAU,CAAC,OAAQ,SAEZoB,GAAiB,SAAC,GAA0B,IAC/ClB,EAD8C,EAAvBmB,UACH5f,KAAI,SAACoN,GAAD,MAAU,CACpCmR,QAAS,CACL,CACIzhB,MAAOsQ,EAAIhI,MAEf,CACItI,MAAOsQ,EAAIlS,YAKvB,OACI,kBAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAAS8L,KAAK,UACzC,kBAAChM,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,MAApB,cAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACX,kBAAC8N,GAAA,EAAD,QAGR,kBAACpT,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAChC,EAAA,EAAD,KACI,kBAACoF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKwe,GAAQve,KAAI,SAAC2e,EAAQze,GAAT,OACT,kBAACC,EAAA,EAAD,CACIC,IAAG,4BAAuBF,IAEzBye,QAKjB,kBAACte,EAAA,EAAD,KACKoe,EAAQze,KAAI,SAAC4e,EAAK1e,GAAN,OACT,kBAACH,EAAA,EAAD,CAAUK,IAAG,wBAAmBF,IAC3B0e,EAAIL,QAAQve,KAAI,SAAC6e,EAAK3e,GAAN,OACb,kBAACC,EAAA,EAAD,CACIC,IAAG,UAAKme,GAAQre,GAAb,iBAA4BA,IAE/B,kBAAC1C,EAAA,EAAD,KAAaqhB,EAAI/hB,qBCtDhD+iB,GAAkB,WAC3B,IAAM1b,EAAKvI,KAASwI,YADa,EAGPnJ,mBAAS,IAHF,mBAG1BC,EAH0B,KAGnBC,EAHmB,OAITF,mBAAS,IAJA,mBAI1BmK,EAJ0B,KAIpBqa,EAJoB,OAKCxkB,mBAAqB,IALtB,mBAK1B2kB,EAL0B,KAKfE,EALe,OAMH7kB,oBAAS,GANN,mBAM1BuS,EAN0B,KAMjBC,EANiB,OAQMvJ,qBAAW4U,IAA1CC,EARyB,EAQzBA,WAAYC,EARa,EAQbA,eAEZpQ,EAAa1E,qBAAWyE,IAAxBC,SAERvE,qBAAU,WACFuE,GACAA,EAAS,sBAEd,CAACA,IAEJ,IAAMmX,EAAelY,uBAAY,WAC7B1D,EAAGI,WAAW,aACTC,MACAC,MAAK,SAACC,GACH,IAAMC,EAAkB,GACxBD,EAAcE,SAAQ,SAACC,GACnBF,EAAI7D,KAAJ,2BAAc+D,EAAIC,QAAlB,IAA0BlE,GAAIiE,EAAIjE,SAEtCkf,EAAanb,MAEhBI,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QACjC,CAACb,IAEJE,qBAAU,WACN0b,MACD,CAACA,IAyBJ,OACI,kBAAC1jB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GACxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAD,cACQ,CAAEvB,SACF,CAAEC,YACF,CAAEiK,QACF,CAAEqa,WACF,CAAEC,mBAZK,WAlBvBjS,GAAW,GACU7R,KAChBgO,YACAC,cAAc,uBACnBmW,CAAa,CAAE9kB,QAAOkK,SACjBX,MAAK,WACFuU,EAAe,WACfD,EAAW,4BAEdhU,OAAM,SAACC,GACJgU,EAAe,SACfD,EAAW/T,EAAIjJ,SAAW,uBAC3B4R,SAAQ,WACPoS,IACAtS,GAAW,QAiBH,CAACD,cAGb,kBAACnR,EAAA,EAAD,CAAMI,MAAI,GACN,kBAAC,GAAmB,CAAEmjB,iBC1EzBK,GAAc,WAAO,IACtBrX,EAAa1E,qBAAWyE,IAAxBC,SADqB,EAEU1E,qBAAW4U,IAA1CC,EAFqB,EAErBA,WAAYC,EAFS,EAETA,eAFS,EAIiB/d,mBAAS,IAJ1B,mBAItBilB,EAJsB,KAILC,EAJK,OAKSllB,mBAAS,IALlB,mBAKtBmlB,EALsB,KAKTC,EALS,OAMiBplB,mBAAS,IAN1B,mBAMtBqlB,EANsB,KAMLC,EANK,OAOCtlB,oBAAS,GAPV,mBAOtBuS,EAPsB,KAObC,EAPa,KAW7BpJ,qBAAU,WACNuE,EAAS,kBACV,CAACA,IA4CJ,OACI,kBAACvM,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzB,QAAS,GA8CxC,kBAACuB,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,UAC5B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,aAApB,qBAIJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACjF,EAAA,EAAD,CACIC,KAAK,WACLiC,KAAK,QACL1B,QAAQ,WACRL,WAAS,EACTC,MAAOojB,EACPnjB,SAAU,SAACtB,GAAD,OAAO0kB,EAAmB1kB,EAAEuB,OAAOF,YAIzD,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,UAC5B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,aAApB,iBAEJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACjF,EAAA,EAAD,CACIC,KAAK,WACLiC,KAAK,QACL1B,QAAQ,WACRL,WAAS,EACTC,MAAOsjB,EACPrjB,SAAU,SAACtB,GAAD,OAAO4kB,EAAe5kB,EAAEuB,OAAOF,YAIrD,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,UAC5B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACnE,EAAA,EAAD,CAAYN,QAAQ,aAApB,qBAIJ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACjF,EAAA,EAAD,CACIC,KAAK,WACLiC,KAAK,QACL1B,QAAQ,WACRL,WAAS,EACTC,MAAOwjB,EACPvjB,SAAU,SAACtB,GAAD,OAAO8kB,EAAmB9kB,EAAEuB,OAAOF,YAIzD,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACE,WAAW,UAC5B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,IACf,kBAACtF,EAAA,EAAD,CAAMI,MAAI,EAACkF,GAAI,GACX,kBAACtE,EAAA,EAAD,CACIC,SACIkQ,IACC0S,IACAE,IACAE,GACDF,IAAgBE,EAEpB1hB,KAAK,QACL/B,WAAS,EACTK,QAAQ,YACRK,MAAM,UACNoD,QAzJK,WAAO,IAAD,EAC3B8M,GAAW,GACX,IAAMxJ,EAAOrI,IAASC,OAAOsa,YACvBqK,EAAa5kB,IAASC,KAAK4kB,kBAAkBD,WAAhC,iBACfvc,QADe,IACfA,OADe,EACfA,EAAM/I,aADS,QACA,GACfglB,GAEA,OAAJjc,QAAI,IAAJA,KAAMyc,6BAA6BF,GAC9B/b,MAAK,WACFR,EAAK0c,eAAeP,GACf3b,MAAK,WACFuU,EAAe,WACfD,EAAW,uBAEdhU,OAAM,SAACC,GACJgU,EAAe,SACfD,EAAW/T,EAAIjJ,SAAW,uBAE7B4R,SAAQ,kBAAMF,GAAW,SAEjC1I,OAAM,SAACC,GACJgU,EAAe,SACfD,EAAW/T,EAAIjJ,SAAW,uBAE7B4R,SAAQ,WACLF,GAAW,QAoHP,uBCtJdmT,GAAW,SAACxV,GAAD,OACb,kBAAC,GAAD,KAAcA,IAEZyV,GAAU,SACZzV,EACAmM,GAFY,OAGE,kBAAC,GAAeA,EAAUnM,IAM/B0V,GAAmB,WAC5B,IAAM3K,EAAcjS,qBAAWnG,GAE/B,cAAIoY,QAAJ,IAAIA,OAAJ,EAAIA,EAAazH,KAET,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqS,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMJ,GAAQ,kBAAC,GAAD,UAC5C,kBAAC,IAAD,CACIE,OAAK,EACLC,KAAK,mBACLC,OAAQ,kBAAMJ,GAAQ,kBAAC,GAAD,UAE1B,kBAAC,IAAD,CACIE,OAAK,EACLC,KAAK,oBACLC,OAAQ,kBAAMJ,GAAQ,kBAAC,GAAD,UAE1B,kBAAC,IAAD,CACIE,OAAK,EACLC,KAAK,aACLC,OAAQ,kBAAMJ,GAAQ,kBAAC,GAAD,UAE1B,kBAAC,IAAD,CACIE,OAAK,EACLC,KAAK,WACLC,OAAQ,kBACJJ,GAAQ,kBAAC,GAAD,MAAiB,CAAErI,cAAc,OAGhDrC,EAAY7R,OACT,oCACI,kBAAC,IAAD,CACIyc,OAAK,EACLC,KAAK,mBACLC,OAAQ,kBACJJ,GAAQ,kBAAC,GAAD,MAAqB,CACzBrI,cAAc,OAI1B,kBAAC,IAAD,CACIuI,OAAK,EACLC,KAAK,iBACLC,OAAQ,kBACJJ,GAAQ,kBAAC,GAAD,MAAmB,CACvBrI,cAAc,QAMlC,kBAAC,IAAD,CAAUpb,GAAG,OAKjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2jB,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAML,GAAS,kBAAC,EAAD,UAC7C,kBAAC,IAAD,CACIG,OAAK,EACLC,KAAK,kBACLC,OAAQ,kBAAML,GAAS,kBAAC,GAAD,UAE3B,kBAAC,IAAD,CACIG,OAAK,EACLC,KAAK,mBACLC,OAAQ,kBAAML,GAAS,kBAAC,GAAD,UAE3B,kBAAC,IAAD,CAAUxjB,GAAG,Q,qBC3E7BxB,IAASslB,cAXc,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,6C,6CCEX,SAASC,GAAgBC,GACrB,OAAO,kBAACC,GAAA,EAAD,iBAAWD,EAAX,CAAkBplB,UAAU,KAAKslB,QATjB,OAYpB,IAAMC,GAAkB,SAAC,GAIlB,IAHV/lB,EAGS,EAHTA,QACAgd,EAES,EAFTA,WAES,IADTgJ,mBACS,MADK,QACL,EACHxnB,EAAUC,KADP,EAGeS,qBAASc,GAHxB,mBAGF+G,EAHE,KAGIkf,EAHJ,KAKHC,EAAaC,iBAAe,GAClC7d,qBAAU,WACN,OAAO,kBAAMiX,OAAO6G,aAAaF,EAAWzQ,YAC7C,IAEH,IAAM4Q,EAAc,WAChB9G,OAAO6G,aAAaF,EAAWzQ,SAC/BwQ,GAAQ,GACRC,EAAWzQ,QAAU8J,OAAO+G,YACxB,kBAAMtJ,EAAW,MA9BF,MAuCvB,OAJA1U,qBAAU,WACN2d,IAAQjmB,KACT,CAACA,IAGA,kBAACumB,GAAA,EAAD,CACIxf,KAAMA,EACNC,QAASqf,EACTxL,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDyL,iBAAkB,IAClBC,aAAc,CACV9nB,UACoB,UAAhBqnB,EAA0BxnB,EAAQqC,MAAQrC,EAAQ6E,SAE1DqjB,oBAAqBf,GACrB3lB,QACI,yBAAKrB,UAAWH,EAAQwB,SACH,UAAhBgmB,GACG,kBAAC,KAAD,CAAWrnB,UAAWH,EAAQ0U,OAEjB,YAAhB8S,GACG,kBAAC,KAAD,CAAWrnB,UAAWH,EAAQ0U,OAEjClT,GAGTkN,OAAQ,CACJ,kBAAChG,EAAA,EAAD,CACI7C,IAAI,QACJ+K,aAAW,QACX5N,MAAM,UACNoD,QAASyhB,GAET,kBAAC,KAAD,WAOd5nB,GAAYI,aAAW,SAACC,GAAD,MAAY,CACrC+B,MAAO,CACHmC,gBAAiBlE,EAAMmE,QAAQpC,MAAM8lB,MAEzCtjB,QAAS,CACLL,gBAAiB,SAErBhD,QAAS,CACL8B,QAAS,OACTrB,WAAY,UAEhByS,KAAM,CACFgG,YAAapa,EAAMC,QAAQ,QCjF7B2F,GAAUkiB,cAEV9nB,GAAQ+nB,YAAe,CACzB5jB,QAAS,CACL4D,QAAS,CACL1D,KAAM,WAEV2jB,UAAW,CACP3jB,KAAM,YAGd4jB,WAAY,CACRC,WAAY,SACZC,SAAU,GACVC,UAAW,CACPC,WAAY,QAEhBC,GAAI,CACAD,WAAY,MAGpBpoB,QAAS,EACTsoB,UAAW,CACPC,UAAW,CACPxO,KAAM,CACFlX,OAAQ,KAGhB2lB,WAAY,CACRzO,KAAM,IAIV0O,aAAc,CACVC,QAAS,CACLtU,YAAa,SAEjB2F,KAAM,CACF,YAAa,CACTtX,MAAO,WAInBkmB,aAAc,CACV5O,KAAM,CACF,yBAA0B,CACtB3F,YAAa,WAIzBwU,iBAAkB,CACd7O,KAAM,CACF,YAAa,CACT3F,YAAa,cAgFlByU,GAzEO,WAAO,IAAD,EACc1oB,mBAAsB,MADpC,mBACjBkb,EADiB,KACJyN,EADI,OAEM3oB,oBAAkB,GAFxB,mBAEjBuS,EAFiB,KAERC,EAFQ,OAGcxS,mBAClC,SAJoB,mBAGjB8mB,EAHiB,KAGJ/I,EAHI,OAMM/d,mBAAS,IANf,mBAMjBc,EANiB,KAMRgd,EANQ,KAQlB5U,EAAKvI,IAASwI,YA2CpB,OAzCAC,qBAAU,WACNzI,IAASC,OAAOgoB,mBAAhB,uCAAmC,WAAO5f,GAAP,iCAAAvI,EAAA,0DAC3BuI,EAD2B,0CAGHA,EAAK6f,mBAHF,YAGjBC,EAHiB,QAKbC,OAAO1f,MALM,iCAMHH,EACXI,WAAW,aACXM,IAAIZ,EAAKyK,KACTlK,MATc,OAMnByf,EANmB,gDAWH9f,EACXI,WAAW,SACXM,IAAIZ,EAAKyK,KACTlK,MAdc,QAWnByf,EAXmB,eAiBnBA,EAAQvW,SACRP,EAAW8W,EAAQnf,QAEvB8e,EAAe,CACXtf,MAAK,UAAEyf,EAAMC,OAAO1f,aAAf,SACLT,MAAK,oBAAEsJ,SAAF,aAAE,EAAUtJ,aAAZ,QAAqB,GAC1BuB,KAAI,oBAAE+H,SAAF,aAAE,EAAU/H,YAAZ,QAAoB,GACxBoE,YAAW,oBAAE2D,SAAF,aAAE,EAAU3D,mBAAZ,QAA2B,GACtCtO,MAAO+I,EAAK/I,OAAS,GACrBwT,IAAKzK,EAAKyK,KAAO,KA1BE,kDA6BvBzJ,QAAQC,IAAR,MA7BuB,yBA+BvBuI,GAAW,GA/BY,6CAkC3BmW,EAAe,MACfnW,GAAW,GAnCgB,gEAAnC,yDAsCD,CAACtJ,IAEAqJ,EAAgB,qCAGhB,kBAAC0W,EAAA,EAAD,CAAerpB,MAAOA,IAClB,kBAACkD,EAAY2a,SAAb,CAAsB5b,MAAOqZ,GACzB,kBAAC2C,GAAaJ,SAAd,CAAuB5b,MAAO,CAAEic,aAAYC,mBACxC,kBAAC,GAAD,cACQ,CAAEjd,WACF,CAAEgd,cACF,CAAEgJ,iBAEV,kBAAC,IAAD,CAAQthB,QAASA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,YC7HRyV,QACW,cAA7BoF,OAAOrH,SAASkQ,UAEe,UAA7B7I,OAAOrH,SAASkQ,UAEhB7I,OAAOrH,SAASkQ,SAASC,MACvB,2DCZNC,IAASpD,OAAO,kBAAC,GAAD,MAASxF,SAAS6I,eAAe,SAE7C,kBAAmBC,WACnBA,UAAUC,cAAcpb,SAAS,+BAChC3E,MAAK,SAASggB,GACXxf,QAAQC,IAAI,qCAAsCuf,EAAaC,UAChE3f,OAAM,SAASC,GACdC,QAAQC,IAAI,6CAA8CF,MD8H5D,kBAAmBuf,WACrBA,UAAUC,cAAcG,MAAMlgB,MAAK,SAAAggB,GACjCA,EAAaG,kB","file":"static/js/main.f72afc7c.chunk.js","sourcesContent":["export interface UserData {\n    email: string;\n    name: string;\n    orgId: string;\n    phoneNumber: string;\n}\n\nexport interface User extends UserData {\n    uid: string;\n    admin: boolean;\n}\n\nexport interface OrdersStats {\n    count: number;\n}\n\nexport type Associations = Array<{ name: string; number: string }>;\n\nexport enum OrderStatusEnum {\n    inProgress = 'In Progress',\n    finalized = 'Finalized',\n    cancelled = 'Cancelled',\n    hold = 'Hold'\n}\n\nexport enum OrderTypeEnum {\n    lienSearch = \"Lien Search\",\n    estoppelLetter = \"Estoppel Letter\",\n    landSurvey = \"Land Survey\",\n    permitResolution = \"Permit Resolution\",\n}\n\nexport enum OrderTypeStatusEnum {\n    newOrder = \"New Order\",\n    hold = \"Hold\",\n    informationRequested = \"Information Requested\",\n    informationReceived = \"Information Received\", // Esto deberia sobrar\n    pendingPayment = \"Pending Payment\",\n    cancelled = \"Cancelled\",\n    finalized = \"Finalized\",\n}\n\nexport enum AddressEnum {\n    address1 = 'Address 1',\n    address2 = 'Address 2',\n    unit = \"Unit\",\n    city = \"City\",\n    state = \"State\",\n    zipCode = \"Zip Code\"\n}\n\nexport enum OrderDataEnum {\n    orderNumber = \"Order # / File Name\",\n    folio = \"Folio\",\n    legalDescription = \"Legal Description\",\n    seller = \"Seller\",\n    buyer = \"Buyer\",\n    listingAgent = \"Listing Agent\",\n    listingAgentPhone = \"Listing Agent Phone\",\n    specialInstructions = \"Special Instructions\"\n}\n\nexport enum LandSurveyDetailsEnum {\n    lenderCertification = \"Lender Certification\",\n    buyerCertification = \"Buyer Certification\",\n    underwriterCertification = \"Underwriter Certification\",\n    titleCompany = \"Title Company\",\n    hardCopy = \"Request Hard Copy\"\n}\n\nexport type orderStatusEnumKeys = keyof typeof OrderStatusEnum;\n\nexport type orderTypeStatusEnumKeys = keyof typeof OrderTypeStatusEnum;\n\nexport type orderTypeEnumKeys = keyof typeof OrderTypeEnum;\n\nexport const emptyOrderType: OrderTypeInterface = {\n    isActive: false,\n    status: 'newOrder',\n    assignee: '',\n    estimatedDelivery: ''\n}\n\nexport const emptyOrdersType: OrderTypesInterface = {\n    lienSearch: {...emptyOrderType},\n    estoppelLetter: {...emptyOrderType},\n    landSurvey: {...emptyOrderType},\n    permitResolution: {...emptyOrderType}\n}\n\nexport interface OrderTypeInterface {\n    isActive: boolean\n    status: orderTypeStatusEnumKeys\n    assignee: string\n    estimatedDelivery: string\n}\nexport interface OrderTypesInterface {\n    lienSearch: OrderTypeInterface\n    estoppelLetter: OrderTypeInterface;\n    landSurvey: OrderTypeInterface;\n    permitResolution: OrderTypeInterface;\n}\n\nexport interface Address {\n    address1: string;\n    address2: string;\n    unit: string;\n    city: string;\n    state: string;\n    zipCode: string;\n}\n\nexport interface LandSurveyDetails {\n    lenderCertification: string;\n    buyerCertification: string;\n    underwriterCertification: string;\n    titleCompany: string;\n    hardCopy: boolean;\n}\n\nexport interface OrderData {\n    orderNumber: string;\n    specialInstructions: string;\n    folio: number;\n    legalDescription: string;\n    requestedBy?: string;\n    closingDate: string;\n    neededDate: string;\n    seller: string;\n    buyer: string;\n    listingAgent?: string;\n    listingAgentPhone?: number;\n}\n\nexport interface CreateOrder extends OrderData {\n    orgId: string;\n    orderType: OrderTypesInterface;\n    associations?: Associations;\n    landSurvey?: LandSurveyDetails;\n    created_on: number;\n    status: orderStatusEnumKeys;\n    address: Address;\n}\n\nexport interface Order extends CreateOrder {\n    id: string;\n    objectID: string; //for algolia\n    orderCount: number\n}\n\nexport interface OrgData {\n    name: string;\n    users: string[];\n    orderCount: number;\n    phoneNumber: string\n    address: string\n}\n\nexport interface Org extends OrgData {\n    id: string;\n}\n\nexport interface Employee {\n    id: string\n    email: string\n    name: string\n}","import React from 'react';\nimport { Paper, makeStyles } from '@material-ui/core';\n\ninterface Props {\n    children: JSX.Element\n}\n\nexport const PaperWrapper = ({children}: Props) => {\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.padding}>\n            {children}\n        </Paper>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    padding: {\n        padding: theme.spacing(5),\n        width: 500\n    }\n}))","import React, { useState } from \"react\";\nimport {\n    TextField,\n    Button,\n    Grid,\n    Typography,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { PaperWrapper } from \"../../components/PaperWrapper\";\n\nexport const Login: React.FC = () => {\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const classes = useStyles();\n    const onSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setErrorMessage(\"\");\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password);\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    };\n\n    return (\n        <PaperWrapper>\n            <form onSubmit={(e) => onSubmit(e)} className={classes.form}>\n                <img\n                    alt=\"\"\n                    className={classes.logo}\n                    src={`${process.env.PUBLIC_URL}/logo.png`}\n                />\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    <Grid item>\n                        <TextField\n                            type=\"email\"\n                            error={!!errorMessage}\n                            fullWidth\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            label=\"email\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            variant=\"outlined\"\n                            helperText={\n                                <Grid item>\n                                    <Link to=\"/forgot-password\">\n                                        Forgot Password\n                                    </Link>\n                                </Grid>\n                            }\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"submit\"\n                            disabled={!email || !password}\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Login\n                        </Button>\n                    </Grid>\n                    <Grid item container alignItems=\"center\" spacing={1}>\n                        <Grid item>\n                            <Typography>Dont have an account?</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/create-account\">Create account</Link>\n                        </Grid>\n                    </Grid>\n                    {errorMessage && (\n                        <Grid item>\n                            <Typography color=\"error\">\n                                {errorMessage}\n                            </Typography>\n                        </Grid>\n                    )}\n                </Grid>\n            </form>\n        </PaperWrapper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        alignSelf: \"center\",\n    },\n    logo: {\n        height: 70,\n        marginBottom: theme.spacing(3),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n}));\n","import {createContext} from 'react';\nimport { User } from '../Interfaces';\n\nexport const UserContext =  createContext<User | null>(null);","import { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { OrderStatusEnum, orderStatusEnumKeys } from \"../Interfaces\";\n\ntype size = 'small' | 'big'\n\ninterface Props {\n    status: orderStatusEnumKeys;\n    size?: size\n}\n\nexport const StatusChip = ({ status, size = 'big' }: Props) => {\n    const classes = useStyles(size)();\n\n    return (\n        <Box className={`${classes.container} ${classes[status]}`}>\n            <Typography>{OrderStatusEnum[status]}</Typography>\n        </Box>\n    );\n};\n\nconst useStyles = (size: size) => makeStyles((theme) => ({\n    inProgress: {\n        backgroundColor: theme.palette.info.main,\n    },\n    finalized: {\n        backgroundColor: theme.palette.success.main,\n    },\n    cancelled: {\n        backgroundColor: theme.palette.error.main,\n    },\n    hold: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    container: {\n        padding: size === 'small' ? theme.spacing(0.5, 1) : theme.spacing(1, 2),\n        borderRadius: theme.shape.borderRadius,\n        color: \"white\",\n        display: 'inline-block'\n    },\n}));\n","import React from \"react\";\nimport {\n    Paper,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { Order } from \"../Interfaces\";\nimport { useHistory } from \"react-router-dom\";\nimport { StatusChip } from \"./StatusChip\";\n\nconst headers = [\n    \"Order # / File Name\",\n    \"Address\",\n    \"Folio\",\n    \"Status\",\n    \"Created\",\n];\n\ninterface Props {\n    orders: Order[];\n}\n\nexport const OrderTable = ({ orders }: Props) => {\n    return (\n        <Paper>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        {headers.map((entry, index) => (\n                            <TableCell key={`header${index}`}>\n                                {entry}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders.map((order, i) => (\n                        <Row key={`order-${i}`} {...{ order }} />\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\ninterface RowProps {\n    order: Order;\n}\n\nconst Row = ({ order }: RowProps) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const onClick = (id: string) => {\n        history.push(`/order/${id}`);\n    };\n\n    return (\n        <TableRow\n            onClick={() => onClick(order.objectID)}\n            hover\n            className={classes.pointer}\n        >\n            <TableCell>{order.orderNumber || \"--\"}</TableCell>\n            <TableCell>{order.address.address1 || \"--\"}</TableCell>\n            <TableCell>{order.folio || \"--\"}</TableCell>\n            <TableCell>\n                <StatusChip size=\"small\" status={order.status} />\n            </TableCell>\n            <TableCell>\n                {new Date(order.created_on).toLocaleString() || \"--\"}\n            </TableCell>\n        </TableRow>\n    );\n};\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        width: \"80vw\",\n    },\n    pointer: {\n        cursor: \"pointer\",\n    },\n}));\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\ninterface Props {\n    value: string;\n    setValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const SearchInput = ({ value, setValue }: Props) => {\n\n    return (\n        <Grid item container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n                <SearchIcon color=\"disabled\" />\n            </Grid>\n            <Grid item xs={9}>\n                <TextField\n                    InputProps={{disableUnderline: true}}\n                    fullWidth\n                    {...{ value }}\n                    onChange={(e) => setValue(e.target.value)}\n                    placeholder=\"Search by address, zip code, status, or folio...\"\n                />\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { Typography, Grid, Button, makeStyles } from \"@material-ui/core\";\n\ninterface Props {\n    imageFile: string;\n    title: string;\n    description?: string;\n    button?: { text: string; onClick: () => void; disabled?: boolean };\n    documentation?: { text: string; link: string };\n    width?: number;\n}\n\nexport const EmptyState = ({\n    imageFile,\n    title,\n    description,\n    button,\n    width,\n}: Props) => {\n    const classes = useStyles();\n\n    return (\n        <Grid\n            item\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n        >\n            <Grid item>\n                <img\n                    style={width ? { maxWidth: width } : undefined}\n                    className={classes.image}\n                    src={`${process.env.PUBLIC_URL}/Illustrations/${imageFile}`}\n                    alt=\"\"\n                ></img>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"h6\">{title}</Typography>\n            </Grid>\n            {description && (\n                <Grid item xs={8}>\n                    <Typography align=\"center\" variant=\"body2\">\n                        {description}\n                    </Typography>\n                </Grid>\n            )}\n\n            {button && (\n                <Grid item>\n                    <Button\n                        data-test=\"button_emptyCreate\"\n                        disabled={button.disabled}\n                        color=\"primary\"\n                        size=\"large\"\n                        variant=\"contained\"\n                        onClick={button.onClick}\n                    >\n                        {button.text}\n                    </Button>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        maxWidth: \"350px\",\n        fill: theme.palette.primary.main,\n    },\n}));\n","import {\n    Drawer,\n    Grid,\n    IconButton,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ninterface Props {\n    open: boolean;\n    onClose: () => void;\n    header: string;\n    content: JSX.Element;\n}\n\nconst DRAWER_WIDTH = 400;\n\nexport const CustomDrawer = ({ open, onClose, content }: Props) => {\n    const classes = useStyles();\n\n    const container = (\n        <Grid\n            container\n            direction=\"column\"\n            className={classes.container}\n            spacing={2}\n        >\n            <Grid container item justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                    <Typography variant=\"h5\">Modify Order</Typography>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Grid item>{content}</Grid>\n        </Grid>\n    );\n    return (\n        <Drawer anchor=\"right\" {...{ open }} {...{ onClose }}>\n            {container}\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(2, 5),\n        width: DRAWER_WIDTH,\n    },\n}));\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { OrderTypeEnum, orderTypeEnumKeys } from \"../Interfaces\";\n\ninterface Props {\n    orderType: orderTypeEnumKeys | '';\n    setOrderType: React.Dispatch<React.SetStateAction<orderTypeEnumKeys | ''>>\n}\n\nexport const OrderTypeSelector = ({ orderType, setOrderType }: Props) => {\n    return (\n        <TextField\n            label='Order Type'\n            select\n            value={orderType}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            onChange={(e) => setOrderType(e.target.value as orderTypeEnumKeys)}\n        >\n            <MenuItem value=\"\">All</MenuItem>\n            {Object.keys(OrderTypeEnum).map((s, index) => (\n                <MenuItem key={`${index}-${s}`} value={s}>\n                    {OrderTypeEnum[s as orderTypeEnumKeys]}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport firebase from \"firebase/app\";\nimport { Org, OrgData } from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n    orgId: string;\n    setOrgId: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const OrgSelector = ({\n    orgId,\n    setOrgId,\n}: Props) => {\n    const [orgOptions, setOrgOptions] = useState<Org[]>([]);\n\n    const user = useContext(UserContext);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (user?.admin) {\n            db.collection(\"organizations\")\n                .get()\n                .then((querySnapshot) => {\n                    const arr: Org[] = [];\n                    querySnapshot.forEach((doc) => {\n                        arr.push({ id: doc.id, ...(doc.data() as OrgData)});\n                    });\n                    setOrgOptions(arr);\n                })\n                .catch((err) => console.log(err));\n        }\n    }, [user, db]);\n\n    return (\n        <Grid item>\n            <TextField\n                label=\"Organization\"\n                select\n                variant=\"outlined\"\n                fullWidth\n                value={orgId}\n                size=\"small\"\n                onChange={(e) => setOrgId(e.target.value)}\n            >\n                <MenuItem value=\"\">All</MenuItem>\n                {orgOptions.map((option, index) => (\n                    <MenuItem key={`status-${index}`} value={option.id}>\n                        {option.name}\n                    </MenuItem>\n                ))}\n            </TextField>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { OrderStatusEnum, orderStatusEnumKeys } from \"../Interfaces\";\n\n\ninterface Props {\n    status: orderStatusEnumKeys | '';\n    setStatus: React.Dispatch<React.SetStateAction<orderStatusEnumKeys | ''>>\n    withLabel?: boolean\n}\n\nexport const StatusSelector = ({ status, setStatus, withLabel }: Props) => {\n    return (\n        <TextField\n            label={withLabel ? 'Status' : undefined}\n            select\n            value={status}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            onChange={(e) => setStatus(e.target.value as orderStatusEnumKeys)}\n        >\n            <MenuItem value=\"\">All</MenuItem>\n            {Object.keys(OrderStatusEnum).map((s, index) => (\n                <MenuItem key={`${index}-${s}`} value={s}>\n                    {OrderStatusEnum[s as orderStatusEnumKeys]}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport firebase from \"firebase/app\";\nimport { UserData } from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n    currentAssignee: string;\n    setCurrentAssignee: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const OrderAssigneeController = ({\n    currentAssignee,\n    setCurrentAssignee,\n}: Props) => {\n    const [userOptions, setUserOptions] = useState<UserData[]>([]);\n\n    const user = useContext(UserContext);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (user?.admin) {\n            db.collection(\"employees\")\n                .get()\n                .then((querySnapshot) => {\n                    const arr: UserData[] = [];\n                    querySnapshot.forEach((doc) => {\n                        arr.push({ ...(doc.data() as UserData) });\n                    });\n                    setUserOptions(arr);\n                })\n                .catch((err) => console.log(err));\n        }\n    }, [user, db]);\n\n    return (\n        <TextField\n            label=\"Assigned Employee\"\n            select\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            value={currentAssignee}\n            onChange={(e) => setCurrentAssignee(e.target.value)}\n        >\n            <MenuItem value=\"\">All</MenuItem>\n            {userOptions.map((option, index) => (\n                <MenuItem key={`status-${index}`} value={option.email}>\n                    {option.email}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { orderTypeEnumKeys, orderStatusEnumKeys } from \"../Interfaces\";\nimport { CustomDrawer } from \"./CustomDrawer\";\nimport { OrderTypeSelector } from \"./OrderTypeSelector\";\nimport { OrgSelector } from \"./OrgSelector\";\nimport { StatusSelector } from \"./StatusSelector\";\nimport { forOwn } from \"lodash\";\nimport { FilterOptions } from \"./Filters\";\nimport { OrderAssigneeController } from \"./SelectEmployee\";\n\ninterface Props {\n    open: boolean;\n    onClose: () => void;\n    filters: FilterOptions;\n}\n\nexport const FilterDrawer = ({ open, onClose, filters }: Props) => {\n    const { status, organizations, orderType, employee } = filters;\n\n    const [filterStatus, setFilterStatus] = useState<orderStatusEnumKeys | \"\">(\n        status.value\n    );\n    const [filterOrg, setFilterOrg] = useState(organizations?.value ?? \"\");\n    const [filterEmployee, setFilterEmployee] = useState(employee?.value ?? \"\");\n    const [filterOrderType, setFilterOrderType] = useState<\n        orderTypeEnumKeys | \"\"\n    >(orderType.value);\n\n    const clearFilters = () => {\n        forOwn(filters, (value) => value && value.setter(\"\"));\n        setFilterOrg(\"\");\n        setFilterStatus(\"\");\n        setFilterOrderType(\"\");\n        setFilterEmployee('');\n    };\n\n    const applyFilter = () => {\n        status.setter(filterStatus);\n        orderType.setter(filterOrderType);\n        if (organizations) organizations.setter(filterOrg);\n        if (employee) employee.setter(filterEmployee)\n    };\n\n    const content = (\n        <Grid container spacing={3} direction=\"column\">\n            {status && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Order Status</Typography>\n                    </Grid>\n                    <Grid item>\n                        <StatusSelector\n                            status={filterStatus}\n                            setStatus={setFilterStatus}\n                            withLabel\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            {organizations && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Organization</Typography>\n                    </Grid>\n                    <Grid item>\n                        <OrgSelector\n                            orgId={filterOrg}\n                            setOrgId={setFilterOrg}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            {employee && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Employee Assigned</Typography>\n                    </Grid>\n                    <Grid item>\n                        <OrderAssigneeController\n                            currentAssignee={filterEmployee}\n                            setCurrentAssignee={setFilterEmployee}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            {orderType && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Order Type</Typography>\n                    </Grid>\n                    <Grid item>\n                        <OrderTypeSelector\n                            orderType={filterOrderType}\n                            setOrderType={setFilterOrderType}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            <Grid item>\n                <Button\n                    fullWidth\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={applyFilter}\n                >\n                    Apply Filters\n                </Button>\n            </Grid>\n            <Grid item>\n                <Button\n                    fullWidth\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={clearFilters}\n                >\n                    Clear Filters\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <CustomDrawer\n            {...{ open }}\n            {...{ onClose }}\n            header=\"Filter\"\n            {...{ content }}\n        />\n    );\n};\n","import React, {\n    useEffect,\n    useState,\n    useCallback,\n    useContext,\n    useMemo,\n} from \"react\";\nimport { Badge, Grid, IconButton } from \"@material-ui/core\";\n\nimport algoliasearch from \"algoliasearch/lite\";\nimport { OrderTable } from \"./OrderTable\";\nimport { Order, orderTypeEnumKeys, orderStatusEnumKeys } from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\nimport { SearchInput } from \"./SearchInput\";\nimport { FilterOptions } from \"./Filters\";\nimport { transform } from \"lodash\";\nimport { EmptyState } from \"./EmpyState\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { FilterDrawer } from \"./FilterDrawer\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\n//This two have to be always in order\n//To add a new filter it has to be added in algolia\nconst getFilter: Map<\n    keyof FilterOptions,\n    (value: string) => string[]\n> = new Map([\n    [\"organizations\", (value: string) => [`orgId:${value}`]],\n    [\"orderType\", (value: string) => [`orderType.${value}.isActive:true`]],\n    [\"status\", (value: string) => [`status:${value}`]],\n    [\n        \"employee\",\n        (value: string) => [\n            `orderType.lienSearch.assignee:${value}`,\n            `orderType.landSurvey.assignee:${value}`,\n            `orderType.permitResolution.assignee:${value}`,\n            `orderType.estoppelLetter.assignee:${value}`,\n        ],\n    ],\n]);\n\nconst generateFilterQuery = (\n    filters: FilterOptions,\n    initialValue?: Array<string[]>\n) => {\n    return transform(\n        { ...filters },\n        (acc, value, key) => {\n            if (value?.value) {\n                return acc.push(\n                    getFilter.get(key as keyof FilterOptions)!(value.value)\n                );\n            }\n            return acc;\n        },\n        initialValue || []\n    );\n};\n\nexport const OrdersTable = () => {\n    const [orders, setOrders] = useState<Order[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [filterStatus, setFilterStatus] = useState<orderStatusEnumKeys | \"\">(\n        \"\"\n    );\n    const [filterOrg, setFilterOrg] = useState(\"\");\n    const [filterEmployee, setFilterEmployee] = useState(\"\");\n    const [filterOrderType, setFilterOrderType] = useState<\n        orderTypeEnumKeys | \"\"\n    >(\"\");\n\n    const user = useContext(UserContext);\n\n    const history = useHistory();\n    const {\n        pathname,\n        state: { openFilter } = { openFilter: false },\n    } = useLocation<{\n        openFilter: boolean;\n    }>();\n\n    const onFilterClose = () => {\n        history.push({\n            pathname,\n            state: {\n                openFilter: false,\n            },\n        });\n    };\n\n    const onFilterOpen = () => {\n        history.push({\n            pathname,\n            state: {\n                openFilter: true,\n            },\n        });\n    };\n\n    const filters = useMemo(() => {\n        let filtersOptions: FilterOptions = {\n            status: {\n                value: filterStatus,\n                setter: setFilterStatus,\n            },\n            orderType: {\n                value: filterOrderType,\n                setter: setFilterOrderType,\n            },\n        };\n\n        if (user?.admin) {\n            filtersOptions.organizations = {\n                value: filterOrg,\n                setter: setFilterOrg,\n            };\n            filtersOptions.employee = {\n                value: filterEmployee,\n                setter: setFilterEmployee,\n            };\n        }\n        return filtersOptions;\n    }, [user, filterStatus, filterOrderType, filterOrg, filterEmployee]);\n\n    const getOrders = useCallback(async () => {\n        const searchClient = algoliasearch(\n            \"1AVZX9L93I\",\n            \"68be777ac13a6002caf326d9bcfbf90a\"\n        );\n        const index = await searchClient.initIndex(\"orders\");\n\n        let filterArr: Array<string[]> = [];\n\n        if (user && !user?.admin) {\n            filterArr = [[`orgId:${user.orgId}`]];\n        }\n\n        filterArr = generateFilterQuery(filters, filterArr);\n        index\n            .search(searchQuery, {\n                facetFilters: filterArr,\n            })\n            .then(({ hits }) => {\n                setOrders(hits as Order[]);\n            })\n            .catch((err) => console.log(err));\n    }, [user, searchQuery, filters]);\n\n    const onRefresh = () => {\n        getOrders();\n    };\n\n    useEffect(() => {\n        getOrders();\n    }, [getOrders]);\n\n    return (\n        <>\n            <FilterDrawer\n                open={openFilter}\n                onClose={onFilterClose}\n                {...{ filters }}\n            />\n            <Grid container direction=\"column\" spacing={4}>\n                <Grid\n                    item\n                    container\n                    justify=\"space-between\"\n                    spacing={2}\n                    wrap=\"nowrap\"\n                >\n                    <Grid item xs={10}>\n                        <SearchInput\n                            value={searchQuery}\n                            setValue={setSearchQuery}\n                        />\n                    </Grid>\n                    <Grid item container spacing={1} justify=\"flex-end\">\n                        <Grid item>\n                            <IconButton size=\"small\" onClick={onRefresh}>\n                                <RefreshIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <IconButton size=\"small\" onClick={onFilterOpen}>\n                                <Badge\n                                    color=\"error\"\n                                    variant=\"dot\"\n                                    invisible={\n                                        !Object.values(filters).find(\n                                            (type) => !!type.value\n                                        )\n                                    }\n                                >\n                                    <FilterListIcon />\n                                </Badge>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    {orders.length === 0 ? (\n                        <EmptyState\n                            title=\"No Orders Found\"\n                            imageFile=\"orders.svg\"\n                        />\n                    ) : (\n                        <OrderTable {...{ orders }} />\n                    )}\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import {createContext} from 'react';\n\ninterface context {\n    title: string,\n    setTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const TitleContext =  createContext<context>({\n    title: '',\n    setTitle: () => {}\n});","import { createContext } from \"react\";\n\nexport interface ActionButtonInterface {\n    label: string; \n    action: () => void\n    breadcrumbText?: number | string\n}\n\ninterface ActionButtonContextInterface {\n    actionButton: ActionButtonInterface | null;\n    setNavigationBar: React.Dispatch<React.SetStateAction<ActionButtonInterface | null>>\n}\n\nexport const ActionButtonContext = createContext<ActionButtonContextInterface>({\n    actionButton: null,\n    setNavigationBar: () => {}\n });\n","import React, { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nimport { OrdersTable } from \"../components/OrdersTable\";\nimport { TitleContext } from \"../context/TitleContext\";\nimport { ActionButtonContext } from \"../context/ActionButtonContext\";\n\nexport const Dashboard: React.FC = () => {\n    const history = useHistory();\n\n    const user = useContext(UserContext);\n    const { setTitle } = useContext(TitleContext);\n    const {setNavigationBar} = useContext(ActionButtonContext);\n\n    useEffect(() => {\n        setTitle(\"Dashboard\");\n    }, [setTitle]);\n\n\n    useEffect(() => {\n        if (!user?.admin) {\n            setNavigationBar({\n                label: 'New Order',\n                action: () => history.push(\"/new-order/1\"),\n            })\n        }\n        \n    }, [user, setNavigationBar, history])\n\n    return <OrdersTable />;\n};\n\n","import React, { useState, BaseSyntheticEvent } from \"react\";\nimport {\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { useForm } from \"react-hook-form\";\nimport PhoneNumber from \"awesome-phonenumber\";\nimport { User } from \"../../Interfaces\";\nimport { PaperWrapper } from \"../../components/PaperWrapper\";\n\ninterface UserCreation extends User {\n    confirmPassword: string;\n    password: string;\n}\n\nexport const CreateAccount: React.FC = () => {\n    const classes = useStyles();\n\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const { register, handleSubmit } = useForm<UserCreation>();\n\n    const history = useHistory();\n\n    const onSubmit = async (\n        data: UserCreation,\n        e: BaseSyntheticEvent<object, any, any> | undefined\n    ) => {\n        e && e.preventDefault();\n        setErrorMessage(\"\");\n        let pn = new PhoneNumber(data.phoneNumber, \"US\");\n        try {\n            if (!pn.isValid())\n                throw new Error(\"Please input valid phone number\");\n            const createUser = firebase.functions().httpsCallable(\"users-createUser\");\n            await createUser({\n                email: data.email,\n                password: data.password,\n                name: data.name,\n                orgId: data.orgId,\n                phoneNumber: pn.getNumber(),\n            });\n            history.push(\"/\");\n        } catch (err) {\n            setErrorMessage(err.message);\n        }\n    };\n\n    return (\n        <PaperWrapper>\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n                <img\n                    alt=\"\"\n                    className={classes.logo}\n                    src={`${process.env.PUBLIC_URL}/logo.png`}\n                />\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    <Grid item className={classes.title}>\n                        <Typography variant=\"h5\">Create Account</Typography>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"email\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            name=\"email\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"name\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Name\"\n                            variant=\"outlined\"\n                            name=\"name\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"phone\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Phone Number\"\n                            variant=\"outlined\"\n                            name=\"phoneNumber\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            type=\"id\"\n                            error={!!errorMessage}\n                            fullWidth\n                            label=\"Organization Id\"\n                            helperText=\"Id of the organization you belong\"\n                            variant=\"outlined\"\n                            name=\"orgId\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"Password\"\n                            variant=\"outlined\"\n                            name=\"password\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            fullWidth\n                            error={!!errorMessage}\n                            type=\"password\"\n                            label=\"Confirm Password\"\n                            variant=\"outlined\"\n                            name=\"confirmedPassword\"\n                            inputRef={register}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit\n                        </Button>\n                    </Grid>\n                    <Grid item container alignItems=\"center\" spacing={1}>\n                        <Grid item>\n                            <Typography>Already have an account?</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/\">Login</Link>\n                        </Grid>\n                    </Grid>\n                    {errorMessage && (\n                        <Grid item>\n                            <Typography color=\"error\">\n                                {errorMessage}\n                            </Typography>\n                        </Grid>\n                    )}\n                </Grid>\n            </form>\n        </PaperWrapper>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        alignSelf: \"center\",\n    },\n    logo: {\n        height: 70,\n        marginBottom: theme.spacing(3),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n}));\n","import React from 'react';\nimport {Stepper, Step, StepLabel} from '@material-ui/core';\n\ninterface Props {\n    activeStep: number,\n    steps: Array<{\n        label: string\n    }>\n}\n\nexport const CreateStepper = ({activeStep, steps}: Props) => {\n\n    return (\n        <Stepper activeStep={activeStep}>\n            {steps.map(step => (\n                <Step key={step.label}>\n                    <StepLabel>{step.label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    )\n}","import React from 'react';\nimport { Dialog, Grid, AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useHistory } from 'react-router-dom';\nimport { CreateStepper } from './CreateStepper';\n\ninterface Props {\n    toolbarHeader: string,\n    cancelPath: string,\n    activeStep: string,\n    stepComponents: Array<{\n        label: string,\n        component: JSX.Element,\n    }>\n}\n\nexport const FullScreenCreate = ({activeStep, toolbarHeader, cancelPath, stepComponents}: Props) => {\n\n    const history = useHistory();\n    const classes = useStyles();\n    \n    const createStep = parseInt(activeStep) - 1;\n\n    const onClose = () => history.push(cancelPath);\n\n    return (\n        <Dialog fullScreen open={true} onClose={onClose}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h5\">\n                                {toolbarHeader}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction=\"column\">\n                <Grid container item justify=\"center\">\n                    <CreateStepper activeStep={createStep} steps={stepComponents} />\n                </Grid>\n                <Grid item container justify=\"center\">\n                    {stepComponents[createStep]?.component ?? 'Error'}\n                </Grid>\n            </Grid>\n        </Dialog>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative'\n    },\n    paper: {\n        padding: theme.spacing(4, 5, 2, 5)\n    },\n    buttons: {\n        marginBottom: theme.spacing(2)\n    }\n}))","import React from \"react\";\nimport { Grid, Button, makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n    content: JSX.Element;\n    isLast?: boolean;\n    isFirst?: boolean;\n    onNext: () => void;\n    onCancel?: () => void;\n    disabled?: boolean;\n    hideActions?: boolean;\n}\n\nexport const CreateWrapper = ({\n    content,\n    isLast,\n    isFirst,\n    onNext,\n    onCancel,\n    disabled = false,\n    hideActions,\n}: Props) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const onBack = () => history.goBack();\n\n    return (\n        <Grid\n            item\n            container\n            direction=\"column\"\n            spacing={3}\n            className={classes.container}\n        >\n            {content}\n            {!hideActions && (\n                <Grid\n                    item\n                    container\n                    spacing={2}\n                    justify=\"flex-end\"\n                    className={classes.buttons}\n                >\n                    <Grid item>\n                        <Button\n                            onClick={onCancel || onBack}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            {isFirst ? \"Cancel\" : \"Back\"}\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            onClick={onNext}\n                            disabled={disabled}\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            {isLast ? \"Finish\" : \"Next\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        margin: theme.spacing(0, 5),\n    },\n    buttons: {\n        marginBottom: theme.spacing(2),\n    },\n}));\n","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Grid,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nexport interface AccordionContentInterface {\n    subHeader: string;\n    value?: JSX.Element | string | number | boolean;\n}\n\nexport interface CustomAccordionProps {\n    header: string;\n    content: AccordionContentInterface[];\n    defaultExpanded?: boolean;\n}\n\nexport const CustomAccordion = ({\n    header,\n    content,\n    defaultExpanded,\n}: CustomAccordionProps) => {\n    const classes = useStyles();\n    return (\n        <Accordion {...{ defaultExpanded }} className={classes.accordion}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"h6\">{header}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <Grid container direction=\"column\" spacing={1}>\n                    {content.map((item, index) => (\n                        <Grid key={`accordion-${index}`} item container>\n                            <Grid item xs={6}>\n                                <Typography>{item.subHeader}</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\">\n                                    {item.value}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    ))}\n                </Grid>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    accordion: {\n        width: \"100%\",\n    },\n}));\n","import { Address, Order } from \"../Interfaces\";\nimport { includes, pickBy } from \"lodash\";\n\nexport const destructureOrder = (data: Order) => {\n    const orderData = pickBy(\n        data,\n        (_, key) => !includes([\"address\", \"orderType\", \"associations\"], key)\n    );\n    const address = data.address;\n    const orderType = data.orderType;\n    const associations = data.associations;\n    const landSurvey = data.landSurvey;\n    return {\n        address,\n        orderType,\n        orderData,\n        associations,\n        landSurvey,\n    };\n};\n\nexport const getAddressStr = (address: Address) => {\n    const { address1, address2, unit, zipCode, city, state } = address;\n    return `${address1}${address2 ? ` ${address2}` : \"\"}${\n        unit ? ` ${unit}` : \"\"\n    }, ${state} ${city} ${zipCode} `;\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {\n    Order,\n    OrderTypesInterface,\n    OrderData,\n    Org,\n    CreateOrder,\n    LandSurveyDetails,\n} from \"../Interfaces\";\nimport { UserContext } from \"../context/UserContext\";\nimport firebase from \"firebase\";\nimport {\n    AccordionContentInterface,\n    CustomAccordion,\n    CustomAccordionProps,\n} from \"./CutomAccordion\";\nimport { getAddressStr } from \"../utils/orders\";\n\ninterface Props {\n    order: Order | CreateOrder;\n    type: \"create\" | \"info\";\n}\n\nconst orderTypeText = new Map<keyof OrderTypesInterface, string>([\n    [\"lienSearch\", \"Lien Search\"],\n    [\"estoppelLetter\", \"Estoppel Letter\"],\n    [\"landSurvey\", \"Land Survey\"],\n    [\"permitResolution\", \"Permit Resolution\"],\n]);\n\nconst orderInfoText = new Map<keyof OrderData, string>([\n    [\"folio\", \"Folio\"],\n    [\"legalDescription\", \"legal Description\"],\n    [\"closingDate\", \"Closing Date\"],\n    [\"neededDate\", \"Needed Date\"],\n    [\"seller\", \"Seller\"],\n    [\"buyer\", \"Buyer\"],\n    [\"listingAgent\", \"Listing Agent\"],\n    [\"listingAgentPhone\", \"Listing Agent Phone\"],\n    [\"specialInstructions\", \"Special Instructions\"],\n]);\n\nconst landSurveyDetailsText = new Map<keyof LandSurveyDetails, string>([\n    [\"buyerCertification\", \"Buyer Certification\"],\n    [\"lenderCertification\", \"Lender Certification\"],\n    [\"titleCompany\", \"Title Company\"],\n    [\"underwriterCertification\", \"Underwriter Certficiation\"],\n]);\n\nconst orderDetails: Array<keyof OrderData> = [\n    \"folio\",\n    \"closingDate\",\n    \"neededDate\",\n    \"buyer\",\n    \"listingAgent\",\n    \"listingAgentPhone\",\n    \"legalDescription\",\n    \"specialInstructions\",\n];\n\nconst landSurveyDetails: Array<keyof LandSurveyDetails> = [\n    \"buyerCertification\",\n    \"lenderCertification\",\n    \"titleCompany\",\n    \"underwriterCertification\",\n];\n\nexport const DisplayOrder = ({ order, type }: Props) => {\n    const userData = useContext(UserContext);\n    const db = firebase.firestore();\n\n    const [org, setOrg] = useState<Org | null>(null);\n    const [requestedBy, setRequestedBy] = useState<string | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (order.orgId) {\n            db.collection(\"organizations\")\n                .doc(order.orgId)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) setOrg(null);\n                    setOrg(doc.data() as Org);\n                })\n                .catch((err) => console.log(err))\n                .finally(() => setLoading(false));\n        } else {\n            setOrg(null);\n            setLoading(false);\n        }\n    }, [order, db]);\n\n    useEffect(() => {\n        if (type === \"info\" && order.requestedBy) {\n            db.collection(\"users\")\n                .doc(order.requestedBy)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) setRequestedBy(null);\n                    setRequestedBy(doc.data()?.email ?? (\"\" as string));\n                })\n                .catch((err) => console.log(\"here\", err))\n                .finally(() => setLoading(false));\n        } else {\n            setRequestedBy(userData?.email ?? \"\");\n        }\n    }, [order, type, db, userData]);\n\n    const getOrderTypes: () => AccordionContentInterface[] = () => {\n        const elements = [];\n        for (let [key, value] of Object.entries(order.orderType)) {\n            const el = {\n                subHeader: orderTypeText.get(key as keyof OrderTypesInterface) ?? \"\",\n                value: value.isActive ? <CheckIcon /> : <CloseIcon />,\n            };\n            elements.push(el);\n        }\n        return elements;\n    };\n\n    const displayInfo: () => AccordionContentInterface[] = () => {\n        return orderDetails.map((detail) => {\n            return {\n                subHeader: orderInfoText.get(detail) ?? \"\",\n                value: order[detail] || \"--\",\n            };\n        });\n    };\n\n    const getLandSurveyInfo: () => AccordionContentInterface[] = () => {\n        const details = landSurveyDetails.map((detail) => ({\n            subHeader: landSurveyDetailsText.get(detail) ?? \"\",\n            value: order.landSurvey![detail] || \"--\",\n        }));\n        const hardCopy = {\n            subHeader: \"Include Hard Copy\",\n            value: order.landSurvey!.hardCopy ? <CheckIcon /> : <CloseIcon />,\n        };\n        return [...details, hardCopy];\n    };\n\n    if (loading) return <></>;\n\n    const accordions: CustomAccordionProps[] = [\n        {\n            header: \"Property Address\",\n            content: [\n                {\n                    subHeader: getAddressStr(order.address),\n                },\n            ],\n            defaultExpanded: true,\n        },\n        {\n            header: \"Requested By\",\n            content: [\n                {\n                    subHeader: \"User Email\",\n                    value: requestedBy ?? \"No user Found\",\n                },\n                {\n                    subHeader: \"Organization\",\n                    value: org ? org.name : \"No Company Found\",\n                },\n            ],\n        },\n        {\n            header: \"Type of Order\",\n            content: getOrderTypes(),\n        },\n        {\n            header: \"Order Details\",\n            content: displayInfo(),\n        },\n    ];\n\n    if (order.orderType.landSurvey.isActive) {\n        accordions.push({\n            header: \"Land Survey Info\",\n            content: getLandSurveyInfo()\n        });\n    }\n\n    return (\n        <>\n\n            {accordions.map((accordion, index) => (\n                <CustomAccordion\n                    key={`displayOrder-${index}`}\n                    header={accordion.header}\n                    content={accordion.content}\n                />\n            ))}\n        </>\n    );\n};\n","import React, { useState, useContext, useMemo } from \"react\";\nimport { CreateWrapper } from \"../../components/CreateWrapper\";\nimport firebase from \"firebase/app\";\nimport {\n    OrderTypesInterface,\n    OrderData,\n    CreateOrder,\n    Address,\n    LandSurveyDetails,\n} from \"../../Interfaces\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { DisplayOrder } from \"../../components/DisplayOrder\";\nimport { useHistory } from \"react-router-dom\";\nimport { Associations } from \"./NewOrder\";\nimport { EmptyState } from \"../../components/EmpyState\";\n\ninterface Props {\n    data: OrderData;\n    address: Address;\n    landSurvey: LandSurveyDetails;\n    associations: Associations;\n    orderType: OrderTypesInterface;\n    id: string;\n}\n\nexport const Step3 = ({\n    data,\n    associations,\n    orderType,\n    address,\n    landSurvey,\n    id,\n}: Props) => {\n    const [loading, setLoading] = useState(false);\n    const [orderComplete, setOrderComplete] = useState(false);\n\n    const userData = useContext(UserContext);\n    const history = useHistory();\n\n    const db = firebase.firestore();\n\n    const order = useMemo(() => {\n        let o: CreateOrder = {\n            ...data,\n            address,\n            orderType,\n            requestedBy: userData?.uid || \"\",\n            orgId: userData?.orgId || \"\",\n            created_on: Date.now(),\n            status: 'inProgress',\n        };\n        if (orderType.landSurvey.isActive) {\n            o.landSurvey = landSurvey;\n        }\n        if (orderType.estoppelLetter.isActive) {\n            o.associations = associations;\n        }\n        return o;\n    }, [data, landSurvey, associations, orderType, address, userData]);\n\n    const onSubmit = async () => {\n        setLoading(true);\n        try {\n            if (id) {\n                await db.collection(\"orders\").doc(id).update(order);\n                history.push(`/order/${id}`);\n            } else {\n                await db.collection(\"orders\").add(order);\n                setOrderComplete(true);\n            }\n        } catch (err) {\n            console.log(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const completeContent = (\n        <EmptyState\n            imageFile=\"complete.svg\"\n            title=\"Order Complete!\"\n            description=\"We are working on your oder\"\n            button={{\n                text: \"Go to dashboard\",\n                onClick: () => history.push(\"/\"),\n            }}\n        />\n    );\n    const content = orderComplete ? (\n        completeContent\n    ) : (\n        <DisplayOrder {...{ order }} type=\"create\" />\n    );\n\n    return (\n        <CreateWrapper\n            {...{ content }}\n            isLast\n            onNext={onSubmit}\n            disabled={loading}\n            hideActions={orderComplete}\n        />\n    );\n};\n","import React from \"react\";\nimport { Paper, makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport { orderTypeEnumKeys, OrderTypeEnum } from \"../Interfaces\";\nimport LandscapeIcon from \"@material-ui/icons/Landscape\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PolicyIcon from \"@material-ui/icons/Policy\";\n\ninterface Props {\n    type: orderTypeEnumKeys;\n    selected: Boolean;\n}\n\nconst getIcon: Map<orderTypeEnumKeys, JSX.Element> = new Map([\n    [\"landSurvey\", <LandscapeIcon />],\n    [\"estoppelLetter\", <EmailIcon />],\n    [\"lienSearch\", <SearchIcon />],\n    [\"permitResolution\", <PolicyIcon />],\n]);\n\nexport const OrderCard = ({ type, selected }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={`${classes.container} ${selected ? classes.selected : ''}`}>\n            <Grid container alignItems=\"center\" spacing={1}>\n                <Grid item>\n                    <div>{getIcon.get(type)}</div>\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"h6\">\n                        {OrderTypeEnum[type]}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(3),\n    },\n    icon: {\n        margin: theme.spacing(0, 2),\n    },\n    selected: {\n        borderColor: theme.palette.primary.main,\n        border: 'solid'\n    }\n}));\n","import React from \"react\";\nimport { CreateWrapper } from \"../../components/CreateWrapper\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { OrderTypesInterface } from \"../../Interfaces\";\nimport { OrderCard } from \"../../components/OrderCard\";\n\ninterface Props {\n    basePath: string;\n    orderTypes: OrderTypesInterface;\n    setOrderTypes: React.Dispatch<React.SetStateAction<OrderTypesInterface>>;\n}\nexport const Step1 = ({ basePath, orderTypes, setOrderTypes }: Props) => {\n    const history = useHistory();\n\n    const onNext = () => {\n        history.push(`${basePath}/2`, {\n            orderType: orderTypes,\n        });\n    };\n\n    const typeCards: {\n        name: keyof OrderTypesInterface;\n        label: string;\n        selected: boolean;\n        description: string;\n    }[] = [\n        {\n            name: \"lienSearch\",\n            label: \"Lien Search\",\n            selected: orderTypes.lienSearch.isActive,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"estoppelLetter\",\n            label: \"Estoppel Letter\",\n            selected: orderTypes.estoppelLetter.isActive,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"landSurvey\",\n            label: \"Land Survey\",\n            selected: orderTypes.landSurvey.isActive,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n        {\n            name: \"permitResolution\",\n            label: \"Permit Resolution\",\n            selected: orderTypes.permitResolution.isActive,\n            description: \"Lorep ilsum Lorep ilsumLorep ilsumLorep ilsum\",\n        },\n    ];\n\n    const handleDataChange = (type: keyof OrderTypesInterface) => {\n        setOrderTypes((c) => {\n            let curr = { ...c };\n            curr[type].isActive = !c[type].isActive;\n            return curr;\n        });\n    };\n\n    const content = (\n        <>\n            <Grid item>\n                <Typography variant=\"h6\">Select Type of Order</Typography>\n                <Divider />\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body1\">\n                    You can select multiple order types for the same property\n                </Typography>\n            </Grid>\n            <Grid item container spacing={2}>\n                {typeCards.map((type, index) => (\n                    <Grid\n                        key={`type-${index}`}\n                        item\n                        xs={6}\n                        md={3}\n                        onClick={() => handleDataChange(type.name)}\n                    >\n                        <OrderCard\n                            type={type.name}\n                            selected={orderTypes[type.name].isActive}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n\n    return (\n        <CreateWrapper\n            {...{ content }}\n            isFirst\n            {...{ onNext }}\n            disabled={!typeCards.find((card) => card.selected)}\n        />\n    );\n};\n","import React, { useEffect } from 'react';\nimport { Grid, Typography, Divider, TextField, Button, IconButton } from '@material-ui/core';\nimport { Associations, blankAssociation } from '../views/NewOrder/NewOrder';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport {some} from 'lodash';\n\ninterface Props {\n    setAssociations: React.Dispatch<React.SetStateAction<Associations>>,\n    associations: Associations\n    setIsAssociationsReady: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface AssociationData {\n    name: string\n    number: string\n}\n\nexport const AssociationForm = ({setAssociations, associations, setIsAssociationsReady}: Props) => {\n    \n    const addAssociation = () => {\n        setAssociations(c => [...c, {...blankAssociation}])\n    }\n\n    const removeAssociation = (index: number) => {\n        setAssociations(c => {\n            let arr = [...c];\n            arr.splice(index, 1);\n            return arr;\n        })\n    }\n\n    const handleDataChange = (name: keyof AssociationData, e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\n        const updatedData = [...associations];\n        updatedData[index][name] = e.target.value;\n        setAssociations(updatedData);\n    };\n\n    useEffect(() => {\n        const isReady = !associations.some(item => some(item, (value) => !value) )\n        setIsAssociationsReady(isReady)\n    }, [associations, setIsAssociationsReady])\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\">Associations (Estoppel Letter)</Typography>\n                <Divider />\n            </Grid>\n            {associations.map((entry, index) => (\n                <Grid item container key={`association-form-${index}`} alignItems=\"center\" spacing={2}>\n                    <Grid item container alignItems=\"center\" spacing={1} xs={6} md={6}>\n                        {index !== 0 && (\n                            <Grid item xs={1}>\n                                <IconButton onClick={() => removeAssociation(index)} size=\"small\">\n                                    <CloseIcon />\n                                </IconButton>\n                            </Grid>\n                        )}\n                        <Grid item xs={index !== 0 ? 11 : 12}>\n                            <TextField fullWidth \n                                autoComplete='nope'\n                                required={true} \n                                label='Association Name'\n                                value={entry.name}\n                                variant=\"outlined\"\n                                onChange={e => handleDataChange('name', e, index) } />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                        <TextField fullWidth \n                            autoComplete='nope'\n                            required={true}\n                            label='Association Number'\n                            value={entry.number}\n                            variant=\"outlined\"\n                            onChange={e => handleDataChange('number', e, index) } />\n                    </Grid>\n                </Grid>\n            ))}\n            <Grid item xs={3}>\n                <Button variant='text' onClick={addAssociation}  startIcon={<AddIcon />}>\n                    Add Association\n                </Button> \n            </Grid>\n        </>\n    )\n}","import React from \"react\";\nimport {\n    TextField,\n    FormControl,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n} from \"@material-ui/core\";\n\ninterface Props<T extends object> {\n    isNotRequired?: boolean;\n    isNumber?: boolean;\n    label: string;\n    name: keyof T;\n    value: string | number | boolean;\n    setter: React.Dispatch<React.SetStateAction<T>>;\n    isBoolean?: boolean;\n}\n\nexport function InputGenerator<T extends object>({\n    isNotRequired,\n    name,\n    isNumber,\n    label,\n    value,\n    setter,\n    isBoolean,\n}: Props<T>) {\n    const handleChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n        const val = isNumber ? parseInt(e.target.value) : e.target.value;\n        setter((current) => {\n            let n = { ...current };\n            n[name] = (val as unknown) as T[keyof T];\n            return n;\n        });\n    };\n\n    return isBoolean ? (\n        <FormControl>\n            <FormGroup>\n                <FormControlLabel\n                    label={label}\n                    control={\n                        <Checkbox\n                            checked={value as boolean}\n                            onChange={() =>\n                                setter((c) => {\n                                    let n = { ...c };\n                                    n[name] = (!c[\n                                        name\n                                    ] as unknown) as T[keyof T];\n                                    return n;\n                                })\n                            }\n                        />\n                    }\n                />\n            </FormGroup>\n        </FormControl>\n    ) : (\n        <TextField\n            fullWidth\n            autoComplete=\"nope\"\n            required={!isNotRequired}\n            onChange={handleChange}\n            value={value}\n            label={label}\n            variant=\"outlined\"\n        />\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\nimport { LandSurveyDetailsEnum, LandSurveyDetails } from \"../Interfaces\";\nimport { InputGenerator } from \"./InputGenerator\";\ninterface Props {\n    landSurvey: LandSurveyDetails;\n    setLandSurvey: React.Dispatch<React.SetStateAction<LandSurveyDetails>>;\n    setIsLandSurveyReady: React.Dispatch<\n        React.SetStateAction<boolean>\n    >;\n}\n\ninterface InputList {\n    label: string;\n    key: keyof LandSurveyDetails;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isBoolean?: boolean;\n}\n\nexport const LandSurveyForm = ({\n    landSurvey,\n    setLandSurvey,\n    setIsLandSurveyReady,\n}: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: LandSurveyDetailsEnum[\"lenderCertification\"],\n            key: \"lenderCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"buyerCertification\"],\n            key: \"buyerCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"underwriterCertification\"],\n            key: \"underwriterCertification\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"titleCompany\"],\n            key: \"titleCompany\",\n            xs: 12,\n            md: 6,\n        },\n        {\n            label: LandSurveyDetailsEnum[\"hardCopy\"],\n            key: \"hardCopy\",\n            xs: 12,\n            md: 6,\n            isBoolean: true,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = !inputList.some(\n            (item) => item.key !== 'hardCopy' && !item.isNotRequired && !landSurvey[item.key]\n        );\n        setIsLandSurveyReady(isReady);\n    }, [inputList, landSurvey, setIsLandSurveyReady]);\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\">Land Survey</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={landSurvey[item.key] ?? \"\"}\n                            setter={setLandSurvey}\n                            label={item.label}\n                            isBoolean={item.isBoolean}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { Address, AddressEnum } from \"../../Interfaces\";\nimport { InputGenerator } from \"../InputGenerator\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\n\ninterface Props {\n    address: Address;\n    setAddress: React.Dispatch<React.SetStateAction<Address>>;\n    setIsAddressReady: React.Dispatch<React.SetStateAction<boolean>>\n}\n\ninterface InputList {\n    label: string;\n    key: keyof Address;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isNumber?: boolean;\n}\n\nexport const AddressForm = ({ address, setAddress, setIsAddressReady }: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: AddressEnum[\"address1\"],\n            key: \"address1\",\n            md: 6,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"address2\"],\n            key: \"address2\",\n            isNotRequired: true,\n            md: 6,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"unit\"],\n            key: \"unit\",\n            isNotRequired: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"city\"],\n            key: \"city\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"state\"],\n            key: \"state\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: AddressEnum[\"zipCode\"],\n            key: \"zipCode\",\n            md: 3,\n            xs: 12,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = inputList.some(item => !item.isNotRequired && !address[item.key] )\n        setIsAddressReady(!isReady)\n    }, [inputList, address, setIsAddressReady])\n\n    return (\n        <Grid item container spacing={2} xs={12} md={12} direction=\"column\">\n            <Grid item>\n                <Typography variant=\"h5\">Property Address</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={address[item.key] ?? \"\"}\n                            setter={setAddress}\n                            label={item.label}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { OrderData, OrderDataEnum } from \"../../Interfaces\";\nimport { InputGenerator } from \"../InputGenerator\";\nimport { Grid, Typography, Divider } from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\ninterface Props {\n    orderData: OrderData;\n    setOrderData: React.Dispatch<React.SetStateAction<OrderData>>;\n    setIsDataReady: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface InputList {\n    label: string;\n    key: keyof typeof OrderDataEnum;\n    isNotRequired?: boolean;\n    xs?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    md?: boolean | \"auto\" | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    isNumber?: boolean;\n}\n\nexport const DataForm = ({\n    orderData,\n    setOrderData,\n    setIsDataReady,\n}: Props) => {\n    const inputList: InputList[] = [\n        {\n            label: OrderDataEnum[\"orderNumber\"],\n            key: \"orderNumber\",\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"folio\"],\n            key: \"folio\",\n            isNumber: true,\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"legalDescription\"],\n            key: \"legalDescription\",\n            md: 4,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"seller\"],\n            key: \"seller\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"buyer\"],\n            key: \"buyer\",\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"listingAgent\"],\n            key: \"listingAgent\",\n            isNotRequired: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"listingAgentPhone\"],\n            key: \"listingAgentPhone\",\n            isNotRequired: true,\n            isNumber: true,\n            md: 3,\n            xs: 12,\n        },\n        {\n            label: OrderDataEnum[\"specialInstructions\"],\n            key: \"specialInstructions\",\n            isNotRequired: true,\n            md: 12,\n            xs: 12,\n        },\n    ];\n\n    useEffect(() => {\n        const isReady = inputList.some(item => !item.isNotRequired && !orderData[item.key]  )\n        setIsDataReady(!isReady);\n    }, [inputList, orderData, setIsDataReady]);\n\n    return (\n        <Grid item container spacing={2} xs={12} direction=\"column\">\n            <Grid item>\n                <Typography variant=\"h5\">Order Information</Typography>\n                <Divider />\n            </Grid>\n            <Grid item container spacing={2}>\n                {inputList.map((item, index) => (\n                    <Grid key={`data-${index}`} item xs={item.xs} md={item.md}>\n                        <InputGenerator\n                            name={item.key}\n                            isNotRequired={item.isNotRequired}\n                            value={orderData[item.key] ?? \"\"}\n                            setter={setOrderData}\n                            label={item.label}\n                        />\n                    </Grid>\n                ))}\n                <Grid item xs={12} md={6}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            fullWidth\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            inputVariant=\"outlined\"\n                            label={\"Needed Date\"}\n                            value={orderData.neededDate}\n                            onChange={(e) => {\n                                const newDate = e?.toLocaleDateString();\n                                console.log(newDate);\n                                setOrderData((c) => {\n                                    let n = { ...c };\n                                    n.neededDate = newDate ?? \"\";\n                                    return n;\n                                });\n                            }}\n                            KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            fullWidth\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            inputVariant=\"outlined\"\n                            label={\"Closing Date\"}\n                            value={orderData.closingDate}\n                            onChange={(e) => {\n                                const newDate = e?.toLocaleDateString();\n                                console.log(newDate);\n                                setOrderData((c) => {\n                                    let n = { ...c };\n                                    n.closingDate = newDate ?? \"\";\n                                    return n;\n                                });\n                            }}\n                            KeyboardButtonProps={{\n                                \"aria-label\": \"change date\",\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CreateWrapper } from \"./CreateWrapper\";\nimport { AssociationForm } from \"./AssociationForm\";\nimport { LandSurveyForm } from \"./LandSurveryForm\";\nimport { AddressForm } from \"./OrderForms/AddressForm\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Associations,\n    OrderData,\n    OrderTypesInterface,\n    LandSurveyDetails,\n    Address,\n} from \"../Interfaces\";\n\nimport { DataForm } from \"./OrderForms/DataForm\";\n\ninterface Props {\n    setData: React.Dispatch<React.SetStateAction<OrderData>>;\n    setAssociations: React.Dispatch<React.SetStateAction<Associations>>;\n    setLandSurvey: React.Dispatch<React.SetStateAction<LandSurveyDetails>>;\n    setAddress: React.Dispatch<React.SetStateAction<Address>>;\n    landSurvey: LandSurveyDetails;\n    address: Address;\n    associations: Associations;\n    orderTypes: OrderTypesInterface;\n    data: OrderData;\n    basePath: string;\n}\n\nexport const CreateOrderForm = ({\n    basePath,\n    setData,\n    setAssociations,\n    associations,\n    orderTypes,\n    address,\n    setAddress,\n    landSurvey,\n    setLandSurvey,\n    data,\n}: Props) => {\n    const history = useHistory();\n\n    const [isAddressReady, setIsAddressReady] = useState(false);\n    const [isDataReady, setIsDataReady] = useState(false);\n    const [isAssociationsReady, setIsAssociationsReady] = useState(false);\n    const [isLandSurveyReady, setIsLandSurveyReady] = useState(false);\n\n    const onSubmit = () => {\n        setData(data);\n        history.push(`${basePath}/3`, {\n            orderType: orderTypes,\n            data,\n            associations,\n        });\n    };\n\n    const isReady =\n        isAddressReady &&\n        isDataReady &&\n        (orderTypes.estoppelLetter.isActive ? isAssociationsReady : true) &&\n        (orderTypes.landSurvey.isActive ? isLandSurveyReady : true);\n\n    const content = (\n        <>\n            <Grid item container spacing={2}>\n                <AddressForm\n                    {...{ setIsAddressReady }}\n                    {...{ address }}\n                    {...{ setAddress }}\n                />\n            </Grid>\n            <Grid item container spacing={2}>\n                <DataForm\n                    {...{ setIsDataReady }}\n                    orderData={data}\n                    setOrderData={setData}\n                />\n            </Grid>\n            <Grid item container spacing={2}>\n                {orderTypes.estoppelLetter.isActive && (\n                    <Grid\n                        item\n                        container\n                        spacing={2}\n                        xs={12}\n                        md={orderTypes.landSurvey.isActive ? 6 : 12}\n                        direction=\"column\"\n                    >\n                        <AssociationForm\n                            {...{ setIsAssociationsReady }}\n                            {...{ setAssociations }}\n                            {...{ associations }}\n                        />\n                    </Grid>\n                )}\n                {orderTypes.landSurvey.isActive && (\n                    <Grid\n                        item\n                        container\n                        spacing={2}\n                        xs={12}\n                        md={orderTypes.estoppelLetter.isActive ? 6 : 12}\n                        direction=\"column\"\n                    >\n                        <LandSurveyForm\n                            {...{ setIsLandSurveyReady }}\n                            {...{ landSurvey }}\n                            {...{ setLandSurvey }}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </>\n    );\n\n    return (\n        <CreateWrapper {...{ content }} onNext={onSubmit} disabled={!isReady} />\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { FullScreenCreate } from \"../../components/FullScreenCreate\";\nimport { Step3 } from \"./Step3\";\nimport { Step1 } from \"./Step1\";\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\nimport {\n    OrderTypesInterface,\n    OrderData,\n    Address,\n    LandSurveyDetails,\n    Order,\n    emptyOrdersType\n} from \"../../Interfaces\";\nimport firebase from \"firebase/app\";\nimport { CreateOrderForm } from \"../../components/CreateOrderForm\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { destructureOrder } from \"../../utils/orders\";\nimport { extend } from \"lodash\";\n\nconst blankAddress: Address = {\n    address1: \"\",\n    address2: \"\",\n    unit: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n};\n\nconst bankLandSurvey: LandSurveyDetails = {\n    lenderCertification: \"\",\n    buyerCertification: \"\",\n    underwriterCertification: \"\",\n    titleCompany: \"\",\n    hardCopy: false,\n};\n\nconst blankData: OrderData = {\n    orderNumber: \"\",\n    specialInstructions: \"\",\n    folio: 0,\n    legalDescription: \"\",\n    closingDate: new Date().toLocaleDateString(),\n    neededDate: new Date().toLocaleDateString(),\n    seller: \"\",\n    buyer: \"\",\n    listingAgent: \"\",\n    listingAgentPhone: 0,\n};\n\nexport type Associations = Array<{ name: string; number: string }>;\n\nexport const blankAssociation = { name: \"\", number: \"\" };\n\ninterface locationState {\n    preOrderType: OrderTypesInterface;\n    data: OrderData;\n    associations: Associations;\n}\n\nexport const NewOrder = () => {\n    const history = useHistory<locationState>();\n\n    const {\n        location: {\n            state: {\n                preOrderType,\n                data: preData,\n                associations: preAssocations,\n            } = {\n                preOrderType: null,\n                data: null,\n                associations: [{ ...blankAssociation }],\n            },\n        },\n    } = history;\n\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState<OrderData>(preData || blankData);\n    const [address, setAddress] = useState<Address>(blankAddress);\n    const [landSurvey, setLandSurvey] = useState<LandSurveyDetails>(\n        bankLandSurvey\n    );\n    const [associations, setAssociations] = useState<Associations>(\n        preAssocations || [{ ...blankAssociation }]\n    );\n\n    const [orderTypes, setOrderTypes] = useState<OrderTypesInterface>(\n        {...preOrderType || emptyOrdersType}\n    );\n\n    const { step, id } = useParams();\n\n    useEffect(() => {\n        if (id) {\n            const db = firebase.firestore();\n            db.collection(\"orders\")\n                .doc(id)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) {\n                        history.push(\"/\");\n                    } else {\n                        const data = doc.data() as Order;\n                        const {\n                            orderData,\n                            orderType,\n                            associations,\n                            address,\n                            landSurvey,\n                        } = destructureOrder(data);\n                        setData(orderData as OrderData);\n                        setOrderTypes(orderType);\n                        setAssociations((c) => {\n                            if (associations) {\n                                return extend(associations);\n                            }\n                            return [blankAssociation];\n                        });\n                        setAddress(address);\n                        setLandSurvey((c) => {\n                            if (landSurvey) {\n                                return extend(c, landSurvey);\n                            }\n                            return bankLandSurvey;\n                        });\n                    }\n                })\n                .catch((err) => console.log(\"Order error\", err))\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [history, id]);\n\n    const basePath = id ? `/update/${id}` : \"/new-order\";\n    const cancelPath = id ? `/order/${id}` : \"/\";\n    if (loading) return <CircularProgress />;\n    if (!step) return <Redirect to=\"/\" />;\n\n    const stepComponents = [\n        {\n            label: \"Type of Order\",\n            component: (\n                <Step1\n                    {...{ basePath }}\n                    {...{ orderTypes }}\n                    {...{ setOrderTypes }}\n                />\n            ),\n        },\n        {\n            label: \"Property Information\",\n            component: (\n                <CreateOrderForm\n                    {...{ address }}\n                    {...{ setAddress }}\n                    {...{ setData }}\n                    {...{ setAssociations }}\n                    {...{ associations }}\n                    {...{ setLandSurvey }}\n                    {...{ landSurvey }}\n                    {...{ orderTypes }}\n                    {...{ data }}\n                    {...{ basePath }}\n                />\n            ),\n        },\n        {\n            label: \"Confirm Order\",\n            component: (\n                <Step3\n                    {...{ address }}\n                    {...{ landSurvey }}\n                    {...{ associations }}\n                    {...{ id }}\n                    {...{ data }}\n                    orderType={orderTypes}\n                />\n            ),\n        },\n    ];\n\n    return (\n        <FullScreenCreate\n            cancelPath={cancelPath}\n            {...{ stepComponents }}\n            activeStep={step}\n            toolbarHeader=\"Create New Order\"\n        />\n    );\n};\n","import React from \"react\";\nimport { makeStyles, CssBaseline } from \"@material-ui/core\";\n\ninterface Props {\n    children: JSX.Element;\n}\n\nexport const AuthWrapper: React.FC<Props> = ({ children }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            {children}\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(theme=> ({\n    root: {\n        height: '100vh',\n        backgroundColor: theme.palette.primary.main,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n}));\n","import React, { useContext } from \"react\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport {\n    Toolbar,\n    IconButton,\n    MenuItem,\n    makeStyles,\n    Menu,\n    Divider,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport * as Firebase from \"firebase\";\nimport { UserContext } from \"../context/UserContext\";\nimport { DRAWER_WIDTH } from \"./AppWrapper\";\nimport { TitleContext } from \"../context/TitleContext\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n        flexGrow: 1,\n    },\n    logo: {\n        height: 60,\n        width: 140,\n    },\n    divider: {\n        backgroundColor: \"#8a818126\",\n    },\n    appBar: {\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: DRAWER_WIDTH,\n            width: `calc(100% - ${DRAWER_WIDTH}px)`,\n        },\n        top: 0,\n        left: \"auto\",\n        right: 0,\n        position: \"absolute\",\n        zIndex: 1100,\n        boxSizing: \"border-box\",\n    },\n    toolBar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        paddingLeft: 100,\n        paddingRight: 100,\n        alignItems: \"center\",\n        paddingTop: 20,\n    },\n}));\n\nexport const AppHeader = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const { title } = useContext(TitleContext);\n\n    const currentUser = useContext(UserContext);\n    const history = useHistory();\n    \n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = async () => {\n        await Firebase.auth().signOut();\n    };\n\n    return (\n        <div className={classes.appBar}>\n            <Toolbar className={classes.toolBar}>\n                <Typography variant=\"h4\">{title}</Typography>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={() => history.push('/profile')}>\n                        <ListItemAvatar>\n                            <Avatar>{currentUser?.email.charAt(0)}</Avatar>\n                        </ListItemAvatar>\n                        <ListItemText>{currentUser?.email}</ListItemText>\n                    </MenuItem>\n                    <Divider className={classes.divider} />\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n            </Toolbar>\n        </div>\n    );\n};\n","import {createContext} from 'react';\n\ninterface LoadingContext {\n    loading: boolean\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const LoadingContext = createContext<LoadingContext>({\n    loading: false,\n    setLoading: () => {}\n});","import {\n    Divider,\n    Drawer,\n    Hidden,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n} from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport { DRAWER_WIDTH } from \"../AppWrapper\";\nimport { UserContext } from \"../../context/UserContext\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const LeftNav = () => {\n    const classes = useStyles();\n\n    const user = useContext(UserContext);\n    const history = useHistory();\n    const { pathname } = useLocation();\n\n    const options = [\n        {\n            label: \"My Orders\",\n            icon: <LibraryBooksIcon />,\n            action: () => history.push(\"/\"),\n            divider: !!user?.admin,\n            selected: [\"/\", \"/order/:id\"].includes(pathname),\n        },\n    ];\n\n    if (user?.admin) {\n        options.push(\n            {\n                label: \"Manage Employees\",\n                icon: <SupervisorAccountIcon />,\n                action: () => history.push(\"/admin/employees\"),\n                divider: false,\n                selected: pathname === \"/admin/employees\",\n            },\n            {\n                label: \"Manage Clients\",\n                icon: <BusinessIcon />,\n                action: () => history.push(\"/admin/clients\"),\n                divider: false,\n                selected: pathname === \"/admin/clients\",\n            }\n        );\n    }\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden xsDown implementation=\"js\">\n                <Drawer\n                    anchor=\"left\"\n                    variant=\"permanent\"\n                    open\n                    classes={{ paper: classes.drawerPaper }}\n                >\n                    <div className={classes.logoContainer}>\n                        <img\n                            alt=\"\"\n                            className={classes.logo}\n                            src={`${process.env.PUBLIC_URL}/logo-transparent.png`}\n                        />\n                    </div>\n                    <List>\n                        {options.map((option, index) => (\n                            <React.Fragment key={`left-nav-${index}`}>\n                                <ListItem\n                                    button\n                                    onClick={option.action}\n                                    selected={option.selected}\n                                >\n                                    <ListItemIcon>{option.icon}</ListItemIcon>\n                                    <ListItemText primary={option.label} />\n                                </ListItem>\n                                {option.divider && <Divider />}\n                            </React.Fragment>\n                        ))}\n                    </List>\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawerPaper: {\n        width: DRAWER_WIDTH,\n        backgroundColor: theme.palette.primary.main,\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: DRAWER_WIDTH,\n            flexShrink: 0,\n        },\n    },\n    logo: {\n        height: 90,\n        width: 200,\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n    },\n}));\n","import { Breadcrumbs, Button, Grid, Link, makeStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { RouterParams } from \"../Routes\";\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport { ActionButtonContext } from \"../context/ActionButtonContext\";\n\nexport const NavigationBar = () => {\n    const { id } = useParams<RouterParams>();\n\n    const classes = useStyles();\n\n    const {actionButton} = useContext(ActionButtonContext);\n\n    const history = useHistory();\n\n    return (\n        <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link\n                        color=\"inherit\"\n                        onClick={() => history.push(\"/\")}\n                        className={classes.pointer}\n                    >\n                        All\n                    </Link>\n                    {id && (\n                        <Link\n                            color=\"inherit\"\n                            className={classes.link}\n                        >\n                            <LibraryBooksIcon className={classes.icon} />       \n                            {actionButton?.breadcrumbText || id}\n                        </Link>\n                    )}\n                </Breadcrumbs>\n            </Grid>\n            {actionButton && (\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={actionButton.action}\n                    >\n                        {actionButton.label}\n                    </Button>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    pointer: {\n        cursor: \"pointer\",\n    },\n    link: {\n        display: 'flex'\n    },\n    icon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n","import React, { useState } from \"react\";\nimport {\n    Toolbar,\n    makeStyles,\n    LinearProgress,\n    CssBaseline,\n} from \"@material-ui/core\";\n\nimport { AppHeader } from \"./AppHeader\";\nimport { LoadingContext } from \"../context/LoadingContext\";\nimport { LeftNav } from \"./LeftNav/LeftNav\";\nimport { TitleContext } from \"../context/TitleContext\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport {\n    ActionButtonInterface,\n    ActionButtonContext,\n} from \"../context/ActionButtonContext\";\n\nexport interface AppWrapperParams {\n    noPadding?: boolean;\n    noBreadCrumb?: boolean;\n}\ninterface Props extends AppWrapperParams {\n    children: JSX.Element;\n}\n\nexport const DRAWER_WIDTH = 240;\n\nexport const AppWrapper: React.FC<Props> = ({\n    children,\n    noBreadCrumb,\n    noPadding,\n}) => {\n    const [loading, setLoading] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [\n        actionButton,\n        setNavigationBar,\n    ] = useState<ActionButtonInterface | null>(null);\n\n    const classes = useStyles();\n\n    return (\n        <LoadingContext.Provider value={{ loading, setLoading }}>\n            <TitleContext.Provider value={{ title, setTitle }}>\n                <ActionButtonContext.Provider\n                    value={{ actionButton, setNavigationBar }}\n                >\n                    <div className={classes.root}>\n                        <CssBaseline />\n                        <AppHeader />\n                        <LeftNav />\n                        {loading && <LinearProgress />}\n                        <main\n                            className={`${classes.content} ${\n                                !noPadding ? classes.paddingContent : undefined\n                            }`}\n                        >\n                            <Toolbar />\n                            {!noBreadCrumb && (\n                                <div className={classes.bottomMargin}>\n                                    <NavigationBar />\n                                </div>\n                            )}\n                            {children}\n                        </main>\n                    </div>\n                </ActionButtonContext.Provider>\n            </TitleContext.Provider>\n        </LoadingContext.Provider>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingTop: 20,\n        width: \"100%\",\n    },\n    paddingContent: {\n        paddingLeft: 100,\n        paddingRight: 100,\n    },\n    root: {\n        display: \"flex\",\n    },\n    bottomMargin: {\n        marginBottom: theme.spacing(4),\n    },\n}));\n","import { createContext } from \"react\";\n\ninterface SnackContextInterface {\n    setMessage: React.Dispatch<React.SetStateAction<string>>;\n    setMessageType: React.Dispatch<React.SetStateAction<'success' | 'error'>>;\n}\n\nexport const SnackContext = createContext<SnackContextInterface>({\n    setMessage: () => {},\n    setMessageType: () => {},\n});\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport {\n    Grid,\n    makeStyles,\n    Button,\n    Paper,\n    Typography,\n    IconButton,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { UserContext } from \"../context/UserContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { map } from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { EmptyState } from \"./EmpyState\";\nimport { SnackContext } from \"../context/SnackContext\";\n\ninterface Props {\n    orderId: string;\n    orgId: string;\n}\n\nexport const UploadDocuments = ({ orderId, orgId }: Props) => {\n    const [listOfFiles, setListOfFiles] = useState<string[]>([]);\n    const [uploadLoading, setUploadLoading] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const docsPath = `org-${orgId}/order-${orderId}/`;\n\n    const { setMessage, setMessageType } = useContext(SnackContext);\n    const user = useContext(UserContext);\n\n    const db = firebase.storage();\n\n    const catchError = useCallback((err: any) => {\n        setMessageType(\"error\");\n        setMessage(err && err.message);\n    }, [setMessage, setMessageType]);\n\n    const createSuccess = (message: string) => {\n        setMessageType(\"success\");\n        setMessage(message);\n    };\n\n    const deleteFile = (fileName: string) => {\n        const storageRef = db.ref();\n        const deleteReference = storageRef.child(docsPath);\n        deleteReference\n            .child(fileName)\n            .delete()\n            .then(() => {\n                createSuccess(`Succesfully Delete ${fileName}`);\n                listFiles();\n            })\n            .catch((err) => {\n                catchError(err);\n            });\n    };\n\n    const listFiles = useCallback(() => {\n        if (user) {\n            const storageRef = db.ref();\n            let listRef = storageRef.child(docsPath);\n            listRef\n                .listAll()\n                .then((res) => {\n                    setListOfFiles(res.items.map((item) => item.name));\n                })\n                .catch((err) => catchError(err))\n                .finally(() => setLoading(false));\n        }\n    }, [db, user, docsPath, catchError]);\n\n    const onUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const files = e.target.files;\n        if (files) {\n            const storageRef = db.ref();\n            const uploadReference = storageRef.child(docsPath);\n            const prom = map(files, (file) => {\n                const fileRef = uploadReference.child(file.name);\n                return fileRef.put(file);\n            });\n            setUploadLoading(true);\n            Promise.all(prom)\n                .then(() => {\n                    createSuccess(\"Succesful Upload\");\n                    listFiles();\n                })\n                .catch((err) => catchError(err))\n                .finally(() => setUploadLoading(false));\n        }\n    };\n\n    const onDownload = (fileName: string) => {\n        const fileRef = db.ref(`${docsPath}${fileName}`);\n        fileRef\n            .getDownloadURL()\n            .then((url) => {\n                var xhr = new XMLHttpRequest();\n                xhr.responseType = \"blob\";\n                xhr.onload = function () {\n                    var blob = xhr.response;\n                    const url = window.URL.createObjectURL(blob);\n                    const link = document.createElement(\"a\");\n                    link.href = url;\n                    link.setAttribute(\"download\", fileName);\n                    document.body.appendChild(link);\n                    link.click();\n                    link.parentNode?.removeChild(link);\n                };\n                xhr.open(\"GET\", url);\n                xhr.send();\n            })\n            .catch((err) => console.log(err));\n    };\n\n    useEffect(() => {\n        listFiles();\n    }, [listFiles]);\n\n    const classes = useStyles();\n\n    if (loading) return <CircularProgress />\n\n    return (\n        <Paper className={classes.fullWidth}>\n            <Grid\n                container\n                direction=\"column\"\n                spacing={3}\n                className={classes.cardContainer}\n            >\n                <Grid\n                    item\n                    container\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">Documents</Typography>\n                    </Grid>\n                    {user && user.admin && (\n                        <Grid\n                            item\n                            container\n                            spacing={1}\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                        >\n                            {uploadLoading && (\n                                <Grid item>\n                                    <CircularProgress />\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <input\n                                    className={classes.input}\n                                    style={{ display: \"none\" }}\n                                    id=\"raised-button-file\"\n                                    multiple\n                                    type=\"file\"\n                                    onChange={onUpload}\n                                />\n                                <label htmlFor=\"raised-button-file\">\n                                    <Button\n                                        size=\"large\"\n                                        component=\"span\"\n                                        variant=\"outlined\"\n                                        disabled={uploadLoading}\n                                    >\n                                        Upload New File\n                                    </Button>\n                                </label>\n                            </Grid>\n                        </Grid>\n                    )}\n                </Grid>\n                <Grid item container direction=\"column\" spacing={2}>\n                    {listOfFiles.length === 0 ? (\n                        <EmptyState\n                            width={200}\n                            title=\"No documents yet\"\n                            imageFile=\"documents.svg\"\n                        />\n                    ) : (\n                        listOfFiles.map((file, index) => (\n                            <Grid\n                                key={`file-${index}`}\n                                item\n                                container\n                                justify=\"space-between\"\n                                wrap=\"nowrap\"\n                            >\n                                <Grid\n                                    item\n                                    container\n                                    spacing={1}\n                                    alignItems=\"center\"\n                                    wrap=\"nowrap\"\n                                >\n                                    <Grid item>\n                                        <DescriptionIcon />\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"body1\" noWrap>\n                                            {file}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <IconButton\n                                        onClick={() => onDownload(file)}\n                                    >\n                                        <GetAppIcon />\n                                    </IconButton>\n                                </Grid>\n                                {user && user.admin && (\n                                    <Grid item>\n                                        <IconButton\n                                            onClick={() => deleteFile(file)}\n                                        >\n                                            <CloseIcon />\n                                        </IconButton>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        ))\n                    )}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        display: \"none\",\n    },\n    cardContainer: {\n        padding: theme.spacing(3),\n    },\n    fullWidth: {\n        width: \"100%\",\n    },\n}));\n","import {\n    Grid,\n    IconButton,\n    makeStyles,\n    Paper,\n    Typography,\n} from \"@material-ui/core\";\nimport React, { isValidElement } from \"react\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\n\ninterface Data {\n    title: string;\n    value: JSX.Element | string | number;\n    icon: JSX.Element;\n}\nexport interface KpiInterface {\n    data: Data[];\n    title: string;\n    action?: () => void;\n}\n\ninterface Props {\n    kpis: KpiInterface[];\n}\n\nexport const KPI = ({ kpis }: Props) => {\n    const classes = useStyles();\n\n    const getItem = (kpi: Data, index: number) => (\n        <Grid\n            key={`${kpi.title}-${index}`}\n            item\n            container\n            alignItems=\"center\"\n            wrap=\"nowrap\"\n            spacing={2}\n            xs={6}\n        >\n            <Grid item className={classes.icon}>\n                {kpi.icon}\n            </Grid>\n            <Grid item container direction=\"column\">\n                <Grid item>\n                    {isValidElement(kpi.value) ? (\n                        kpi.value\n                    ) : (\n                        <Typography>{kpi.value}</Typography>\n                    )}\n                </Grid>\n                <Grid item>\n                    <Typography variant=\"body2\">{kpi.title}</Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <Grid container spacing={2}>\n            {kpis.map((kpi, index) => (\n                <Grid\n                    key={`kpi-${index}`}\n                    item\n                    container\n                    justify=\"space-between\"\n                    wrap=\"nowrap\"\n                    xs={6}\n                >\n                    <Paper className={classes.paper}>\n                        <Grid\n                            item\n                            container\n                            direction=\"column\"\n                            spacing={2}\n                            className={classes.container}\n                        >\n                            <Grid\n                                item\n                                container\n                                wrap=\"nowrap\"\n                                justify=\"space-between\"\n                            >\n                                <Grid item>\n                                    <Typography variant=\"h6\">\n                                        {kpi.title}\n                                    </Typography>\n                                </Grid>\n                                {kpi.action && (\n                                    <Grid item>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={kpi.action}\n                                        >\n                                            <EditRoundedIcon />\n                                        </IconButton>\n                                    </Grid>\n                                )}\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                {kpi.data.map((data, index) =>\n                                    getItem(data, index)\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: theme.spacing(2, 3),\n    },\n    icon: {\n        display: \"flex\",\n        alignSelf: \"center\",\n    },\n    paper: {\n        width: \"100%\",\n    },\n}));\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport {\n    OrderTypeStatusEnum, orderTypeStatusEnumKeys\n} from \"../../Interfaces\";\n\ninterface Props {\n    currentStatus: orderTypeStatusEnumKeys;\n    setCurrentStatus: React.Dispatch<\n        React.SetStateAction<orderTypeStatusEnumKeys>\n    >;\n}\n\nexport const OrderStatusTypeController = ({\n    currentStatus,\n    setCurrentStatus,\n}: Props) => {\n\n    return (\n        <TextField\n            select\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            value={currentStatus}\n            onChange={(e) =>\n                setCurrentStatus(e.target.value as orderTypeStatusEnumKeys)\n            }\n        >\n            {Object.keys(OrderTypeStatusEnum).map((option, index) => (\n                <MenuItem key={`status-${index}`} value={option}>\n                    {OrderTypeStatusEnum[option as orderTypeStatusEnumKeys]}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport firebase from \"firebase/app\";\nimport { UserData } from \"../../Interfaces\";\nimport { UserContext } from \"../../context/UserContext\";\n\ninterface Props {\n    currentAssignee: string;\n    setCurrentAssignee: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const OrderAssigneeController = ({\n    currentAssignee,\n    setCurrentAssignee,\n}: Props) => {\n    const [userOptions, setUserOptions] = useState<UserData[]>([]);\n\n    const user = useContext(UserContext);\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (user?.admin) {\n            db.collection(\"employees\")\n                .get()\n                .then((querySnapshot) => {\n                    const arr: UserData[] = [];\n                    querySnapshot.forEach((doc) => {\n                        arr.push({ ...(doc.data() as UserData) });\n                    });\n                    setUserOptions(arr);\n                })\n                .catch((err) => console.log(err));\n        }\n    }, [user, db]);\n\n    return (\n        <TextField\n            select\n            variant=\"outlined\"\n            fullWidth\n            value={currentAssignee || ' '}\n            size=\"small\"\n            onChange={(e) => setCurrentAssignee(e.target.value)}\n        >\n            <MenuItem value=\" \">Not Assigned Yet</MenuItem>\n            {userOptions.map((option, index) => (\n                <MenuItem key={`status-${index}`} value={option.email}>\n                    {option.email}\n                </MenuItem>\n            ))}\n        </TextField>\n    );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\ninterface Props {\n    estimatedDelivery: string;\n    setEstimatedDelivery: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const EstimatedDeliveryController = ({\n    estimatedDelivery,\n    setEstimatedDelivery,\n}: Props) => {\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                fullWidth\n                variant=\"inline\"\n                size=\"small\"\n                format=\"MM/dd/yyyy\"\n                id=\"date-picker-inline\"\n                inputVariant=\"outlined\"\n                emptyLabel=\"Not Determined\"\n                value={estimatedDelivery || null}\n                disablePast\n                onChange={(e) => {\n                    const newDate = e?.toLocaleDateString();\n                    setEstimatedDelivery(newDate || '');\n                }}\n                KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                }}\n            />\n        </MuiPickersUtilsProvider>\n    );\n};\n","import React, { useContext, useMemo, useState } from \"react\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { Order, orderStatusEnumKeys, orderTypeEnumKeys } from \"../Interfaces\";\nimport { OrderStatusTypeController } from \"./OrderDetails/OrderStatusTypeController\";\nimport { CustomDrawer } from \"./CustomDrawer\";\nimport { OrderAssigneeController } from \"./OrderDetails/OrderAssigneeController\";\nimport firebase from \"firebase/app\";\nimport { SnackContext } from \"../context/SnackContext\";\nimport { EstimatedDeliveryController } from \"./OrderDetails/EstimatedDeliveryController\";\nimport { StatusSelector } from \"./StatusSelector\";\n\ninterface Props {\n    open: boolean;\n    onClose: () => void;\n    order: Order;\n    orderType?: orderTypeEnumKeys;\n    refreshOrder: () => void;\n}\n\nexport const ModifyOrderDrawer = ({\n    open,\n    onClose,\n    order,\n    orderType,\n    refreshOrder,\n}: Props) => {\n    const [currentStatus, setCurrentStatus] = useState<\n        orderStatusEnumKeys | \"\"\n    >(order.status);\n    const [currentTypeStatus, setCurrentTypeStatus] = useState(\n        orderType ? order.orderType[orderType].status : \"newOrder\"\n    );\n    const [currentAssignee, setCurrentAssignee] = useState(\n        orderType ? order.orderType[orderType].assignee : \"\"\n    );\n    const [estimatedDelivery, setEstimatedDelivery] = useState(\n        orderType ? order.orderType[orderType].estimatedDelivery : \"\"\n    );\n\n    const db = firebase.firestore();\n    const [loading, setLoading] = useState(false);\n    const { setMessage, setMessageType } = useContext(SnackContext);\n\n    const newStatus = useMemo(() => {\n        const newstat = { ...order };\n        if (orderType) {\n            newstat.orderType[orderType].assignee = currentAssignee;\n            newstat.orderType[orderType].estimatedDelivery = estimatedDelivery;\n            newstat.orderType[orderType].status = newstat.orderType[\n                orderType\n            ].status = currentTypeStatus;\n        } else {\n            newstat.status = currentStatus || \"inProgress\";\n        }\n        return newstat;\n    }, [\n        currentAssignee,\n        currentStatus,\n        estimatedDelivery,\n        order,\n        orderType,\n        currentTypeStatus,\n    ]);\n\n    const onApply = async () => {\n        setLoading(true);\n        try {\n            await db.collection(\"orders\").doc(order.id).update(newStatus);\n            refreshOrder();\n            setMessageType(\"success\");\n            setMessage(\"Order was modified\");\n        } catch (err) {\n            setMessageType(\"error\");\n            setMessage(err.message || err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const content = (\n        <Grid container direction=\"column\" spacing={3}>\n            <Grid item container direction=\"column\" spacing={1}>\n                <Grid item>\n                    <Typography variant=\"h6\">Order Status</Typography>\n                </Grid>\n                <Grid item>\n                    {orderType ? (\n                        <OrderStatusTypeController\n                            currentStatus={currentTypeStatus!}\n                            setCurrentStatus={setCurrentTypeStatus}\n                        />\n                    ) : (\n                        <StatusSelector\n                            status={currentStatus}\n                            setStatus={setCurrentStatus}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n            {orderType && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Asignee Employee</Typography>\n                    </Grid>\n                    <Grid item>\n                        <OrderAssigneeController\n                            {...{ currentAssignee }}\n                            {...{ setCurrentAssignee }}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            {orderType && (\n                <Grid item container direction=\"column\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h6\">Estimated Delivery</Typography>\n                    </Grid>\n                    <Grid item>\n                        <EstimatedDeliveryController\n                            {...{ estimatedDelivery }}\n                            {...{ setEstimatedDelivery }}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            <Grid item>\n                <Button\n                    variant=\"contained\"\n                    fullWidth\n                    color=\"primary\"\n                    onClick={onApply}\n                    disabled={loading}\n                >\n                    Aplly Changes\n                </Button>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <CustomDrawer\n            {...{ onClose }}\n            {...{ open }}\n            header=\"Modify Order\"\n            {...{ content }}\n        />\n    );\n};\n","import React from \"react\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface Props {\n    isActive: boolean;\n}\n\nexport const ActiveIcon = ({ isActive }: Props) => {\n    const classes = useStyles();\n    return isActive ? (\n        <CheckCircleIcon className={classes.active} />\n    ) : (\n        <CancelIcon className={classes.inactive} />\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    active: {\n        color: theme.palette.success.main,\n        display: 'flex',\n        alignSelf: 'center'\n    },\n    inactive: {\n        color: theme.palette.error.main,\n        display: 'flex',\n        alignSelf: 'center'\n    },\n}));\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport {\n    Order,\n    OrderTypeEnum,\n    orderTypeEnumKeys,\n    OrderTypeInterface,\n    OrderTypeStatusEnum,\n} from \"../Interfaces\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { LoadingContext } from \"../context/LoadingContext\";\nimport { DisplayOrder } from \"../components/DisplayOrder\";\nimport { UploadDocuments } from \"../components/UploadDocuments\";\nimport { TitleContext } from \"../context/TitleContext\";\nimport { RouterParams } from \"../Routes\";\nimport { KPI, KpiInterface } from \"../components/KPI\";\nimport Battery80Icon from \"@material-ui/icons/Battery80\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { ActionButtonContext } from \"../context/ActionButtonContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { ModifyOrderDrawer } from \"../components/ModifyOrderDrawer\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport { StatusChip } from \"../components/StatusChip\";\nimport LocalAirportIcon from \"@material-ui/icons/LocalAirport\";\nimport { ActiveIcon } from \"../components/ActiveIcon\";\n\nexport const OrderInfo = () => {\n    const [order, setOrder] = useState<Order | null>(null);\n\n    const { setLoading } = useContext(LoadingContext);\n    const { setTitle } = useContext(TitleContext);\n    const { setNavigationBar } = useContext(ActionButtonContext);\n    const user = useContext(UserContext);\n    const history = useHistory();\n    const {\n        pathname,\n        state: { updateOrder, modifyType } = { updateOrder: false, modifyType: undefined },\n    } = useLocation<{ updateOrder: boolean, modifyType: orderTypeEnumKeys | undefined }>();\n\n    useEffect(() => {\n        setTitle(\"Order Info\");\n    }, [setTitle]);\n\n    useEffect(() => {\n        if (user?.admin) {\n            setNavigationBar({\n                label: \"Modify Order\",\n                action: () =>\n                    history.push({\n                        pathname,\n                        state: {\n                            updateOrder: true,\n                        },\n                    }),\n                breadcrumbText: order?.orderCount,\n            });\n        } else {\n            setNavigationBar({\n                label: \"Update Order\",\n                action: () => history.push(`/update/${order?.id}/1`),\n                breadcrumbText: order?.orderCount,\n            });\n        }\n\n        return () => {\n            setNavigationBar(null);\n        };\n    }, [setNavigationBar, user, order, history, pathname]);\n\n    const { id } = useParams<RouterParams>();\n\n    const db = firebase.firestore();\n\n    const refreshOrder = useCallback(() => {\n        if (id) {\n            db.collection(\"orders\")\n                .doc(id)\n                .get()\n                .then((doc) => {\n                    if (!doc.exists) {\n                        console.log(\"No such document!\");\n                    } else {\n                        setOrder({ ...doc.data(), id: doc.id } as Order);\n                    }\n                })\n                .catch((err) => console.log(\"here\", err))\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [db, id, setLoading]);\n\n    useEffect(() => {\n        setLoading(true);\n        refreshOrder();\n    }, [setLoading, refreshOrder]);\n\n    if (!order) return <> </>;\n\n    const getIsActiveComponent = (isActive: boolean) => (\n        <Grid container spacing={1} alignItems=\"center\">\n            <Grid item>\n                <Typography>{isActive ? \"Ordered\" : \"Not Ordered\"}</Typography>\n            </Grid>\n            <Grid item>\n                <ActiveIcon {...{ isActive }} />\n            </Grid>\n        </Grid>\n    );\n\n    const getTypeData = (type: OrderTypeInterface) => {\n        return [\n            {\n                title: \"Active\",\n                value: getIsActiveComponent(type.isActive),\n                icon: <LocalAirportIcon />,\n            },\n            {\n                title: \"Status\",\n                value: type.isActive ? OrderTypeStatusEnum[type.status] : \"--\",\n                icon: <Battery80Icon />,\n            },\n            {\n                title: \"Assignee\",\n                value: type.isActive\n                    ? type.assignee\n                        ? type.assignee\n                        : \"Not Assigned Yet\"\n                    : \"--\",\n                icon: <PersonIcon />,\n            },\n            {\n                title: \"Estimated Delivery\",\n                value: type.isActive\n                    ? type.estimatedDelivery\n                        ? type.estimatedDelivery\n                        : \"TBD\"\n                    : \"--\",\n                icon: <CalendarTodayIcon />,\n            },\n        ];\n    };\n\n    const kpis: KpiInterface[] = [\n        {\n            title: OrderTypeEnum.lienSearch,\n            data:  getTypeData(order.orderType.lienSearch),\n            action: order.orderType.lienSearch.isActive && user?.admin ?  () => {\n                history.push({\n                    pathname,\n                    state: {\n                        updateOrder: true,\n                        modifyType: 'lienSearch'\n                    },\n                });\n            } : undefined,\n        },\n        {\n            title: OrderTypeEnum.estoppelLetter,\n            data:  getTypeData(order.orderType.estoppelLetter),\n            action: order.orderType.estoppelLetter.isActive && user?.admin ? () => {\n                history.push({\n                    pathname,\n                    state: {\n                        updateOrder: true,\n                        modifyType: 'estoppelLetter'\n                    },\n                });\n            } : undefined,\n        },\n        {\n            title: OrderTypeEnum.permitResolution,\n            data: getTypeData(order.orderType.permitResolution),\n            action: order.orderType.permitResolution.isActive && user?.admin ? () => {\n                history.push({\n                    pathname,\n                    state: {\n                        updateOrder: true,\n                        modifyType: 'permitResolution'\n                    },\n                }) \n            } : undefined,\n        },\n        {\n            title: OrderTypeEnum.landSurvey,\n            data: getTypeData(order.orderType.landSurvey),\n            action: order.orderType.landSurvey.isActive && user?.admin ? () => {\n                history.push({\n                    pathname,\n                    state: {\n                        updateOrder: true,\n                        modifyType: 'landSurvey'\n                    },\n                }) \n            } : undefined\n        },\n    ];\n\n    const onUpdateOrderClose = () => {\n        history.push({\n            pathname,\n            state: {\n                updateOrder: false,\n                modifyType: undefined\n            },\n        });\n    };\n\n    return (\n        <>\n            <ModifyOrderDrawer\n                {...{ order }}\n                open={updateOrder}\n                onClose={onUpdateOrderClose}\n                {...{ refreshOrder }}\n                orderType={modifyType}\n            />\n            <Grid container direction=\"column\" spacing={3}>\n                <Grid item container alignItems=\"center\" spacing={2}>\n                    <Grid item>\n                        <Typography variant=\"h5\">Order Status:</Typography>\n                    </Grid>\n                    <Grid item>\n                        <StatusChip status={order.status} />\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <KPI {...{ kpis }} />\n                </Grid>\n                <Grid item>\n                    <DisplayOrder {...{ order }} type=\"info\" />\n                </Grid>\n                <Grid item>\n                    <UploadDocuments orderId={id} orgId={order.orgId} />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n    TextField,\n    Button,\n    Grid,\n    Typography,\n    makeStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { PaperWrapper } from \"../../components/PaperWrapper\";\nimport { SnackContext } from \"../../context/SnackContext\";\n\nexport const ForgotPassword: React.FC = () => {\n    const [email, setEmail] = useState<string>(\"\");\n\n    const { setMessage, setMessageType } = useContext(SnackContext);\n\n    const classes = useStyles();\n    const onSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            await firebase.auth().sendPasswordResetEmail(email);\n            setMessageType(\"success\");\n            setMessage(\"Email Sent Succesfully\");\n        } catch (err) {\n            setMessage(\n                err.message ||\n                    \"We had troubles sending the email. Please try again.\"\n            );\n        }\n    };\n\n    return (\n        <PaperWrapper>\n            <form onSubmit={(e) => onSubmit(e)} className={classes.form}>\n                <img\n                    alt=\"\"\n                    className={classes.logo}\n                    src={`${process.env.PUBLIC_URL}/logo.png`}\n                />\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    spacing={4}\n                >\n                    {/* <Grid item >\n                        <Typography align=\"center\" variant=\"h5\">Login</Typography>\n                    </Grid> */}\n                    <Grid item>\n                        <TextField\n                            type=\"email\"\n                            fullWidth\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            label=\"email\"\n                            variant=\"outlined\"\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"submit\"\n                            disabled={!email}\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Submit Email\n                        </Button>\n                    </Grid>\n                    <Grid item container alignItems=\"center\" spacing={1}>\n                        <Grid item>\n                            <Typography>Already have your password?</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/\">Login</Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </form>\n        </PaperWrapper>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        alignSelf: \"center\",\n    },\n    logo: {\n        height: 70,\n        marginBottom: theme.spacing(3),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n}));\n","import React from \"react\";\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Divider,\n} from \"@material-ui/core\";\n\ninterface Props {\n    orgName: string\n    setOrgName: React.Dispatch<React.SetStateAction<string>>\n    phoneNumber: string\n    setPhoneNumber: React.Dispatch<React.SetStateAction<string>>\n    address: string\n    setAddress: React.Dispatch<React.SetStateAction<string>>\n    onCreateOrgClick: () => void;\n    loading: boolean\n}\n\nexport const CreateNewOrg = ({\n    orgName,\n    setOrgName,\n    onCreateOrgClick,\n    phoneNumber,\n    setAddress,\n    address,\n    setPhoneNumber,\n    loading\n}: Props) => {\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">\n                        Create New Organization\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"column\">\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Company Name\"\n                        variant=\"outlined\"\n                        value={orgName}\n                        onChange={(e) => setOrgName(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Phone Number\"\n                        variant=\"outlined\"\n                        value={phoneNumber}\n                        onChange={(e) => setPhoneNumber(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"Address\"\n                        variant=\"outlined\"\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!address || !phoneNumber || !orgName || loading}\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={onCreateOrgClick}\n                        color=\"primary\"\n                    >\n                        Create Organization\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import {\n    Divider,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Org } from \"../../Interfaces\";\n\ninterface Props {\n    orgs: Org[];\n}\n\nconst columns = [\"Organization\", \"ID\", \"Phone Number\", \"Orders\"];\n\nexport const OrgsTable = ({ orgs }: Props) => {\n    const records = orgs.map((org) => ({\n        columns: [\n            {\n                value: org.name,\n            },\n            {\n                value: org.id,\n            },\n            {\n                value: org.phoneNumber,\n            },\n            {\n                value: org.orderCount || 0,\n            },\n        ],\n    }));\n\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">Organizations</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Paper>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column, index) => (\n                                    <TableCell key={`orgs-columns-${index}`}>\n                                        {column}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {records.map((row, index) => (\n                                <TableRow key={`orgs-row-${index}`}>\n                                    {row.columns.map((col, index) => (\n                                        <TableCell\n                                            key={`${columns[index]}-cell-${index}`}\n                                        >\n                                            <Typography>{col.value}</Typography>\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Org } from \"../../Interfaces\";\nimport { CreateNewOrg } from \"./CreateNewOrg\";\nimport firebase from \"firebase\";\nimport { SnackContext } from \"../../context/SnackContext\";\nimport { TitleContext } from \"../../context/TitleContext\";\nimport { Grid } from \"@material-ui/core\";\nimport { OrgsTable } from \"./OrgsTable\";\n\nexport const ManageClients = () => {\n    const db = firebase.firestore();\n\n    const [orgs, setOrgs] = useState<Array<Org>>([]);\n    const [loading, setLoading] = useState(false);\n    const [orgPhoneNumber, setOrgPhoneNumber] = useState(\"\");\n    const [orgAddress, setOrgAddress] = useState(\"\");\n    const [orgName, setOrgName] = useState(\"\");\n\n    const { setTitle } = useContext(TitleContext);\n\n    useEffect(() => {\n        if (setTitle) {\n            setTitle(\"Manage Clients\");\n        }\n    }, [setTitle]);\n\n    const { setMessage, setMessageType } = useContext(SnackContext);\n\n    const getOrgs = useCallback(() => {\n        db.collection(\"organizations\")\n            .get()\n            .then((querySnapshot) => {\n                const arr: Org[] = [];\n                querySnapshot.forEach((doc) => {\n                    arr.push({ ...doc.data(), id: doc.id } as Org);\n                });\n                setOrgs(arr);\n            })\n            .catch((err) => console.log(err));\n    }, [db]);\n\n    useEffect(() => {\n        getOrgs()\n    }, [getOrgs])\n\n    const onCreateOrgClick = async () => {\n        setLoading(true)\n        try {\n            await db.collection(\"organizations\").add({\n                name: orgName,\n                users: [],\n                phoneNumber: orgPhoneNumber,\n                orderCount: 0,\n                address: orgAddress,\n                created_on: firebase.firestore.FieldValue.serverTimestamp(),\n            });\n            setMessageType(\"success\");\n            setMessage(\"Org Created Succesfully\");\n            setOrgName(\"\");\n            getOrgs();\n        } catch (err) {\n            setMessageType(\"error\");\n            setMessage(err.message || \"Please try again\");\n        } finally {\n            setLoading(false)\n        }\n    };\n\n    return (\n        <Grid container direction=\"column\" spacing={5}>\n            <Grid item>\n                <CreateNewOrg\n                    phoneNumber={orgPhoneNumber}\n                    setPhoneNumber={setOrgPhoneNumber}\n                    address={orgAddress}\n                    setAddress={setOrgAddress}\n                    {...{ onCreateOrgClick }}\n                    {...{ orgName }}\n                    {...{ setOrgName }}\n                    {...{loading}}\n                />\n            </Grid>\n            <Grid item>\n                <OrgsTable {...{ orgs }} />\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport {\n    Grid,\n    Typography,\n    TextField,\n    Button,\n    Divider,\n} from \"@material-ui/core\";\n\ninterface Props {\n    email: string;\n    setEmail: React.Dispatch<React.SetStateAction<string>>;\n    name: string;\n    setName: React.Dispatch<React.SetStateAction<string>>;\n    onSetNewAdminClick: () => void;\n    loading: boolean\n}\n\nexport const SetAdmin = ({\n    email,\n    setEmail,\n    name,\n    setName,\n    onSetNewAdminClick,\n    loading\n}: Props) => {\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">Add New Employee</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"column\">\n                <Grid item>\n                    <TextField\n                        size=\"small\"\n                        fullWidth\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        type=\"email\"\n                    />\n                </Grid>\n                <Grid item>\n                    <TextField\n                        size=\"small\"\n                        fullWidth\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!email || !name || loading}\n                        fullWidth\n                        variant=\"contained\"\n                        onClick={onSetNewAdminClick}\n                        color=\"primary\"\n                    >\n                        Create Employee\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import {\n    Divider,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Employee } from \"../../Interfaces\";\n\ninterface Props {\n    employees: Employee[];\n}\n\nconst columns = [\"Name\", \"Email\"];\n\nexport const EmployeesTable = ({ employees }: Props) => {\n    const records = employees.map((org) => ({\n        columns: [\n            {\n                value: org.name,\n            },\n            {\n                value: org.email,\n            },\n        ],\n    }));\n\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item container direction=\"column\" wrap=\"nowrap\">\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">Employees</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Paper>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column, index) => (\n                                    <TableCell\n                                        key={`employees-columns-${index}`}\n                                    >\n                                        {column}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {records.map((row, index) => (\n                                <TableRow key={`employees-row-${index}`}>\n                                    {row.columns.map((col, index) => (\n                                        <TableCell\n                                            key={`${columns[index]}-cell-${index}`}\n                                        >\n                                            <Typography>{col.value}</Typography>\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Employee } from \"../../Interfaces\";\nimport firebase from \"firebase\";\nimport { SnackContext } from \"../../context/SnackContext\";\nimport { Grid } from \"@material-ui/core\";\nimport { TitleContext } from \"../../context/TitleContext\";\nimport { SetAdmin } from \"./SetAdmin\";\nimport { EmployeesTable } from \"./EmployeesTable\";\n\nexport const ManageEmployees = () => {\n    const db = firebase.firestore();\n\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [employees, setEmployees] = useState<Employee[]>([]);\n    const [loading, setLoading] = useState(false);\n\n    const { setMessage, setMessageType } = useContext(SnackContext);\n\n    const { setTitle } = useContext(TitleContext);\n\n    useEffect(() => {\n        if (setTitle) {\n            setTitle(\"Manage Employees\");\n        }\n    }, [setTitle]);\n\n    const getEmployees = useCallback(() => {\n        db.collection(\"employees\")\n            .get()\n            .then((querySnapshot) => {\n                const arr: Employee[] = [];\n                querySnapshot.forEach((doc) => {\n                    arr.push({ ...doc.data(), id: doc.id } as Employee);\n                });\n                setEmployees(arr);\n            })\n            .catch((err) => console.log(err));\n    }, [db]);\n\n    useEffect(() => {\n        getEmployees();\n    }, [getEmployees]);\n\n    const setAdmin = () => {\n        setLoading(true)\n        const setAdminUser = firebase\n            .functions()\n            .httpsCallable(\"users-createEmployee\");\n        setAdminUser({ email, name })\n            .then(() => {\n                setMessageType(\"success\");\n                setMessage(\"Admin Set Succesfully\");\n            })\n            .catch((err) => {\n                setMessageType(\"error\");\n                setMessage(err.message || \"Please try again\");\n            }).finally(() => {\n                getEmployees()\n                setLoading(false)\n            });\n    };\n\n    const onSetNewAdminClick = () => {\n        setAdmin();\n    };\n\n    return (\n        <Grid container direction=\"column\" spacing={5}>\n            <Grid item>\n                <SetAdmin\n                    {...{ email }}\n                    {...{ setEmail }}\n                    {...{ name }}\n                    {...{ setName }}\n                    {...{ onSetNewAdminClick }}\n                    {...{loading}}\n                />\n            </Grid>\n            <Grid item>\n                <EmployeesTable {...{ employees }} />\n            </Grid>\n        </Grid>\n    );\n};\n","import { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { TitleContext } from \"../context/TitleContext\";\nimport firebase from \"firebase/app\";\nimport { SnackContext } from \"../context/SnackContext\";\n\nexport const UserProfile = () => {\n    const { setTitle } = useContext(TitleContext);\n    const { setMessage, setMessageType } = useContext(SnackContext);\n\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    \n\n    useEffect(() => {\n        setTitle(\"User Profile\");\n    }, [setTitle]);\n\n    const onUpdatePassword = () => {\n        setLoading(true);\n        const user = firebase.auth().currentUser;\n        const credential = firebase.auth.EmailAuthProvider.credential(\n            user?.email ?? '',\n            currentPassword\n        );\n        user?.reauthenticateWithCredential(credential)\n            .then(function () {\n                user.updatePassword(newPassword)\n                    .then(() => {\n                        setMessageType(\"success\");\n                        setMessage(\"Password Updated\");\n                    })\n                    .catch((err) => {\n                        setMessageType(\"error\");\n                        setMessage(err.message || \"Please try again\");\n                    })\n                    .finally(() => setLoading(false));\n            })\n            .catch((err) => {\n                setMessageType(\"error\");\n                setMessage(err.message || \"Please try again\");\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    // const onUpdateProfile = () => {\n    //     const user = firebase.auth().currentUser;\n    //     user?.updateProfile({\n    //         displayName: name\n    //     }).then(() => {\n    //         setMessageType(\"success\");\n    //         setMessage(\"Profile Updated\");\n    //     }).catch((err) => {\n    //         setMessageType(\"error\");\n    //         setMessage(err.message || \"Please try again\");\n    //     })\n    // }\n\n    return (\n        <Grid container direction=\"column\" spacing={4}>\n            {/* <Grid item container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Typography variant=\"subtitle1\">First Name</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        size=\"small\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Typography variant=\"subtitle1\">Email Address</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        disabled\n                        size=\"small\"\n                        helperText=\"At the moment we dont allow to change email address\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={email}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </Grid>\n            </Grid> */}\n            {/* <Grid item container alignItems=\"center\">\n                <Grid item xs={2}></Grid>\n                <Grid item xs={4}>\n                    <Button\n                        disabled={loading}\n                        size=\"small\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onUpdateProfile}\n                    >\n                        Update Profile\n                    </Button>\n                </Grid>\n            </Grid> */}\n            <Grid item container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Typography variant=\"subtitle1\">\n                        Current Password\n                    </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        type=\"password\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={currentPassword}\n                        onChange={(e) => setCurrentPassword(e.target.value)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Typography variant=\"subtitle1\">New Password</Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        type=\"password\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container alignItems=\"center\">\n                <Grid item xs={2}>\n                    <Typography variant=\"subtitle1\">\n                        Confirm Password\n                    </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <TextField\n                        type=\"password\"\n                        size=\"small\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container alignItems=\"center\">\n                <Grid item xs={2}></Grid>\n                <Grid item xs={4}>\n                    <Button\n                        disabled={\n                            loading ||\n                            !currentPassword ||\n                            !newPassword ||\n                            !confirmPassword ||\n                            newPassword !== confirmPassword\n                        }\n                        size=\"small\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onUpdatePassword}\n                    >\n                        Update Password\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { Login, Dashboard, CreateAccount, NewOrder } from \"./views\";\nimport { UserContext } from \"./context/UserContext\";\nimport { AuthWrapper, AppWrapper } from \"./components\";\nimport { OrderInfo } from \"./views/OrderInfo\";\nimport { ForgotPassword } from \"./views/auth/ForgotPassword\";\nimport { AppWrapperParams } from \"./components/AppWrapper\";\nimport { ManageClients } from \"./views/admin/ManageClients\";\nimport { ManageEmployees } from \"./views/admin/ManageEmployees\";\nimport { UserProfile } from \"./views/UserProfile\";\n\nconst authWrap = (component: JSX.Element): JSX.Element => (\n    <AuthWrapper>{component}</AuthWrapper>\n);\nconst appWrap = (\n    component: JSX.Element,\n    options?: AppWrapperParams\n): JSX.Element => <AppWrapper {...options}>{component}</AppWrapper>;\n\nexport interface RouterParams {\n    id: string;\n}\n\nexport const Routes: React.FC = () => {\n    const currentUser = useContext(UserContext);\n\n    if (currentUser?.uid) {\n        return (\n            <Switch>\n                <Route exact path=\"/\" render={() => appWrap(<Dashboard />)} />\n                <Route\n                    exact\n                    path=\"/new-order/:step\"\n                    render={() => appWrap(<NewOrder />)}\n                />\n                <Route\n                    exact\n                    path=\"/update/:id/:step\"\n                    render={() => appWrap(<NewOrder />)}\n                />\n                <Route\n                    exact\n                    path=\"/order/:id\"\n                    render={() => appWrap(<OrderInfo />)}\n                />\n                <Route\n                    exact\n                    path=\"/profile\"\n                    render={() =>\n                        appWrap(<UserProfile />, { noBreadCrumb: true })\n                    }\n                />\n                {currentUser.admin && (\n                    <>\n                        <Route\n                            exact\n                            path=\"/admin/employees\"\n                            render={() =>\n                                appWrap(<ManageEmployees />, {\n                                    noBreadCrumb: true,\n                                })\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/admin/clients\"\n                            render={() =>\n                                appWrap(<ManageClients />, {\n                                    noBreadCrumb: true,\n                                })\n                            }\n                        />\n                    </>\n                )}\n                <Redirect to=\"/\" />\n            </Switch>\n        );\n    } else {\n        return (\n            <Switch>\n                <Route exact path=\"/\" render={() => authWrap(<Login />)} />\n                <Route\n                    exact\n                    path=\"/create-account\"\n                    render={() => authWrap(<CreateAccount />)}\n                />\n                <Route\n                    exact\n                    path=\"/forgot-password\"\n                    render={() => authWrap(<ForgotPassword />)}\n                />\n                <Redirect to=\"/\" />\n            </Switch>\n        );\n    }\n};\n","import firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCa61N2rKPLU-m7RW-iQ1Xd2G8d2GL0to8\",\n    authDomain: \"lien-search-262720.firebaseapp.com\",\n    databaseURL: \"https://lien-search-262720.firebaseio.com\",\n    projectId: \"lien-search-262720\",\n    storageBucket: \"lien-search-262720.appspot.com\",\n    messagingSenderId: \"45974338820\",\n    appId: \"1:45974338820:web:762f88d7c893541b0ce451\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles, Snackbar, IconButton, Slide } from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst TRANSITION_TIMEOUT = 400;\n\ninterface Props {\n    message: string;\n    setMessage: React.Dispatch<React.SetStateAction<string>>;\n    messageType?: \"error\" | \"success\"; // error is default\n}\n\nfunction SlideTransition(props: TransitionProps) {\n    return <Slide {...props} direction=\"up\" timeout={TRANSITION_TIMEOUT} />;\n}\n\nexport const MessageSnackbar = ({\n    message,\n    setMessage,\n    messageType = \"error\",\n}: Props) => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(message ? true : false);\n\n    const timeoutRef = useRef<number>(0);\n    useEffect(() => {\n        return () => window.clearTimeout(timeoutRef.current);\n    }, []);\n\n    const handleClose = () => {\n        window.clearTimeout(timeoutRef.current);\n        setOpen(false);\n        timeoutRef.current = window.setTimeout(\n            () => setMessage(\"\"),\n            TRANSITION_TIMEOUT\n        );\n    };\n\n    useEffect(() => {\n        setOpen(message ? true : false);\n    }, [message]);\n\n    return (\n        <Snackbar\n            open={open}\n            onClose={handleClose}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n            autoHideDuration={6000}\n            ContentProps={{\n                className:\n                    messageType === \"error\" ? classes.error : classes.success,\n            }}\n            TransitionComponent={SlideTransition}\n            message={\n                <div className={classes.message}>\n                    {messageType === \"error\" && (\n                        <ErrorIcon className={classes.icon} />\n                    )}\n                    {messageType === \"success\" && (\n                        <CheckIcon className={classes.icon} />\n                    )}\n                    {message}\n                </div>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={handleClose}\n                >\n                    <CloseIcon />\n                </IconButton>,\n            ]}\n        />\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    success: {\n        backgroundColor: \"green\",\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Routes } from \"./Routes\";\nimport { UserContext } from \"./context/UserContext\";\nimport firebase from \"firebase/app\";\nimport \"./initFirebase\";\nimport { User } from \"./Interfaces\";\nimport { SnackContext } from \"./context/SnackContext\";\nimport { MessageSnackbar } from \"./components/SnackMessage\";\n\nconst history = createBrowserHistory();\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#fff200\",\n        },\n        secondary: {\n            main: \"#e32c2c\",\n        },\n    },\n    typography: {\n        fontFamily: \"Roboto\",\n        fontSize: 12,\n        subtitle1: {\n            fontWeight: \"bold\",\n        },\n        h5: {\n            fontWeight: 600,\n        },\n    },\n    spacing: 6,\n    overrides: {\n        MuiButton: {\n            root: {\n                height: 40,\n            },\n        },\n        MuiDivider: {\n            root: {\n                // backgroundColor: 'black'\n            },\n        },\n        MuiFormLabel: {\n            focused: {\n                borderColor: \"black\",\n            },\n            root: {\n                \"&$focused\": {\n                    color: \"black\",\n                },\n            },\n        },\n        MuiTextField: {\n            root: {\n                \"&.Mui-focused fieldset\": {\n                    borderColor: \"green\",\n                },\n            },\n        },\n        MuiOutlinedInput: {\n            root: {\n                \"&$focused\": {\n                    borderColor: \"black\",\n                },\n            },\n        },\n    },\n});\n\nconst App: React.FC = () => {\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [messageType, setMessageType] = useState<\"success\" | \"error\">(\n        \"error\"\n    );\n    const [message, setMessage] = useState(\"\");\n\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user) => {\n            if (user) {\n                try {\n                    const token = await user.getIdTokenResult();\n                    let userDoc;\n                    if (token.claims.admin) {\n                        userDoc = await db\n                            .collection(\"employees\")\n                            .doc(user.uid)\n                            .get();\n                    } else {\n                        userDoc = await db\n                            .collection(\"users\")\n                            .doc(user.uid)\n                            .get();\n                    }\n                    let userData;\n                    if (userDoc.exists) {\n                        userData = userDoc.data();\n                    }\n                    setCurrentUser({\n                        admin: token.claims.admin ?? false,\n                        orgId: userData?.orgId ?? \"\",\n                        name: userData?.name ?? \"\",\n                        phoneNumber: userData?.phoneNumber ?? \"\",\n                        email: user.email || \"\",\n                        uid: user.uid || \"\",\n                    });\n                } catch (err) {\n                    console.log(err);\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setCurrentUser(null);\n                setLoading(false);\n            }\n        });\n    }, [db]);\n\n    if (loading) return <></>;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <UserContext.Provider value={currentUser}>\n                <SnackContext.Provider value={{ setMessage, setMessageType }}>\n                    <MessageSnackbar\n                        {...{ message }}\n                        {...{ setMessage }}\n                        {...{ messageType }}\n                    />\n                    <Router history={history}>\n                        <Switch>\n                            <Routes />\n                        </Switch>\n                    </Router>\n                </SnackContext.Provider>\n            </UserContext.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('../firebase-messaging-sw.js')\n    .then(function(registration) {\n        console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function(err) {\n        console.log('Service worker registration failed, error:', err);\n    });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}